ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"main_cm4.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.write_voice,"ax",%progbits
  21              		.align	2
  22              		.global	write_voice
  23              		.thumb
  24              		.thumb_func
  25              		.type	write_voice, %function
  26              	write_voice:
  27              	.LFB577:
  28              		.file 1 "main_cm4.c"
   1:main_cm4.c    **** /* ========================================
   2:main_cm4.c    ****  *
   3:main_cm4.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:main_cm4.c    ****  * All Rights Reserved
   5:main_cm4.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main_cm4.c    ****  *
   7:main_cm4.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main_cm4.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:main_cm4.c    ****  *
  10:main_cm4.c    ****  * ========================================
  11:main_cm4.c    **** */
  12:main_cm4.c    **** #include "project.h"
  13:main_cm4.c    **** #include <stdio.h>
  14:main_cm4.c    **** 
  15:main_cm4.c    **** #define UART_HW ((CySCB_Type *) UART_SCB__HW)
  16:main_cm4.c    **** 
  17:main_cm4.c    **** #define FREQ 12000
  18:main_cm4.c    **** #define TIME 10
  19:main_cm4.c    **** #define SAMPLES FREQ*TIME
  20:main_cm4.c    **** 
  21:main_cm4.c    **** int write_voice();
  22:main_cm4.c    **** int play_voice();
  23:main_cm4.c    **** 
  24:main_cm4.c    **** int8_t voice[SAMPLES];
  25:main_cm4.c    **** //int8_t codes[SAMPLES];
  26:main_cm4.c    **** 
  27:main_cm4.c    **** int main(void)
  28:main_cm4.c    **** {
  29:main_cm4.c    ****     __enable_irq(); /* Enable global interrupts. */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 2


  30:main_cm4.c    ****     
  31:main_cm4.c    ****     UART_Start();
  32:main_cm4.c    ****     CapSense_Start();
  33:main_cm4.c    ****     setvbuf(stdin, NULL, _IONBF, 0);
  34:main_cm4.c    ****     
  35:main_cm4.c    ****     printf("\x1b[2J\x1b[H");
  36:main_cm4.c    ****     printf("------------------- CapSense VoiceRepeater log -------------------\r\n\n");
  37:main_cm4.c    **** 
  38:main_cm4.c    ****     for(;;)
  39:main_cm4.c    ****     {
  40:main_cm4.c    ****         CapSense_ScanAllWidgets();
  41:main_cm4.c    ****         if (!CapSense_IsBusy()) {
  42:main_cm4.c    ****             CapSense_ProcessAllWidgets();
  43:main_cm4.c    ****             if (CapSense_IsWidgetActive(CapSense_BUTTON0_WDGT_ID)) {
  44:main_cm4.c    ****                 write_voice();
  45:main_cm4.c    ****             }
  46:main_cm4.c    ****             if (CapSense_IsWidgetActive(CapSense_BUTTON1_WDGT_ID)) {
  47:main_cm4.c    ****                 play_voice();
  48:main_cm4.c    ****             }
  49:main_cm4.c    ****         }
  50:main_cm4.c    ****     }
  51:main_cm4.c    **** }
  52:main_cm4.c    **** 
  53:main_cm4.c    **** int write_voice()
  54:main_cm4.c    **** {
  29              		.loc 1 54 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
  40              	.LBB51:
  41              	.LBB52:
  42              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \file cy_gpio.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Provides an API declaration of the GPIO driver
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver provides an API to configure and access device Input/Output pins.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 3


  19:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The functions and other declarations used in this driver are in cy_gpio.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * and declarations in the PDL.
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * IO pins include all general purpose types such as GPIO, SIO, HSIO, AUXIO, and
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * their variants.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Initialization can be performed either at the port level or by configuring the
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * individual pins. For efficient use of code space, port
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuration should be used in the field. Refer to the product device header files 
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * for the list of supported ports and pins.
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Single pin configuration is performed by using \ref Cy_GPIO_Pin_FastInit 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   (provide specific values) or \ref Cy_GPIO_Pin_Init (provide a filled
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_pin_config_t structure).
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - An entire port can be configured using \ref Cy_GPIO_Port_Init. Provide a filled 
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_prt_config_t structure. The values in the structure are 
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   bitfields representing the desired value for each pin in the port.
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Pin configuration and management is based on the port address and pin number.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \ref Cy_GPIO_PortToAddr function can optionally be used to calculate the port
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   address from the port number at run-time.
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Once the pin/port initialization is complete, each pin can be accessed by 
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * specifying the port (GPIO_PRT_Type) and the pin (0-7) in the provided API 
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * functions.
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_configuration Configuration Considerations
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 1. Pin multiplexing is controlled through the High-Speed IO Matrix (HSIOM) selection.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    This allows the pin to connect to signal sources/sinks throughout the device,
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    as defined by the pin HSIOM selection options (en_hsiom_sel_t).
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 2. All pins are initialized to High-Z drive mode with HSIOM connected to CPU (SW
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    control digital pin only) at Power-On-Reset(POR).
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 3. Some API functions perform read-modify-write operations on shared port
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    registers. These functions are not thread safe and care must be taken when
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    called by the application.
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 4. Digital input buffer provides a high-impedance buffer for the external 
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    digital input. The input buffer is connected to the HSIOM for routing to 
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    the CPU port registers and selected peripheral. Enabling the input 
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    buffer provides possibility to read the pin state via the CPU.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    If pin is connected to an analog signal, the input buffer should be 
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    disabled to avoid crowbar currents. For more information refer to device 
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    TRM and the device datasheet.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Multiple pins on a port can be updated using direct port register writes with an
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * appropriate port mask. An example is shown below, highlighting the different ways of 
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuring Port 1 pins using:
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data register
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data set register
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data clear register
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c Cy_GPIO_Snippet
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_more_information More Information
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 4


  76:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_MISRA MISRA-C Compliance
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver has the following specific deviations:
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>MISRA Rule</th>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Class (Required/Advisory)</th>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Description</th>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Description of Deviation(s)</th>
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>11.4</td>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A cast should not be performed between a pointer to object type and
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         a different pointer to object type.</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td> This code is safe because the elements of both GPIO_PRT_V1_Type and GPIO_PRT_V2_Type 
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *          types have identical alignment.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>16.7</td>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A pointer parameter in a function prototype should be declared as pointer 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         to const if the pointer is not used to modify the addressed object.</td>
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>The objects pointed to by the base addresses of the GPIO port are not always modified.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         While a const qualifier can be used in select scenarios, it brings little benefit
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         in adding this to the affected functions. </td>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_changelog Changelog
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td rowspan="3">1.20</td>
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Driver library directory-structure simplification.</td>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added the functions for configuring the AMux bus splitter switch cells:
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     - \ref Cy_GPIO_SetAmuxSplit
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     - \ref Cy_GPIO_GetAmuxSplit
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added a new functionality related to AMux bus.</td>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added register access layer. Use register access macros instead
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         of direct register access using dereferenced pointers.</td>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Makes register access device-independent, so that the PDL does 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         not need to be recompiled for each supported part number.</td>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10.1</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Updated description for the functions: \ref Cy_GPIO_GetInterruptStatus, 
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         \ref Cy_GPIO_GetInterruptMask, \ref Cy_GPIO_GetInterruptStatusMasked.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 5


 133:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         Minor documentation edits.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Documentation update and clarification</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10</td>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added input parameter validation to the API functions</td>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.0</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Initial version</td>
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_macros Macros
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_functions Functions
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_init       Initialization Functions
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_gpio       GPIO Functions
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_sio        SIO Functions
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_interrupt  Port Interrupt Functions
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \}
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_data_structures Data Structures
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_enums Enumerated Types
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if !defined(CY_GPIO_H)
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_H
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include <stddef.h>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device.h"
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device_headers.h"
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_syslib.h"
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if defined(__cplusplus)
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** extern "C" {
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \addtogroup group_gpio_macros
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver major version */
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MAJOR       1
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver minor version */
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MINOR       20
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO driver ID */
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_ID CY_PDL_DRV_ID(0x16U)
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 6


 190:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Enumerations
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_enums
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO Driver error codes */
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum 
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_SUCCESS   = 0x00U,                                    /**< Returned successful */
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_BAD_PARAM = CY_GPIO_ID | CY_PDL_STATUS_ERROR | 0x01U, /**< Bad parameter was passed */
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_en_gpio_status_t;
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** AMux switch open/close config */
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_OPENALL,   /**< Open ground switch. Open right switch. Open left switch */
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_L,         /**< Open ground switch. Open right switch. Close left switch */
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_R,         /**< Open ground switch. Close right switch. Open left switch */
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_LR,        /**< Open ground switch. Close right switch. Close left switch */
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_G,         /**< Close ground switch. Open right switch. Open left switch */
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_GL,        /**< Close ground switch. Open right switch. Close left switch */
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_GR,        /**< Close ground switch. Close right switch. Open left switch */
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_GLR,       /**< Close ground switch. Close right switch. Close left switch */
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }cy_en_gpio_amuxconnect_t;
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * AMux Bus selection
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUXBUSA,       /**< AMuxBus A */
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUXBUSB        /**< AMuxBus B */
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }cy_en_gpio_amuxselect_t;
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_enums */
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Configuration Structures
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_data_structures
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a port of GPIO pins */
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t out;           /**< Initial output data for the IO pins in the port */
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrMask;      /**< Interrupt enable mask for the port interrupt */
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrCfg;       /**< Port pin interrupt edge detection configuration */
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfg;           /**< Port pin drive modes and input buffer enable configuration */
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgIn;         /**< Port pin input buffer configuration */
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgOut;        /**< Port pin output buffer configuration */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 7


 247:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgSIO;        /**< Port SIO pins configuration */
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel0Active;    /**< HSIOM selection for port pins 0,1,2,3 */
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel1Active;    /**< HSIOM selection for port pins 4,5,6,7 */
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_prt_config_t;
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a single GPIO pin */
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t outVal;         /**< Pin output state */
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveMode;      /**< Drive mode */
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     en_hsiom_sel_t hsiom;    /**< HSIOM selection */
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intEdge;        /**< Interrupt Edge type */
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intMask;        /**< Interrupt enable mask */
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtrip;          /**< Input buffer voltage trip type */
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t slewRate;       /**< Output buffer slew rate */
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveSel;       /**< Drive strength */
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vregEn;         /**< SIO pair output buffer mode */
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t ibufMode;       /**< SIO pair input buffer mode */
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtripSel;       /**< SIO pair input buffer trip point */
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vrefSel;        /**< SIO pair reference voltage for input buffer trip point */
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vohSel;         /**< SIO pair regulated voltage output level */
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_pin_config_t;
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_data_structures */
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Constants
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \cond INTERNAL */
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* General Constants */
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_HALF                       (4UL)      /**< Half-way point of a GPIO port */
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_DEINIT                     (0UL)      /**< De-init value for port registers */
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* GPIO Masks */
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_MASK                     (0x1FUL)   /**< HSIOM selection mask */
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_OUT_MASK                       (0x01UL)   /**< Single pin mask for OUT register */
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IN_MASK                        (0x01UL)   /**< Single pin mask for IN register */
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_DM_MASK                    (0x0FUL)   /**< Single pin mask for drive mode in CF
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_IN_VTRIP_SEL_MASK          (0x01UL)   /**< Single pin mask for VTRIP selection 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_SLOW_MASK              (0x01UL)   /**< Single pin mask for slew rate in CFG
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_SEL_MASK         (0x03UL)   /**< Single pin mask for drive strength i
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_STATUS_MASK               (0x01UL)   /**< Single pin mask for interrupt status
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EN_MASK                   (0x01UL)   /**< Single pin mask for interrupt status
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_MASKED_MASK               (0x01UL)   /**< Single pin mask for masked interrupt
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_SET_MASK                  (0x01UL)   /**< Single pin mask for setting the inte
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EDGE_MASK                 (0x03UL)   /**< Single pin mask for interrupt edge t
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FLT_EDGE_MASK             (0x07UL)   /**< Single pin mask for setting filtered
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* SIO Masks */
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREG_EN_MASK                   (0x01UL)   /**< Single SIO pin mask for voltage regu
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_MASK                      (0x01UL)   /**< Single SIO pin mask for input buffer
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_SHIFT                     (0x01UL)   /**< Single SIO pin shift for input buffe
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_MASK                 (0x01UL)   /**< Single SIO pin mask for the input bu
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_SHIFT                (0x02UL)   /**< Single SIO pin shift for the input b
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_MASK                  (0x03UL)   /**< Single SIO pin mask for voltage refe
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 8


 304:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_SHIFT                 (0x03UL)   /**< Single SIO pin shift for voltage ref
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_MASK                   (0x07UL)   /**< Single SIO pin mask for VOH */
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_SHIFT                  (0x05UL)   /**< Single SIO pin shift for VOH */
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Special mask for SIO pin pair setting */
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_ODD_PIN_MASK               (0x00FEUL) /**< SIO pin pair selection mask */
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_PIN_MASK                   (0x00FFUL) /**< SIO pin pair mask */
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Offsets */
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_OFFSET                   (3UL)      /**< Offset for HSIOM */
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_MODE_OFFSET              (2UL)      /**< Offset for Drive mode */
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INBUF_OFFSET                   (3UL)      /**< Offset for input buffer */
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_OFFSET           (16UL)     /**< Offset for drive strength */
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_CFG_OFFSET                (1UL)      /**< Offset for interrupt config */
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FILT_OFFSET               (18UL)     /**< Offset for filtered interrupt config
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_SIO_OFFSET                 (2UL)      /**< Offset for SIO config */
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation constants */
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PINS_MAX                       (8UL)      /**< Number of pins in the port */
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_PINS_MASK                  (0x0000000FFUL)
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK     (GPIO_PRT_INTR_CFG_EDGE0_SEL_Msk | \
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE1_SEL_Msk | \
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE2_SEL_Msk | \
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE3_SEL_Msk | \
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE4_SEL_Msk | \
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE5_SEL_Msk | \
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE6_SEL_Msk | \
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE7_SEL_Msk)
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_RANGE_MASK        (CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK | \
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_EDGE_SEL_Msk | \
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_SEL_Msk)
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INT_MASK_MASK              (0x0000001FFUL)
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_SEL_ACTIVE_MASK            (0x1FFFFFFFUL)
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define GPIO_MAX_SPLIT_CELL_SEGMENTS           (9U)
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation macros */
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_VALID(pinNum)           (CY_GPIO_PINS_MAX > (pinNum))
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_FILTER_PIN_VALID(pinNum)    (CY_GPIO_PINS_MAX >= (pinNum))
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VALUE_VALID(outVal)         (1UL >= (outVal))
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DM_VALID(driveMode)         (0U == ((driveMode) & (uint32_t)~CY_GPIO_CFG_DM_MASK
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_HSIOM_VALID(hsiom)          (0U == ((hsiom) & (uint32_t)~CY_GPIO_HSIOM_MASK))
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INT_EDGE_VALID(intEdge)     ((CY_GPIO_INTR_DISABLE  == (intEdge)) || \
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_RISING   == (intEdge)) || \
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_FALLING  == (intEdge)) || \
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_BOTH     == (intEdge)))
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DRIVE_SEL_VALID(driveSel)   ((CY_GPIO_DRIVE_FULL    == (driveSel)) || \
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_2     == (driveSel)) || \
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_4     == (driveSel)) || \
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_8     == (driveSel)))
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VREF_SEL_VALID(vrefSel)     ((CY_SIO_VREF_PINREF    == (vrefSel)) || \
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_1_2V      == (vrefSel)) || \
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_A    == (vrefSel)) || \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 9


 361:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_B    == (vrefSel)))
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VOH_SEL_VALID(vrefSel)      ((CY_SIO_VOH_1_00       == (vrefSel)) || \
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_25       == (vrefSel)) || \
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_49       == (vrefSel)) || \
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_67       == (vrefSel)) || \
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_08       == (vrefSel)) || \
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_50       == (vrefSel)) || \
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_78       == (vrefSel)) || \
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_4_16       == (vrefSel)))
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                    
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_BIT_VALID(pinBit)       (0U == ((pinBit) & (uint32_t)~CY_GPIO_PRT_PINS_MASK)
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_CFG_VALID(intrCfg)     (0U == ((intrCfg) & (uint32_t)~CY_GPIO_PRT_INTR_CFG_
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_MASK_VALID(intrMask)   (0U == ((intrMask) & (uint32_t)~CY_GPIO_PRT_INT_MASK
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_SEL_ACT_VALID(selActive)    (0U == ((selActive) & (uint32_t)~CY_GPIO_PRT_SEL_ACT
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_AMUX_SPLIT_VALID(switchCtrl)       (((uint32_t) (switchCtrl)) < GPIO_MAX_SPLIT_C
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_AMUX_CONNECT_VALID(amuxConnect)    ((CY_GPIO_AMUX_OPENALL == (amuxConnect)) || \
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_L       == (amuxConnect)) || \
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_R       == (amuxConnect)) || \
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_LR      == (amuxConnect)) || \
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_G       == (amuxConnect)) || \
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_GL      == (amuxConnect)) || \
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_GR      == (amuxConnect)) || \
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_GLR     == (amuxConnect)))
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_AMUX_SELECT_VALID(amuxBus)       ((CY_GPIO_AMUXBUSA       == (amuxBus)) || \
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                      (CY_GPIO_AMUXBUSB       == (amuxBus)))
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \endcond */
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Constants
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_macros
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveModes Pin drive mode
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive mode of the pin.
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_ANALOG                      (0x00UL) /**< Analog High-Z. Input buffer off */
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_IN_OFF               (0x02UL) /**< Resistive Pull-Up. Input buffer off */
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN_IN_OFF             (0x03UL) /**< Resistive Pull-Down. Input buffer off 
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW_IN_OFF         (0x04UL) /**< Open Drain, Drives Low. Input buffer o
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF        (0x05UL) /**< Open Drain, Drives High. Input buffer 
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG_IN_OFF               (0x06UL) /**< Strong Drive. Input buffer off */
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN_IN_OFF          (0x07UL) /**< Resistive Pull-Up/Down. Input buffer o
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_HIGHZ                       (0x08UL) /**< Digital High-Z. Input buffer on */
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP                      (0x0AUL) /**< Resistive Pull-Up. Input buffer on */
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN                    (0x0BUL) /**< Resistive Pull-Down. Input buffer on *
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW                (0x0CUL) /**< Open Drain, Drives Low. Input buffer o
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 10


 418:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH               (0x0DUL) /**< Open Drain, Drives High. Input buffer 
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG                      (0x0EUL) /**< Strong Drive. Input buffer on */
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN                 (0x0FUL) /**< Resistive Pull-Up/Down. Input buffer o
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_vtrip Voltage trip mode
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the voltage trip type on the pin.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_CMOS                     (0x00UL) /**< Input buffer compatible with CMOS and 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_TTL                      (0x01UL) /**< Input buffer compatible with TTL and M
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_slewRate Slew Rate Mode
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the slew rate of the pin.
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_FAST                      (0x00UL) /**< Fast slew rate */
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_SLOW                      (0x01UL) /**< Slow slew rate */
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveStrength Pin drive strength
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive strength of the pin.
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_FULL                     (0x00UL) /**< Full drive strength: Max drive current
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_2                      (0x01UL) /**< 1/2 drive strength: 1/2 drive current 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_4                      (0x02UL) /**< 1/4 drive strength: 1/4 drive current 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_8                      (0x03UL) /**< 1/8 drive strength: 1/8 drive current 
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_interruptTrigger Interrupt trigger type
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the interrupt trigger type on the pin.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_DISABLE                   (0x00UL) /**< Disable the pin interrupt generation *
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_RISING                    (0x01UL) /**< Rising-Edge interrupt */
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FALLING                   (0x02UL) /**< Falling-Edge interrupt */
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_BOTH                      (0x03UL) /**< Both-Edge interrupt */
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVreg SIO output buffer mode
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO output buffer mode on the pin.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_UNREGULATED                (0x00UL) /**< Unregulated output buffer */
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_REGULATED                  (0x01UL) /**< Regulated output buffer */
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioIbuf SIO input buffer mode
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 11


 475:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer mode on the pin.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_SINGLEENDED                (0x00UL) /**< Single ended input buffer */
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_DIFFERENTIAL               (0x01UL) /**< Differential input buffer */
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVtrip SIO input buffer trip-point
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer trip-point of the pin.
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_CMOS                      (0x00UL) /**< CMOS input buffer (single-ended) */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_TTL                       (0x01UL) /**< TTL input buffer (single-ended) */
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_5VDDIO_0_5VOH           (0x00UL) /**< 0.5xVddio or 0.5xVoh (differential) */
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_4VDDIO_1_0VREF          (0x01UL) /**< 0.4xVddio or 0.4xVoh (differential) */
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVref SIO reference voltage for input buffer trip-point
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the reference voltage of SIO input buffer trip-point.
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_PINREF                     (0x00UL) /**< Vref from analog pin */
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_1_2V                       (0x01UL) /**< Vref from internal 1.2V reference */
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_A                     (0x02UL) /**< Vref from AMUXBUS_A */
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_B                     (0x03UL) /**< Vref from AMUXBUS_B */
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVoh Regulated output voltage level (Voh) and input buffer trip-point of a
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the Voh and input buffer trip-point of an SIO pair
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_00                        (0x00UL) /**< Voh = 1 x Reference */
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_25                        (0x01UL) /**< Voh = 1.25 x Reference */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_49                        (0x02UL) /**< Voh = 1.49 x Reference */
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_67                        (0x03UL) /**< Voh = 1.67 x Reference */
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_08                        (0x04UL) /**< Voh = 2.08 x Reference */
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_50                        (0x05UL) /**< Voh = 2.50 x Reference */
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_78                        (0x06UL) /**< Voh = 2.78 x Reference */
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_4_16                        (0x07UL) /**< Voh = 4.16 x Reference */
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Prototypes
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 12


 532:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Pin_Init(GPIO_PRT_Type* base, uint32_t pinNum, const cy_stc_gpio_pin_co
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Port_Init(GPIO_PRT_Type* base, const cy_stc_gpio_prt_config_t *config);
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Pin_FastInit(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t driveMode, uint32_t outVal
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Port_Deinit(GPIO_PRT_Type* base);
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value);
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum);
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum);
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_SetAmuxSplit(cy_en_amux_split_t switchCtrl, cy_en_gpio_amuxconnect_t amuxConnect, cy_e
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_amuxconnect_t Cy_GPIO_GetAmuxSplit(cy_en_amux_split_t switchCtrl, cy_en_gpio_amuxselect_
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum);
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum);
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum);
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum);
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Inv(GPIO_PRT_Type* base, uint32_t pinNum);
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum);
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtrip(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtrip(GPIO_PRT_Type* base, uint32_t pinNum);
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum);
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum);
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_gpio */
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_sio
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVregEn(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVregEn(GPIO_PRT_Type* base, uint32_t pinNum);
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum);
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum);
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum);
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVohSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVohSel(GPIO_PRT_Type* base, uint32_t pinNum);
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_sio */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_interrupt
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 13


 589:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatus(GPIO_PRT_Type* base, uint32_t pinNum);
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_ClearInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum);
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT_Type* base, uint32_t pinNum);
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSwInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum);
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetFilter(GPIO_PRT_Type* base, uint32_t value);
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetFilter(GPIO_PRT_Type* base);
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause0(void);
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause1(void);
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause2(void);
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause3(void);
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_interrupt */
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_SetHSIOM
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Configures the HSIOM connection to the pin.
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Connects the specified High-Speed Input Output Multiplexer (HSIOM) selection
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * to the pin.
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \note 
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function modifies a port register in a read-modify-write operation. It is
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * not thread safe as the resource is shared among multiple pins on a port.
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value)
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t tempReg;
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 14


 646:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_V1_Type* portAddrHSIOM;
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_HSIOM_VALID(value));
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - CY_GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_V1_Type*)(CY_HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = HSIOM_PRT_PORT_SEL0(portAddrHSIOM) & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_H
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         HSIOM_PRT_PORT_SEL0(portAddrHSIOM) = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << 
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = HSIOM_PRT_PORT_SEL1(portAddrHSIOM) & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_H
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         HSIOM_PRT_PORT_SEL1(portAddrHSIOM) = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << 
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_GetHSIOM
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Returns the current HSIOM multiplexer connection to the pin.
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum)
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t returnValue;
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_V1_Type* portAddrHSIOM;
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - CY_GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_V1_Type*)(CY_HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (HSIOM_PRT_PORT_SEL0(portAddrHSIOM) >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 15


 703:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (HSIOM_PRT_PORT_SEL1(portAddrHSIOM) >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (en_hsiom_sel_t)returnValue;
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_PortToAddr
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Retrieves the port address based on the given port number.
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This is a helper function to calculate the port base address when given a port
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * number. It is to be used when pin access needs to be calculated at runtime.
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param portNum
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Port number
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Base address of the port register structure
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_PortToAddr
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum)
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     GPIO_PRT_Type* portBase;
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(portNum < (uint32_t)IOSS_GPIO_GPIO_PORT_NR)
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portBase = (GPIO_PRT_Type *)(CY_GPIO_BASE + (GPIO_PRT_SECTION_SIZE * portNum));
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         /* Error: Return default base address */
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portBase = (GPIO_PRT_Type *)(CY_GPIO_BASE);
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (portBase);
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Read
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Reads the current logic level on the input buffer of the pin.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 16


 760:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Bit position 8 is the routed pin through the port glitch filter.
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level present on the pin
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Read
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum)
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_FILTER_PIN_VALID(pinNum));
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (GPIO_PRT_IN(base) >> (pinNum)) & CY_GPIO_IN_MASK;
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Write
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Write a logic 0 or logic 1 state to the output driver.
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level to drive out on the pin
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Write
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_VALUE_VALID(value));
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     /* Thread-safe: Directly access the pin registers instead of base->OUT */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(0UL == value)
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         GPIO_PRT_OUT_CLR(base) = CY_GPIO_OUT_MASK << pinNum;
  43              		.loc 2 813 0
  44 0002 0222     		movs	r2, #2
  45 0004 254B     		ldr	r3, .L7
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 17


  46 0006 5A60     		str	r2, [r3, #4]
  47              	.LVL1:
  48              	.LBE52:
  49              	.LBE51:
  55:main_cm4.c    ****     Cy_GPIO_Write(BLUE_PORT, BLUE_NUM, 0);
  56:main_cm4.c    ****     printf("Started voice recording...\r\n");
  50              		.loc 1 56 0
  51 0008 2548     		ldr	r0, .L7+4
  52 000a FFF7FEFF 		bl	puts
  53              	.LVL2:
  57:main_cm4.c    ****     
  58:main_cm4.c    ****     ADC_Start();
  54              		.loc 1 58 0
  55 000e FFF7FEFF 		bl	ADC_Start
  56              	.LVL3:
  59:main_cm4.c    ****     ADC_StartConvert();
  57              		.loc 1 59 0
  58 0012 FFF7FEFF 		bl	ADC_StartConvert
  59              	.LVL4:
  60              	.LBB53:
  60:main_cm4.c    ****     
  61:main_cm4.c    ****     for(int idx = 0; idx < SAMPLES; ++idx){
  61              		.loc 1 61 0
  62 0016 0024     		movs	r4, #0
  63 0018 2CE0     		b	.L2
  64              	.LVL5:
  65              	.L5:
  66              	.LBB54:
  62:main_cm4.c    ****         ADC_IsEndConversion(CY_SAR_WAIT_FOR_RESULT);
  67              		.loc 1 62 0 discriminator 3
  68 001a 0120     		movs	r0, #1
  69 001c FFF7FEFF 		bl	ADC_IsEndConversion
  70              	.LVL6:
  71              	.LBB55:
  72              	.LBB56:
  73              		.file 3 "Generated_Source\\PSoC6/ADC.h"
   1:Generated_Source\PSoC6/ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.h **** * \file     ADC.h
   3:Generated_Source\PSoC6/ADC.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC.h **** *
   5:Generated_Source\PSoC6/ADC.h **** * \brief
   6:Generated_Source\PSoC6/ADC.h **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.h **** *
   8:Generated_Source\PSoC6/ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.h **** * \copyright
  10:Generated_Source\PSoC6/ADC.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 18


  22:Generated_Source\PSoC6/ADC.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.h **** #if !defined(CY_ADC_H)
  40:Generated_Source\PSoC6/ADC.h **** #define CY_ADC_H
  41:Generated_Source\PSoC6/ADC.h **** 
  42:Generated_Source\PSoC6/ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC.h **** 
  45:Generated_Source\PSoC6/ADC.h **** #define ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC.h **** #if (ADC_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC.h **** #include "ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC.h **** #endif
  49:Generated_Source\PSoC6/ADC.h **** 
  50:Generated_Source\PSoC6/ADC.h **** #define ADC_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC.h **** #include "ADC_intSarClock.h"
  53:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC.h **** 
  55:Generated_Source\PSoC6/ADC.h **** /**
  56:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC.h **** *
  58:Generated_Source\PSoC6/ADC.h **** */
  59:Generated_Source\PSoC6/ADC.h **** typedef struct
  60:Generated_Source\PSoC6/ADC.h **** {
  61:Generated_Source\PSoC6/ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC.h ****                                             */
  68:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC.h **** 
  72:Generated_Source\PSoC6/ADC.h **** } ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC.h **** 
  75:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC.h **** void ADC_SelectConfig(uint32_t config, uint32_t restart);
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 19


  79:Generated_Source\PSoC6/ADC.h **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC.h **** void ADC_Init(void);
  81:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void);
  82:Generated_Source\PSoC6/ADC.h **** 
  83:Generated_Source\PSoC6/ADC.h **** /**
  84:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC.h **** * @{
  86:Generated_Source\PSoC6/ADC.h **** */
  87:Generated_Source\PSoC6/ADC.h **** void ADC_Start(void);
  88:Generated_Source\PSoC6/ADC.h **** void ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void);
  90:Generated_Source\PSoC6/ADC.h **** void ADC_StartConvert(void);
  91:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void);
  92:Generated_Source\PSoC6/ADC.h **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC.h **** void ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC.h **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC.h **** 
 107:Generated_Source\PSoC6/ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC.h **** 
 109:Generated_Source\PSoC6/ADC.h **** void ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC.h **** 
 111:Generated_Source\PSoC6/ADC.h **** /**
 112:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC.h **** * @{
 114:Generated_Source\PSoC6/ADC.h **** */
 115:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void);
 116:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void);
 117:Generated_Source\PSoC6/ADC.h **** 
 118:Generated_Source\PSoC6/ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC.h **** 
 120:Generated_Source\PSoC6/ADC.h **** /**
 121:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC.h **** * @{
 123:Generated_Source\PSoC6/ADC.h **** */
 124:Generated_Source\PSoC6/ADC.h **** void ADC_ISR(void);
 125:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC.h **** 
 128:Generated_Source\PSoC6/ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC.h **** 
 130:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC.h **** 
 135:Generated_Source\PSoC6/ADC.h **** /*  Sample Mode setting constants */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 20


 136:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC.h **** 
 138:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC.h **** 
 142:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_RATE             (12000)
 143:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_NOMINAL_CLOCK_FREQ      (6250000u)
 147:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC.h **** 
 149:Generated_Source\PSoC6/ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_ENDED_FORMAT     (1uL)
 151:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLES_AVERAGED        (0uL)
 153:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VNEG_INPUT_SEL          (0)
 156:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME0          (507uL)
 159:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_FREERUNNING             (1u)
 163:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_LOW_LIMIT               (1792u)
 165:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR                (4uL)
 170:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC.h **** 
 172:Generated_Source\PSoC6/ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG0_NOMINAL_CLOCK_FREQ))
 175:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC.h **** 
 177:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC.h **** 
 181:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC.h **** 
 185:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 21


 193:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC.h **** 
 216:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG1_NOMINAL_CLOCK_FR
 219:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC.h **** #endif /* #if(ADC_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC.h **** 
 222:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC.h **** 
 226:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC.h **** 
 230:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC.h **** 
 238:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME2          (uL)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 22


 250:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC.h **** 
 261:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG2_NOMINAL_CLOCK_FR
 264:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC.h **** 
 267:Generated_Source\PSoC6/ADC.h **** 
 268:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC.h **** 
 272:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC.h **** 
 283:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC.h **** 
 306:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 23


 307:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG3_NOMINAL_CLOCK_FR
 309:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC.h **** 
 312:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC.h **** 
 316:Generated_Source\PSoC6/ADC.h **** #define ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC.h **** #define ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC.h **** #define ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC.h **** #define ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC.h **** 
 323:Generated_Source\PSoC6/ADC.h **** /** ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC.h **** */
 326:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC.h **** 
 328:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC.h **** /**
 332:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC.h **** * @{
 337:Generated_Source\PSoC6/ADC.h **** */
 338:Generated_Source\PSoC6/ADC.h **** 
 339:Generated_Source\PSoC6/ADC.h **** /** ADC_initVar
 340:Generated_Source\PSoC6/ADC.h **** * The ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC.h **** * set to 1 the first time ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC.h **** * ADC_Start() routine.
 345:Generated_Source\PSoC6/ADC.h **** *
 346:Generated_Source\PSoC6/ADC.h **** * If reinitialization of the component is required, then the ADC_Init() function
 347:Generated_Source\PSoC6/ADC.h **** * can be called before the ADC_Start() or ADC_Enable()
 348:Generated_Source\PSoC6/ADC.h **** * functions.
 349:Generated_Source\PSoC6/ADC.h **** */
 350:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_initVar;
 351:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_selected;
 352:Generated_Source\PSoC6/ADC.h **** extern uint32_t ADC_currentConfig;
 353:Generated_Source\PSoC6/ADC.h **** 
 354:Generated_Source\PSoC6/ADC.h **** #define ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC.h **** 
 356:Generated_Source\PSoC6/ADC.h **** extern const ADC_CONFIG_STRUCT ADC_allConfigs[ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC.h **** 
 358:Generated_Source\PSoC6/ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC.h **** */
 362:Generated_Source\PSoC6/ADC.h **** extern cy_stc_syspm_callback_t ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 24


 364:Generated_Source\PSoC6/ADC.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC.h **** 
 366:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC.h ****     #if((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC.h ****     #endif /* ((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC.h **** #else
 377:Generated_Source\PSoC6/ADC.h ****     #define ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC.h **** 
 380:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC.h **** 
 389:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC.h **** 
 395:Generated_Source\PSoC6/ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC.h **** 
 400:Generated_Source\PSoC6/ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_FREERUNNING == ADC_FREERUNNING)
 402:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC.h **** #endif /* End ADC_CFG0_FREERUNNING == ADC_FREERUNNING */
 406:Generated_Source\PSoC6/ADC.h **** 
 407:Generated_Source\PSoC6/ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC.h **** #elif(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC.h **** 
 414:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC.h ****     #if((ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 25


 421:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC.h **** #elif (ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC.h **** #else
 425:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC.h **** 
 428:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG0 << SAR_CTRL_NEG_S
 430:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC.h **** 
 436:Generated_Source\PSoC6/ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC.h **** #else
 440:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC.h **** 
 443:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC.h **** 
 445:Generated_Source\PSoC6/ADC.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC.h **** 
 450:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC.h **** 
 454:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC.h **** 
 458:Generated_Source\PSoC6/ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC.h **** 
 463:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC.h **** 
 466:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC.h **** 
 470:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC.h **** 
 474:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 26


 478:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC.h **** 
 489:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC.h **** )
 501:Generated_Source\PSoC6/ADC.h **** 
 502:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC.h ****         | (uint32)((uint32)ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC.h **** 
 507:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC.h **** 
 509:Generated_Source\PSoC6/ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC.h **** */
 512:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC.h **** 
 515:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC.h **** 
 519:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC.h **** 
 529:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 27


 535:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC.h **** 
 540:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_FREERUNNING == ADC_FREERUNNING)
 542:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG1_FREERUNNING == ADC_FREERUNNING */
 546:Generated_Source\PSoC6/ADC.h **** 
 547:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC.h ****     #else
 558:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC.h **** 
 561:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG1 << SAR_CTRL_NEG_S
 562:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC.h **** 
 564:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC.h **** 
 567:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC.h **** 
 569:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC.h **** 
 574:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC.h **** 
 578:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC.h **** 
 582:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC.h **** 
 587:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC.h **** 
 590:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_PWR \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 28


 592:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC.h **** 
 594:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC.h **** 
 598:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC.h **** 
 602:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC.h **** 
 613:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC.h ****     )
 625:Generated_Source\PSoC6/ADC.h **** 
 626:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC.h **** 
 631:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC.h **** 
 633:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC.h ****     */
 636:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC.h **** 
 640:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC.h **** 
 644:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME01_INIT \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 29


 649:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC.h **** 
 654:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC.h **** 
 660:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC.h **** 
 665:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_FREERUNNING == ADC_FREERUNNING)
 667:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG2_FREERUNNING == ADC_FREERUNNING */
 671:Generated_Source\PSoC6/ADC.h **** 
 672:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC.h ****     #else
 683:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC.h **** 
 686:Generated_Source\PSoC6/ADC.h ****    #define ADC_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG2 << SAR_CTRL_NEG_SE
 687:Generated_Source\PSoC6/ADC.h **** 
 688:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC.h **** 
 690:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC.h **** 
 693:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC.h **** 
 695:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC.h **** 
 700:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC.h **** 
 704:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SAMPLES_AVERAGED \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 30


 706:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC.h **** 
 708:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC.h **** 
 713:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC.h **** 
 716:Generated_Source\PSoC6/ADC.h **** 
 717:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC.h **** 
 721:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC.h **** 
 725:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC.h **** 
 729:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC.h **** 
 740:Generated_Source\PSoC6/ADC.h **** 
 741:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC.h ****     )
 753:Generated_Source\PSoC6/ADC.h **** 
 754:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC.h **** 
 759:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC.h **** 
 761:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 31


 763:Generated_Source\PSoC6/ADC.h ****     */
 764:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC.h **** 
 768:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC.h **** 
 772:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC.h **** 
 782:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC.h **** 
 788:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC.h **** 
 793:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_FREERUNNING == ADC_FREERUNNING)
 795:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG3_FREERUNNING == ADC_FREERUNNING */
 799:Generated_Source\PSoC6/ADC.h **** 
 800:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC.h ****     #else
 811:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC.h **** 
 814:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG3 << SAR_CTRL_NEG_S
 815:Generated_Source\PSoC6/ADC.h **** 
 816:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC.h **** 
 818:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 32


 820:Generated_Source\PSoC6/ADC.h **** 
 821:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC.h **** 
 823:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC.h **** 
 828:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC.h **** 
 832:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC.h **** 
 836:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC.h **** 
 841:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC.h **** 
 844:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC.h **** 
 848:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC.h **** 
 852:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC.h **** 
 856:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC.h **** 
 867:Generated_Source\PSoC6/ADC.h **** 
 868:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 33


 877:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC.h ****     )
 880:Generated_Source\PSoC6/ADC.h **** 
 881:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC.h **** 
 886:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC.h **** 
 888:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC.h ****     */
 891:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC.h **** 
 894:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC.h **** 
 896:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC.h **** 
 900:Generated_Source\PSoC6/ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Enable
 902:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC.h **** *
 904:Generated_Source\PSoC6/ADC.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC.h **** *
 906:Generated_Source\PSoC6/ADC.h **** * \param None
 907:Generated_Source\PSoC6/ADC.h **** *
 908:Generated_Source\PSoC6/ADC.h **** * \return None
 909:Generated_Source\PSoC6/ADC.h **** *
 910:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC.h **** *  None
 912:Generated_Source\PSoC6/ADC.h **** *
 913:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void)
 915:Generated_Source\PSoC6/ADC.h **** {
 916:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Enable(ADC_SAR__HW);
 917:Generated_Source\PSoC6/ADC.h **** }
 918:Generated_Source\PSoC6/ADC.h **** 
 919:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Stop
 921:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC.h **** *
 923:Generated_Source\PSoC6/ADC.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC.h **** * power mode.
 925:Generated_Source\PSoC6/ADC.h **** *
 926:Generated_Source\PSoC6/ADC.h **** * \param None
 927:Generated_Source\PSoC6/ADC.h **** *
 928:Generated_Source\PSoC6/ADC.h **** * \return None
 929:Generated_Source\PSoC6/ADC.h **** *
 930:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC.h **** * Do not use the ADC_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC.h **** * ADC_StopConvert() API. If you use the ADC_Stop() API
 933:Generated_Source\PSoC6/ADC.h **** * to halt conversions then later use the ADC_Start() and
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 34


 934:Generated_Source\PSoC6/ADC.h **** * ADC_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC.h **** * of the scan may be corrupt. The ADC_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC.h **** * the ADC to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC.h **** * channel scan is complete, the ADC will stop all conversions, which
 938:Generated_Source\PSoC6/ADC.h **** * can be detected by the use of an ISR or the ADC_IsEndConversion()
 939:Generated_Source\PSoC6/ADC.h **** * function.
 940:Generated_Source\PSoC6/ADC.h **** *
 941:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void)
 943:Generated_Source\PSoC6/ADC.h **** {
 944:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Disable(ADC_SAR__HW);
 945:Generated_Source\PSoC6/ADC.h **** }
 946:Generated_Source\PSoC6/ADC.h **** 
 947:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 948:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_StopConvert
 949:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 950:Generated_Source\PSoC6/ADC.h **** *
 951:Generated_Source\PSoC6/ADC.h **** * \brief Forces the ADC to stop conversions. If a conversion is
 952:Generated_Source\PSoC6/ADC.h **** * currently executing, that conversion will complete, but no further conversions
 953:Generated_Source\PSoC6/ADC.h **** * will occur.
 954:Generated_Source\PSoC6/ADC.h **** *
 955:Generated_Source\PSoC6/ADC.h **** * \param None
 956:Generated_Source\PSoC6/ADC.h **** *
 957:Generated_Source\PSoC6/ADC.h **** * \return None
 958:Generated_Source\PSoC6/ADC.h **** *
 959:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 960:Generated_Source\PSoC6/ADC.h **** *
 961:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 962:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void)
 963:Generated_Source\PSoC6/ADC.h **** {
 964:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_StopConvert(ADC_SAR__HW);
 965:Generated_Source\PSoC6/ADC.h **** }
 966:Generated_Source\PSoC6/ADC.h **** 
 967:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 968:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult16
 969:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 970:Generated_Source\PSoC6/ADC.h **** *
 971:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register
 972:Generated_Source\PSoC6/ADC.h **** *
 973:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 974:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 975:Generated_Source\PSoC6/ADC.h **** *
 976:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 16-bit integer.
 977:Generated_Source\PSoC6/ADC.h **** *
 978:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 979:Generated_Source\PSoC6/ADC.h **** *
 980:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 981:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan)
 982:Generated_Source\PSoC6/ADC.h **** {
 983:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
 984:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
  74              		.loc 3 984 0 discriminator 3
  75 0020 204B     		ldr	r3, .L7+8
  76 0022 1B68     		ldr	r3, [r3]
  77 0024 03EB8303 		add	r3, r3, r3, lsl #2
  78 0028 9A00     		lsls	r2, r3, #2
  79 002a 1F4B     		ldr	r3, .L7+12
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 35


  80 002c 1A44     		add	r2, r2, r3
  81 002e 5368     		ldr	r3, [r2, #4]
  82 0030 23B9     		cbnz	r3, .L3
  83              		.loc 3 984 0 is_stmt 0
  84 0032 4FF47671 		mov	r1, #984
  85 0036 1D48     		ldr	r0, .L7+16
  86 0038 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  87              	.LVL7:
  88              	.L3:
 985:Generated_Source\PSoC6/ADC.h **** 
 986:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_GetResult16(ADC_SAR__HW, chan);
  89              		.loc 3 986 0 is_stmt 1
  90 003c 0021     		movs	r1, #0
  91 003e 1C48     		ldr	r0, .L7+20
  92 0040 FFF7FEFF 		bl	Cy_SAR_GetResult16
  93              	.LVL8:
  94 0044 0546     		mov	r5, r0
  95              	.LVL9:
  96              	.LBE56:
  97              	.LBE55:
  98              	.LBB57:
  99              	.LBB58:
 987:Generated_Source\PSoC6/ADC.h **** }
 988:Generated_Source\PSoC6/ADC.h **** 
 989:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 990:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult32
 991:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6/ADC.h **** *
 993:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register.
 994:Generated_Source\PSoC6/ADC.h **** *
 995:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 996:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 997:Generated_Source\PSoC6/ADC.h **** *
 998:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 32-bit integer.
 999:Generated_Source\PSoC6/ADC.h **** *
1000:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1001:Generated_Source\PSoC6/ADC.h **** *
1002:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1003:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan)
1004:Generated_Source\PSoC6/ADC.h **** {
1005:Generated_Source\PSoC6/ADC.h ****     int32_t finalResult;
1006:Generated_Source\PSoC6/ADC.h **** 
1007:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1008:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1009:Generated_Source\PSoC6/ADC.h **** 
1010:Generated_Source\PSoC6/ADC.h ****     finalResult = Cy_SAR_GetResult32(ADC_SAR__HW, chan);
1011:Generated_Source\PSoC6/ADC.h **** 
1012:Generated_Source\PSoC6/ADC.h ****     return finalResult;
1013:Generated_Source\PSoC6/ADC.h **** }
1014:Generated_Source\PSoC6/ADC.h **** 
1015:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1016:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLowLimit
1017:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1018:Generated_Source\PSoC6/ADC.h **** *
1019:Generated_Source\PSoC6/ADC.h **** * \brief Sets the low limit parameter for a limit condition.
1020:Generated_Source\PSoC6/ADC.h **** *
1021:Generated_Source\PSoC6/ADC.h **** * \param lowLimit The low limit for a limit condition.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 36


1022:Generated_Source\PSoC6/ADC.h **** *
1023:Generated_Source\PSoC6/ADC.h **** * \return None
1024:Generated_Source\PSoC6/ADC.h **** *
1025:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1026:Generated_Source\PSoC6/ADC.h **** *
1027:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1028:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit)
1029:Generated_Source\PSoC6/ADC.h **** {
1030:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetLowLimit(ADC_SAR__HW, lowLimit);
1031:Generated_Source\PSoC6/ADC.h **** }
1032:Generated_Source\PSoC6/ADC.h **** 
1033:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1034:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetHighLimit
1035:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1036:Generated_Source\PSoC6/ADC.h **** *
1037:Generated_Source\PSoC6/ADC.h **** * \brief Sets the high limit parameter for a limit condition.
1038:Generated_Source\PSoC6/ADC.h **** *
1039:Generated_Source\PSoC6/ADC.h **** * \param highLimit The high limit for a limit condition.
1040:Generated_Source\PSoC6/ADC.h **** *
1041:Generated_Source\PSoC6/ADC.h **** * \return None
1042:Generated_Source\PSoC6/ADC.h **** *
1043:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1044:Generated_Source\PSoC6/ADC.h **** *
1045:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1046:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit)
1047:Generated_Source\PSoC6/ADC.h **** {
1048:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetHighLimit(ADC_SAR__HW, highLimit);
1049:Generated_Source\PSoC6/ADC.h **** }
1050:Generated_Source\PSoC6/ADC.h **** 
1051:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1052:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLimitMask
1053:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1054:Generated_Source\PSoC6/ADC.h **** *
1055:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel limit condition mask.
1056:Generated_Source\PSoC6/ADC.h **** *
1057:Generated_Source\PSoC6/ADC.h **** *
1058:Generated_Source\PSoC6/ADC.h **** * \param limitMask
1059:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a limit condition interrupt.
1060:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the limit condition interrupt for channel N.
1061:Generated_Source\PSoC6/ADC.h **** * The limitMask cannot be larger than the number of channels.
1062:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1063:Generated_Source\PSoC6/ADC.h **** *
1064:Generated_Source\PSoC6/ADC.h **** * \return None
1065:Generated_Source\PSoC6/ADC.h **** *
1066:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1067:Generated_Source\PSoC6/ADC.h **** *
1068:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1069:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask)
1070:Generated_Source\PSoC6/ADC.h **** {
1071:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetRangeInterruptMask(ADC_SAR__HW, limitMask);
1072:Generated_Source\PSoC6/ADC.h **** }
1073:Generated_Source\PSoC6/ADC.h **** 
1074:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1075:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetSatMask
1076:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1077:Generated_Source\PSoC6/ADC.h **** *
1078:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel saturation event mask.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 37


1079:Generated_Source\PSoC6/ADC.h **** *
1080:Generated_Source\PSoC6/ADC.h **** * \param satMask
1081:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a saturation event interrupt.
1082:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the saturation event interrupt for channel N.
1083:Generated_Source\PSoC6/ADC.h **** * The satMask cannot be larger than the number of channels.
1084:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1085:Generated_Source\PSoC6/ADC.h **** *
1086:Generated_Source\PSoC6/ADC.h **** * \return None
1087:Generated_Source\PSoC6/ADC.h **** *
1088:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1089:Generated_Source\PSoC6/ADC.h **** *
1090:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1091:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask)
1092:Generated_Source\PSoC6/ADC.h **** {
1093:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetSatInterruptMask(ADC_SAR__HW, satMask);
1094:Generated_Source\PSoC6/ADC.h **** }
1095:Generated_Source\PSoC6/ADC.h **** 
1096:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1097:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetOffset
1098:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1099:Generated_Source\PSoC6/ADC.h **** *
1100:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts,
1101:Generated_Source\PSoC6/ADC.h **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1102:Generated_Source\PSoC6/ADC.h **** *
1103:Generated_Source\PSoC6/ADC.h **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1104:Generated_Source\PSoC6/ADC.h **** * functions use the following equation:
1105:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1106:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1107:Generated_Source\PSoC6/ADC.h **** *
1108:Generated_Source\PSoC6/ADC.h **** * To set channel 0's offset based on known V_offset_mV, use:
1109:Generated_Source\PSoC6/ADC.h **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1110:Generated_Source\PSoC6/ADC.h **** *
1111:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1112:Generated_Source\PSoC6/ADC.h **** *
1113:Generated_Source\PSoC6/ADC.h **** * \param offset This value is a measured value when the inputs are shorted or
1114:Generated_Source\PSoC6/ADC.h **** * connected to the same input voltage.
1115:Generated_Source\PSoC6/ADC.h **** *
1116:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1117:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1118:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: offset was set successfully
1119:Generated_Source\PSoC6/ADC.h **** *
1120:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1121:Generated_Source\PSoC6/ADC.h **** *
1122:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1123:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset)
1124:Generated_Source\PSoC6/ADC.h **** {
1125:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1126:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1127:Generated_Source\PSoC6/ADC.h **** 
1128:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetOffset(chan, offset);
1129:Generated_Source\PSoC6/ADC.h **** }
1130:Generated_Source\PSoC6/ADC.h **** 
1131:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1132:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetGain
1133:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1134:Generated_Source\PSoC6/ADC.h **** *
1135:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC gain in counts per 10 volt for the voltage
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 38


1136:Generated_Source\PSoC6/ADC.h **** * conversion functions. This value is set by default by the reference and
1137:Generated_Source\PSoC6/ADC.h **** * input range settings. Gain is applied after offset and unit scaling.  All
1138:Generated_Source\PSoC6/ADC.h **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1139:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1140:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1141:Generated_Source\PSoC6/ADC.h **** *
1142:Generated_Source\PSoC6/ADC.h **** * To set channel 0's gain based on known V_ref_mV, use:
1143:Generated_Source\PSoC6/ADC.h **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1144:Generated_Source\PSoC6/ADC.h **** *
1145:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1146:Generated_Source\PSoC6/ADC.h **** *
1147:Generated_Source\PSoC6/ADC.h **** * \param adcGain ADC gain in counts per 10 volt.
1148:Generated_Source\PSoC6/ADC.h **** *
1149:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1150:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1151:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: gain was set successfully
1152:Generated_Source\PSoC6/ADC.h **** *
1153:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1154:Generated_Source\PSoC6/ADC.h **** *
1155:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1156:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain)
1157:Generated_Source\PSoC6/ADC.h **** {
1158:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1159:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1160:Generated_Source\PSoC6/ADC.h **** 
1161:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetGain(chan, adcGain);
1162:Generated_Source\PSoC6/ADC.h **** }
1163:Generated_Source\PSoC6/ADC.h **** 
1164:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1165:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_Volts
1166:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1167:Generated_Source\PSoC6/ADC.h **** *
1168:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1169:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 0.534.
1170:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1171:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1172:Generated_Source\PSoC6/ADC.h **** *
1173:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1174:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1175:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1176:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1177:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1178:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1179:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1180:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1181:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1182:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1183:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1184:Generated_Source\PSoC6/ADC.h **** *
1185:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1186:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1187:Generated_Source\PSoC6/ADC.h **** *
1188:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1189:Generated_Source\PSoC6/ADC.h **** *
1190:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1191:Generated_Source\PSoC6/ADC.h **** *
1192:Generated_Source\PSoC6/ADC.h **** * \return Result in Volts.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 39


1193:Generated_Source\PSoC6/ADC.h **** *
1194:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1195:Generated_Source\PSoC6/ADC.h **** *
1196:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1197:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts)
1198:Generated_Source\PSoC6/ADC.h **** {
1199:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1200:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1201:Generated_Source\PSoC6/ADC.h **** 
1202:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_Volts(ADC_SAR__HW, chan, adcCounts);
1203:Generated_Source\PSoC6/ADC.h **** }
1204:Generated_Source\PSoC6/ADC.h **** 
1205:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1206:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_mVolts
1207:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1208:Generated_Source\PSoC6/ADC.h **** *
1209:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1210:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534.
1211:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1212:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1213:Generated_Source\PSoC6/ADC.h **** *
1214:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1215:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1216:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1217:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1218:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1219:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1220:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1221:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1222:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1223:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1224:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1225:Generated_Source\PSoC6/ADC.h **** *
1226:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1227:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1228:Generated_Source\PSoC6/ADC.h **** *
1229:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1230:Generated_Source\PSoC6/ADC.h **** *
1231:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1232:Generated_Source\PSoC6/ADC.h **** *
1233:Generated_Source\PSoC6/ADC.h **** * \return Result in mV.
1234:Generated_Source\PSoC6/ADC.h **** *
1235:Generated_Source\PSoC6/ADC.h **** * \sideeffect None.
1236:Generated_Source\PSoC6/ADC.h **** *
1237:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1238:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts)
1239:Generated_Source\PSoC6/ADC.h **** {
1240:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1241:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 100              		.loc 3 1241 0
 101 0046 174B     		ldr	r3, .L7+8
 102 0048 1B68     		ldr	r3, [r3]
 103 004a 03EB8303 		add	r3, r3, r3, lsl #2
 104 004e 9A00     		lsls	r2, r3, #2
 105 0050 154B     		ldr	r3, .L7+12
 106 0052 1A44     		add	r2, r2, r3
 107 0054 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 40


 108 0056 23B9     		cbnz	r3, .L4
 109 0058 40F2D941 		movw	r1, #1241
 110 005c 1348     		ldr	r0, .L7+16
 111 005e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 112              	.LVL10:
 113              	.L4:
1242:Generated_Source\PSoC6/ADC.h **** 
1243:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_mVolts(ADC_SAR__HW, chan, adcCounts);
 114              		.loc 3 1243 0
 115 0062 2A46     		mov	r2, r5
 116 0064 0021     		movs	r1, #0
 117 0066 1248     		ldr	r0, .L7+20
 118 0068 FFF7FEFF 		bl	Cy_SAR_CountsTo_mVolts
 119              	.LVL11:
 120              	.LBE58:
 121              	.LBE57:
  63:main_cm4.c    ****         int16_t ADC_Result = ADC_GetResult16(0);
  64:main_cm4.c    **** 
  65:main_cm4.c    ****         int16_t Mic_mV = ADC_CountsTo_mVolts(0, ADC_Result);
  66:main_cm4.c    ****         voice[idx] = (int8_t) Mic_mV - 1600;
 122              		.loc 1 66 0
 123 006c 4038     		subs	r0, r0, #64
 124 006e 114B     		ldr	r3, .L7+24
 125 0070 1855     		strb	r0, [r3, r4]
 126              	.LBE54:
  61:main_cm4.c    ****         ADC_IsEndConversion(CY_SAR_WAIT_FOR_RESULT);
 127              		.loc 1 61 0
 128 0072 0134     		adds	r4, r4, #1
 129              	.LVL12:
 130              	.L2:
  61:main_cm4.c    ****         ADC_IsEndConversion(CY_SAR_WAIT_FOR_RESULT);
 131              		.loc 1 61 0 is_stmt 0 discriminator 1
 132 0074 104B     		ldr	r3, .L7+28
 133 0076 9C42     		cmp	r4, r3
 134 0078 CFDD     		ble	.L5
 135              	.LBE53:
 136              	.LBB59:
 137              	.LBB60:
 964:Generated_Source\PSoC6/ADC.h **** }
 138              		.loc 3 964 0 is_stmt 1
 139 007a 0D4C     		ldr	r4, .L7+20
 140              	.LVL13:
 141 007c 2046     		mov	r0, r4
 142 007e FFF7FEFF 		bl	Cy_SAR_StopConvert
 143              	.LVL14:
 144              	.LBE60:
 145              	.LBE59:
 146              	.LBB61:
 147              	.LBB62:
 148              	.LBB63:
 149              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 41


   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 42


  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 43


 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 44


 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 45


 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 46


 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 47


 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 48


 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 49


 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 50


 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 51


 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 52


 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 53


 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 54


 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 55


 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 56


 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 57


 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 58


 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 59


1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 60


1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 61


1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 62


1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 63


1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 64


1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 65


1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 66


1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 150              		.loc 4 1440 0
 151 0082 2368     		ldr	r3, [r4]
 152 0084 23F00043 		bic	r3, r3, #-2147483648
 153 0088 2360     		str	r3, [r4]
 154              	.LVL15:
 155              	.LBE63:
 156              	.LBE62:
 157              	.LBE61:
 158              	.LBB64:
 159              	.LBB65:
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         GPIO_PRT_OUT_SET(base) = CY_GPIO_OUT_MASK << pinNum;
 160              		.loc 2 817 0
 161 008a 0222     		movs	r2, #2
 162 008c 034B     		ldr	r3, .L7
 163 008e 9A60     		str	r2, [r3, #8]
 164              	.LVL16:
 165              	.LBE65:
 166              	.LBE64:
  67:main_cm4.c    ****         
  68:main_cm4.c    ****         //Only codes, no mV
  69:main_cm4.c    ****         /*
  70:main_cm4.c    ****         //check what is default adc code, subtract it
  71:main_cm4.c    ****         int8_t code = ADC_Result;
  72:main_cm4.c    ****         codes[idx] = code;
  73:main_cm4.c    ****         */
  74:main_cm4.c    ****     }
  75:main_cm4.c    ****     
  76:main_cm4.c    ****     ADC_StopConvert();
  77:main_cm4.c    ****     ADC_Stop();
  78:main_cm4.c    ****     
  79:main_cm4.c    ****     Cy_GPIO_Write(BLUE_PORT, BLUE_NUM, 1);
  80:main_cm4.c    ****     printf("Finished voice recording.\r\n\n");
 167              		.loc 1 80 0
 168 0090 0A48     		ldr	r0, .L7+32
 169 0092 FFF7FEFF 		bl	puts
 170              	.LVL17:
  81:main_cm4.c    ****     
  82:main_cm4.c    ****     return 0;
  83:main_cm4.c    **** }
 171              		.loc 1 83 0
 172 0096 0020     		movs	r0, #0
 173 0098 38BD     		pop	{r3, r4, r5, pc}
 174              	.L8:
 175 009a 00BF     		.align	2
 176              	.L7:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 67


 177 009c 80053240 		.word	1077020032
 178 00a0 00000000 		.word	.LC0
 179 00a4 00000000 		.word	ADC_currentConfig
 180 00a8 00000000 		.word	ADC_allConfigs
 181 00ac 1C000000 		.word	.LC1
 182 00b0 00001D41 		.word	1092419584
 183 00b4 00000000 		.word	voice
 184 00b8 BFD40100 		.word	119999
 185 00bc 3C000000 		.word	.LC2
 186              		.cfi_endproc
 187              	.LFE577:
 188              		.size	write_voice, .-write_voice
 189              		.section	.text.play_voice,"ax",%progbits
 190              		.align	2
 191              		.global	play_voice
 192              		.thumb
 193              		.thumb_func
 194              		.type	play_voice, %function
 195              	play_voice:
 196              	.LFB578:
  84:main_cm4.c    **** 
  85:main_cm4.c    **** int play_voice()
  86:main_cm4.c    **** {
 197              		.loc 1 86 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 10B5     		push	{r4, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205              	.LVL18:
 206              	.LBB66:
 207              	.LBB67:
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 208              		.loc 2 813 0
 209 0002 0822     		movs	r2, #8
 210 0004 144B     		ldr	r3, .L13
 211 0006 5A60     		str	r2, [r3, #4]
 212              	.LVL19:
 213              	.LBE67:
 214              	.LBE66:
  87:main_cm4.c    ****     Cy_GPIO_Write(RED_PORT, RED_NUM, 0);
  88:main_cm4.c    ****     printf("Started voice playing...\r\n");
 215              		.loc 1 88 0
 216 0008 1448     		ldr	r0, .L13+4
 217 000a FFF7FEFF 		bl	puts
 218              	.LVL20:
  89:main_cm4.c    ****     VDAC_1_Start();
 219              		.loc 1 89 0
 220 000e FFF7FEFF 		bl	VDAC_1_Start
 221              	.LVL21:
 222              	.LBB68:
  90:main_cm4.c    **** 
  91:main_cm4.c    ****     for(int idx = 0; idx < SAMPLES; idx++) {
 223              		.loc 1 91 0
 224 0012 0024     		movs	r4, #0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 68


 225 0014 0FE0     		b	.L10
 226              	.LVL22:
 227              	.L11:
 228              	.LBB69:
  92:main_cm4.c    ****         /*
  93:main_cm4.c    ****         char8 text[8];
  94:main_cm4.c    ****         sprintf(text, "%d", voice[idx]);
  95:main_cm4.c    ****         printf("%s\r\n", text);
  96:main_cm4.c    ****         */
  97:main_cm4.c    ****         
  98:main_cm4.c    ****         int32_t value = 10*voice[idx] + 1650;
 229              		.loc 1 98 0 discriminator 3
 230 0016 124B     		ldr	r3, .L13+8
 231 0018 1A57     		ldrsb	r2, [r3, r4]
 232 001a 02EB8202 		add	r2, r2, r2, lsl #2
 233 001e 5300     		lsls	r3, r2, #1
 234 0020 03F27263 		addw	r3, r3, #1650
 235              	.LVL23:
 236              	.LBB70:
 237              	.LBB71:
 238              	.LBB72:
 239              		.file 5 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ctdac/cy_ctdac.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \file cy_ctdac.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Header file for the CTDAC driver
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC driver provides APIs to configure the 12-bit Continuous-Time DAC.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The functions and other declarations used in this driver are in cy_ctdac.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and declarations in the PDL.
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - 12-bit continuous time output
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - 2 us settling time for a 25 pF load when output buffered through Opamp0 of \ref group_ctb "CTB"
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Can be enabled in Deep Sleep power mode
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Selectable voltage reference:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - VDDA
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Internal analog reference buffered through Opamp1 of \ref group_ctb "CTB"
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - External reference buffered through Opamp1 of \ref group_ctb "CTB"
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Selectable output paths:
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Direct DAC output to a pin
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Buffered DAC output through Opamp0 of \ref group_ctb "CTB"
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Sample and hold output path through Opamp0 of \ref group_ctb "CTB"
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Selectable input modes:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 69


  36:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Unsigned 12-bit mode
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Virtual signed 12-bit mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Configurable update rate using clock or strobe signal
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Double buffered DAC voltage control register
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Interrupt and DMA trigger on DAC buffer empty
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Configurable as PGA along with Opamp1 of the \ref group_ctb "CTB"
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC generates a 12-bit DAC output voltage from the reference.
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DAC reference can come from VDDA or from any signal buffered through Opamp0
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * of the CTB. This can be an external signal through a GPIO or from the internal
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * AREF. The CTDAC is closely integrated with the CTB block,
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * which provides easy buffering of the DAC output voltage,
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * buffered input reference voltage, and sample and hold for the DAC output.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC control interface provides control of the DAC output through CPU or DMA.
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This includes a double-buffered DAC voltage control register, clock input for programmable
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * update rate, interrupt on DAC buffer empty, and trigger to DMA.
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_block_diagram.png
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_block_diagram.png
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC has two switches, CO6 for configuring the output path and
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * CVD for the reference source.
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_switches.png
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_switches.png
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_init Initialization
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the CTDAC hardware block by calling \ref Cy_CTDAC_Init.
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The base address of the CTDAC hardware can be found in the device-specific header file.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the buffers in the CTB are used for the reference source or the output,
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * initialize the CTB hardware block. After both blocks are initialized,
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * enable the CTB block before enabling the CTDAC block.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The driver also provides a \ref Cy_CTDAC_FastInit function for fast and easy initialization of th
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The driver has pre-defined configuration structures for the four combinations of the reference an
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_VddaRef_UnbufferedOut
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_VddaRef_BufferedOut
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_OA1Ref_UnbufferedOut
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_OA1Ref_BufferedOut
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * After initialization, call \ref Cy_CTDAC_Enable to enable the hardware.
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_updatemode Update Modes
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC contains two registers:
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   -# CTDAC_VAL
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       For direct firmware writes to update the current DAC value immediately.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       This register is written with \ref Cy_CTDAC_SetValue.
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   -# CTDAC_VAL_NXT
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       For buffered writes to update the DAC value at a
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       periodic rate or with a strobe trigger input.
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       This register is written with \ref Cy_CTDAC_SetValueBuffered.
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The update mode is
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 70


  93:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * selected during initialization with the \ref cy_stc_ctdac_config_t.updateMode.
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Four of these modes require a dedicated clock resource and the driver
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * can configure the clock during initialization (see \ref cy_stc_ctdac_config_t).
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Three of these modes use a strobe signal through the digital signal interface (DSI).
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This allows control of the buffered update timing from an external source, for example, by anothe
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * chip peripheral or from an off-chip source.
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_direct_write Direct write
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes directly into the CTDAC_VAL register
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * using \ref Cy_CTDAC_SetValue. The action of writing to this register
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * will update the DAC output. This mode does not generate an interrupt
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * or trigger signal.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, a clock must not be configured. Additionally, calling \ref
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Cy_CTDAC_SetValueBuffered does not update the DAC output.
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_direct_write.png
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_direct_write.png
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_buffered_write Buffered write
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered. The rising edge of the clock
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * will update the DAC output and generate the interrupt and trigger signals.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Whenever data is transferred from the CTDAC_VAL_NXT register,
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * an interrupt is asserted the same time as the trigger. But while
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the trigger is automatically cleared after two PeriClk cycles, the
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * user must clear the interrupt with \ref Cy_CTDAC_ClearInterrupt.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_buffered_write.png
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_buffered_write.png
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_strobe_edge_sync Strobe edge sync
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Each rising edge of the DSI strobe input enables
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * one subsequent update from the next rising edge of the clock. The DSI
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * input must remain high for two PeriClk cycles and go low for
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * another two PeriClk cycles to allow for the next update.
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This restricts the DSI strobe input frequency to the PeriClk frequency divided by four.
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_strobe_edge_sync.png
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_strobe_edge_sync.png
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_strobe_edge_immediate Strobe edge immediate
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered.
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The clock resource is used but set to a logic high.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Therefore, each rising edge of the DSI strobe input immediately
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * updates the DAC output.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_strobe_edge_immediate.png
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_strobe_edge_immediate.png
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 71


 150:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_strobe_level Strobe level
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DSI strobe input acts as a hardware enable signal.
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * While the DSI strobe input is high, the mode behaves
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * like the Buffered write mode. When the DSI strobe input is low,
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * updates are disabled.
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_strobe_level.png
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_strobe_level.png
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_dacmode DAC Modes
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The format of code stored in the CTDAC_VAL register can either be unsigned
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * or signed two's complemented.
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Only the first 12 bits of the register are used by the DAC so there is
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * no need for sign extension. With the signed format, the DAC decodes
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the code in the register by adding 0x800.
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DAC can output the register value or the register value plus 1 (see \ref Cy_CTDAC_SetOutputMo
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * <table class="doxtable">
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>12-bit unsigned code</th>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>12-bit two's complement signed code</th>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Vout (for \ref CY_CTDAC_OUTPUT_VALUE )</th>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Vout (for \ref CY_CTDAC_OUTPUT_VALUE_PLUS1 )</th>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x000</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x800</td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0</td>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref/4096</td>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x800</td>
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x000</td>
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0.5 * Vref</td>
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref * 2049 / 4096</td>
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0xFFF</td>
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x7FF</td>
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref * 4095 / 4096</td>
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref</td>
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * </table>
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The expressions in the above table are based on an unbuffered DAC output.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When the output is buffered, the input and output range of the buffer will affect the
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * output voltage. See \ref group_ctb_opamp_range in the CTB driver for more information.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_trigger Interrupts and Trigger
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When data from the CTDAC_VAL_NXT is transferred to the CTDAC_VAL register,
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * an interrupt and trigger output are generated. The trigger output can be
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 72


 207:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * used with a DMA block to update the CTDAC value register at high speeds without any CPU intervent
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Alternatively, the interrupt output can be used when DMA is not available
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to update the CTDAC value register, but at a slower speed.
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Recall with the \ref group_ctdac_updatemode, the interrupt and trigger output are available in al
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref group_ctdac_updatemode_direct_write.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_dma_trigger DMA Trigger
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC trigger output signal can be routed to a DMA block using the \ref group_trigmux
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to trigger an update to the CTDAC_VAL_NXT register.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enums, TRIG14_IN_PASS
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and TRIGGER_TYPE_PASS_TR_CTDAC_EMPTY.
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_handling_interrupts Handling Interrupts
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The routine gets called when any CTDAC on the device generates an interrupt.
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm0p.c SNIPPET_CTDAC_ISR
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm0p.c SNIPPET_CTDAC_INTR_SETUP
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm4.c CTDAC_SNIPPET_DMA_TRIGGER
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_deglitch Deglitch
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The hardware has the ability to deglitch the output value every time it is updated.
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This prevents small glitches in the DAC output during an update to propagate to
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the pin or opamp input. When deglitch is enabled, a switch on the output path
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * is forced open for a configurable number of PeriClk cycles. This deglitch time
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * is calculated as:
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       (DEGLITCH_CNT + 1) / PERI_CLOCK_FREQ
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The optimal and recommended deglitch time is 700 ns. Call \ref Cy_CTDAC_SetDeglitchCycles to set 
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * There are two switches used for deglitching.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Switch COS in the CTB between the DAC output and the Opamp0 input
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Switch CO6 in the CTDAC between the DAC output and external pin
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Call \ref Cy_CTDAC_SetDeglitchMode to set the deglitch path. Match this with the output buffer se
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the output is buffered through the CTB, select \ref CY_CTDAC_DEGLITCHMODE_BUFFERED.
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the output is unbuffered to a direct pin, select \ref CY_CTDAC_DEGLITCHMODE_UNBUFFERED.
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \note
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If deglitching is enabled, the hardware does not force the deglitch switches into a closed
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * state during Deep Sleep mode. Therefore, there is a chance that the device enters
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Deep Sleep mode while the hardware is deglitching and the switches on the output path remain open
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To ensure the DAC will operate properly in Deep Sleep when enabled, make sure to
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * register the \ref Cy_CTDAC_DeepSleepCallback before entering Deep Sleep mode.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_sample_hold Sample and Hold
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When buffering the DAC output, the CTB has a Sample and Hold (SH) feature that can be used for sa
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 73


 264:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DAC output voltage is retained on an internal capacitor for a duration of time while the
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * DAC output can be turned off. The DAC hardware needs to be turned on in a periodic fashion
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to recharge the hold capacitor. This feature is firmware controlled using a sequence of function 
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * See \ref Cy_CTB_DACSampleAndHold in the \ref group_ctb_sample_hold "CTB" driver.
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The hold time depends on the supply and reference voltages. The following hold times are based on
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * time it takes for the buffered output to change by 1 LSB.
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - Hold time = 750 us @ Vref = VDDA , VDDA = 1.7 V
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - Hold time = 525 us @ Vref = VDDA , VDDA = 3.6 V
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - Hold time = 200 us @ Vref = 1.2 V, VDDA = 3.6 V
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_low_power Low Power Support
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC driver provides a callback function to handle power mode transitions.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the CTDAC is configured for Deep Sleep operation and \ref group_ctdac_deglitch "deglitching" i
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the callback \ref Cy_CTDAC_DeepSleepCallback must be registered before calling
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_SysPm_CpuEnterDeepSleep.
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Refer to \ref group_syspm driver for more information about power mode transitions and
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * callback registration.
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_more_information More Information
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_MISRA MISRA-C Compliance]
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This driver has the following specific deviations:
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * <table class="doxtable">
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>MISRA Rule</th>
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Rule Class (Required/Advisory)</th>
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Rule Description</th>
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Description of Deviation(s)</th>
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>11.4</td>
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Advisory</td>
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       This CTDAC driver implements a Deep Sleep callback conforming to the cy_syspm driver requir
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       When the callback is called, the base is cast to a pointer to CTDAC_Type.
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     </td>
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * </table>
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_changelog Changelog
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * <table class="doxtable">
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td rowspan="2">2.0</td>
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Flattened the organization of the driver source code into the single 
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *         source directory and the single include directory.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     </td>
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Driver library directory-structure simplification.</td>
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 74


 321:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Added register access layer. Use register access macros instead
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *         of direct register access using dereferenced pointers.</td>
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Makes register access device-independent, so that the PDL does 
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *         not need to be recompiled for each supported part number.</td>
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>1.0.1</td>
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Added low power support section. Minor documentation edits.</td>
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Documentation update and clarification</td>
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>1.0</td>
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Initial version</td>
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td></td>
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * </table>
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_macros Macros
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_functions Functions
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   \{
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_init            Initialization Functions
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_basic           Basic Configuration Functions
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_switches        Switch Control Functions
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_interrupts      Interrupt Functions
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_syspm_callback  Low Power Callback
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   \}
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_globals Global Variables
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_data_structures Data Structures
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_enums Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #if !defined(CY_CTDAC_H)
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_H
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include <stdint.h>
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include <stdbool.h>
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include <stddef.h>
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_device.h"
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_device_headers.h"
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_syspm.h"
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_syslib.h"
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_sysclk.h"
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #ifdef CY_IP_MXS40PASS_CTDAC
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #if defined(__cplusplus)
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern "C" {
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #endif
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_macros
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Driver major version */
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DRV_VERSION_MAJOR       2
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 75


 378:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Driver minor version */
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DRV_VERSION_MINOR       0
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** CTDAC driver identifier */
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_ID                       CY_PDL_DRV_ID(0x19u)
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEINIT                         (0uL)                                              
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_UNSIGNED_MID_CODE_VALUE        (0x800uL)                                          
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_UNSIGNED_MAX_CODE_VALUE        (0xFFFuL)                                          
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FAST_CLKCFG_TYPE               CY_SYSCLK_DIV_8_BIT                                
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FAST_CLKCFG_NUM                (0uL)                                              
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FAST_CLKCFG_DIV                (99uL)                                             
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \cond INTERNAL */
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEINT_CTDAC_SW                 (CTDAC_CTDAC_SW_CLEAR_CTDD_CVD_Msk | CTDAC_CTDAC_SW
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_STROBE_EDGE_IMMEDIATE_DIV      (0uL)                                              
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_STROBE_EDGE_IMMEDIATE_DIV_FRAC (0uL)                                              
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEGLITCH_CYCLES_MAX            (63uL)
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**< Macros for conditions used by CY_ASSERT calls */
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_REFSOURCE(source)                  (((source) == CY_CTDAC_REFSOURCE_EXTERNAL) || (
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FORMAT(mode)                       (((mode) == CY_CTDAC_FORMAT_UNSIGNED) || ((mode
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_UPDATE(mode)                       ((mode) <= CY_CTDAC_UPDATE_STROBE_LEVEL)
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEGLITCH(mode)                     (((mode) == CY_CTDAC_DEGLITCHMODE_NONE) \
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_DEGLITCHMODE_UNBUFFERED)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_DEGLITCHMODE_BUFFERED) \
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_DEGLITCHMODE_BOTH))
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_OUTPUTMODE(mode)                   (((mode) == CY_CTDAC_OUTPUT_HIGHZ) \
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VALUE) \
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VALUE_PLUS1) \
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VSSA) \
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VREF))
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_OUTPUTBUFFER(buffer)               (((buffer) == CY_CTDAC_OUTPUT_UNBUFFERED) || ((
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEEPSLEEP(deepSleep)               (((deepSleep) == CY_CTDAC_DEEPSLEEP_DISABLE) ||
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEGLITCHCYCLES(cycles)             ((cycles) <= CY_CTDAC_DEGLITCH_CYCLES_MAX)
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_SWITCHMASK(mask)                   ((mask) <= (uint32_t) (CY_CTDAC_SWITCH_CVD_MASK
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_SWITCHSTATE(state)                 (((state) == CY_CTDAC_SWITCH_OPEN) || ((state) 
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_INTRMASK(mask)                     (((mask) == 0uL) || ((mask) == 1uL))
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \endcond */
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_macros */
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       Enumerated Types
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_enums
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the mode for how the DAC value is updated.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * All the modes require a CTDAC clock except for \ref group_ctdac_updatemode_direct_write.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_DIRECT_WRITE            = 0uL,  /**< DAC value is updated with a direct write b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 76


 435:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_BUFFERED_WRITE          = 1uL,  /**< DAC value stored with \ref Cy_CTDAC_SetVal
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_STROBE_EDGE_SYNC        = 2uL,  /**< DAC value stored with \ref Cy_CTDAC_SetVal
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_STROBE_EDGE_IMMEDIATE   = 3uL,  /**< DAC value stored with \ref Cy_CTDAC_SetVal
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_STROBE_LEVEL            = 4uL   /**< DAC value stored with \ref Cy_CTDAC_SetVal
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_update_t;
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the format in which the DAC value register is decoded.
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_FORMAT_UNSIGNED    = 0uL,                                         /**< Unsigned 12-bit
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_FORMAT_SIGNED      = 1uL << CTDAC_CTDAC_CTRL_CTDAC_MODE_Pos       /**< Virtual signed.
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_format_t;
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Enable or disable the CTDAC hardware during Deep Sleep.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEEPSLEEP_DISABLE  = 0uL,                                  /**< DAC is disabled during
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEEPSLEEP_ENABLE   = CTDAC_CTDAC_CTRL_DEEPSLEEP_ON_Msk     /**< DAC remains enabled du
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_deep_sleep_t;
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the output state of the CTDAC.
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_HIGHZ           = 0uL,                                  /**< DAC output is tri-
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VALUE           = CTDAC_CTDAC_CTRL_OUT_EN_Msk,          /**< DAC Output is enab
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VALUE_PLUS1     = CTDAC_CTDAC_CTRL_OUT_EN_Msk \
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                       | CTDAC_CTDAC_CTRL_CTDAC_RANGE_Msk,   /**< DAC Output enabled
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VSSA            = CTDAC_CTDAC_CTRL_DISABLED_MODE_Msk,   /**< Output is pulled t
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VREF            = CTDAC_CTDAC_CTRL_DISABLED_MODE_Msk \
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                       | CTDAC_CTDAC_CTRL_CTDAC_RANGE_Msk    /**< Output is pulled t
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_output_mode_t;
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the deglitch mode. See the \ref group_ctdac_deglitch section for
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * more information on how deglitching works.
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_NONE          = 0uL,                                  /**< Disable deglit
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_UNBUFFERED    = CTDAC_CTDAC_CTRL_DEGLITCH_CO6_Msk,    /**< Deglitch throu
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_BUFFERED      = CTDAC_CTDAC_CTRL_DEGLITCH_COS_Msk,    /**< Deglitch throu
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_BOTH          = CTDAC_CTDAC_CTRL_DEGLITCH_COS_Msk \
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                           | CTDAC_CTDAC_CTRL_DEGLITCH_CO6_Msk   /**< Deglitch throu
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_deglitch_t;
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the reference source for the CTDAC
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CVD switch is closed when Vdda is the reference source.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_REFSOURCE_EXTERNAL     = 0uL,        /**< Use an external source from Opamp1 of the CT
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_REFSOURCE_VDDA         = 1uL         /**< Use Vdda as the reference. CVD switch is clo
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_ref_source_t;
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 77


 492:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure the output to be buffered or unbuffered
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CO6 switch is closed when the output is unbuffered to Pin 6 of the CTDAC port.
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * See the device datasheet for the CTDAC port.
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_BUFFERED        = 0uL,      /**< Buffer the output through the CTB OA0 */
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_UNBUFFERED      = 1uL       /**< Send output to a direct pin */
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_output_buffer_t;
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Switch state, either open or closed, to be used in \ref Cy_CTDAC_SetAnalogSwitch. */
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_switch_state_t;
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Switch mask to be used in \ref Cy_CTDAC_SetAnalogSwitch */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_CVD_MASK     = CTDAC_CTDAC_SW_CTDD_CVD_Msk,    /**< Switch for the reference so
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_CO6_MASK     = CTDAC_CTDAC_SW_CTDO_CO6_Msk     /**< Switch for the output, buff
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_switches_t;
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Return states for \ref Cy_CTDAC_Init, \ref Cy_CTDAC_DeInit, and \ref Cy_CTDAC_FastInit */
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SUCCESS    = 0x00uL,                                         /**< Initialization compl
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_BAD_PARAM  = CY_CTDAC_ID | CY_PDL_STATUS_ERROR | 0x01uL      /**< Input pointers were 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_status_t;
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_enums */
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       Configuration Structures
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_data_structures
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configuration structure to set up the entire CTDAC block to be used with \ref Cy_CTDAC_Init
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef struct
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_ref_source_t    refSource;          /**< Reference source: Vdda or externally throu
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_format_t        formatMode;         /**< Format of DAC value: signed or unsigned */
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_update_t        updateMode;         /**< Update mode: direct or buffered writes or 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_deglitch_t      deglitchMode;       /**< Deglitch mode: disabled, buffered, unbuffe
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_output_mode_t   outputMode;         /**< Output mode: enabled (value or value + 1),
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_output_buffer_t outputBuffer;       /**< Output path: Buffered through Opamp0 of CT
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_deep_sleep_t    deepSleep;          /**< Enable or disable the CTDAC during Deep Sl
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    deglitchCycles;     /**< Number of deglitch cycles from 0 to 63 */
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     int32_t                     value;              /**< Current DAC value */
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     int32_t                     nextValue;          /**< Next DAC value for double buffering */
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     bool                        enableInterrupt;    /**< If true, enable interrupt when next value 
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 78


 549:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     /* Configuring the clock */
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     bool                        configClock;        /**< Configure or ignore clock information */
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_divider_types_t       dividerType;        /**< Specifies which type of divider to use. Ca
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    dividerNum;         /**< Specifies which divider of the selected ty
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    dividerIntValue;    /**< The integer divider value. The divider val
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    dividerFracValue;   /**< The fractional divider value if using a fr
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_stc_ctdac_config_t;
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configuration structure to quickly set up the CTDAC to be used with \ref Cy_CTDAC_FastInit
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This structure provides a selection for the CTDAC reference source and output path.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The other configuration options are set to:
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .formatMode       = \ref CY_CTDAC_FORMAT_UNSIGNED
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .updateMode       = \ref CY_CTDAC_UPDATE_BUFFERED_WRITE
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .deglitchMode     = \ref CY_CTDAC_DEGLITCHMODE_NONE
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .outputMode       = \ref CY_CTDAC_OUTPUT_VALUE
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .deepSleep        = \ref CY_CTDAC_DEEPSLEEP_DISABLE
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .deglitchCycles   = \ref CY_CTDAC_DEINIT
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .value            = \ref CY_CTDAC_UNSIGNED_MID_CODE_VALUE
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .nextValue        = \ref CY_CTDAC_UNSIGNED_MID_CODE_VALUE
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .enableInterrupt  = true
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .configClock      = true
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerType      = \ref CY_CTDAC_FAST_CLKCFG_TYPE
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerNum       = \ref CY_CTDAC_FAST_CLKCFG_NUM
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerInitValue = \ref CY_CTDAC_FAST_CLKCFG_DIV
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerFracValue = \ref CY_CTDAC_DEINIT
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef struct
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_ref_source_t    refSource;          /**< Reference source: Vdda or externally throu
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_output_buffer_t outputBuffer;       /**< Output path: Buffered through Opamp0 of CT
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_stc_ctdac_fast_config_t;
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** CTDAC context structure.
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * All fields for the context structure are internal. Firmware never reads or
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * writes these values. Firmware allocates the structure and provides the
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * address of the structure when registering the \ref Cy_CTDAC_DeepSleepCallback.
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Firmware must ensure that the defined instance of this structure remains in scope
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * while the drive is in use.
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef struct
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t deglitchModeBeforeSleep;   /**< Tracks the state of the deglitch mode before sleep so 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_stc_ctdac_context_t;
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_data_structures */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_globals
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *        Global Variables
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use Vdda reference and output unbuffered. See \ref Cy_CTDAC_FastInit. */
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_VddaRef_UnbufferedOut;
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 79


 606:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use Vdda reference and output buffered through Opamp0 of CTB. See \ref Cy_CT
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To quickly configure Opamp0, call with \ref Cy_CTB_FastInit
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * with \ref Cy_CTB_Fast_Opamp0_Vdac_Out or \ref Cy_CTB_Fast_Opamp0_Vdac_Out_SH.
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_VddaRef_BufferedOut;
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use a buffered reference from Opamp1 of CTB
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and output unbuffered. See \ref Cy_CTDAC_FastInit.
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use the reference from the Analog Reference (AREF),
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Aref.
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use an external reference from a GPIO,
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Pin5
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * for Pin 5 on the CTB port.
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_OA1Ref_UnbufferedOut;
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use a buffered reference from Opamp1 of CTB
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and output buffered through Opamp0 of CTB. See \ref Cy_CTDAC_FastInit.
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To quickly configure Opamp0, call with \ref Cy_CTB_FastInit
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * with \ref Cy_CTB_Fast_Opamp0_Vdac_Out or \ref Cy_CTB_Fast_Opamp0_Vdac_Out_SH.
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use the reference from the Analog Reference (AREF),
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Aref.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use an external reference from a GPIO,
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Pin5
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * for Pins 5 on the CTB port.
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_OA1Ref_BufferedOut;
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_globals */
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *        Function Prototypes
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_init
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions are for initializing, enabling, and disabling the CTDAC.
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_ctdac_status_t Cy_CTDAC_Init(CTDAC_Type *base, const cy_stc_ctdac_config_t *config);
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_ctdac_status_t Cy_CTDAC_DeInit(CTDAC_Type *base, bool deInitRouting);
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_ctdac_status_t Cy_CTDAC_FastInit(CTDAC_Type *base, const cy_stc_ctdac_fast_config_t *config);
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Enable(CTDAC_Type *base);
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Disable(CTDAC_Type *base);
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 80


 663:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_basic
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions are for configuring basic usage of the CTDAC.
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValue(CTDAC_Type *base, int32_t value);
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValueBuffered(CTDAC_Type *base, int32_t value);
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetSignMode(CTDAC_Type *base, cy_en_ctdac_format_t formatMode);
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetDeepSleepMode(CTDAC_Type *base, cy_en_ctdac_deep_sleep_t deepSleep);
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetOutputMode(CTDAC_Type *base, cy_en_ctdac_output_mode_t outputMode);
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetDeglitchMode(CTDAC_Type *base, cy_en_ctdac_deglitch_t deglitchMode);
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetDeglitchCycles(CTDAC_Type *base, uint32_t deglitchCycles);
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetRef(CTDAC_Type *base, cy_en_ctdac_ref_source_t refSource);
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_functions_switches
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions is for controlling the two CTDAC analog switches, CVD, and CO6.
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * These are advanced functions. The switches will be managed by the reference
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * source and output mode selections when initializing the hardware.
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetAnalogSwitch(CTDAC_Type *base, uint32_t switchMask, cy_en_ctdac_switch_state_t sta
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetAnalogSwitch(const CTDAC_Type *base);
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetSwitchCO6(CTDAC_Type *base, cy_en_ctdac_switch_state_t state);
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_OpenAllSwitches(CTDAC_Type *base);
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_functions_interrupts
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions is related to the CTDAC interrupt
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetInterruptStatus(const CTDAC_Type *base);
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_ClearInterrupt(CTDAC_Type *base);
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetInterrupt(CTDAC_Type *base);
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetInterruptMask(CTDAC_Type *base, uint32_t mask);
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetInterruptMask(const CTDAC_Type *base);
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetInterruptStatusMasked(const CTDAC_Type *base);
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_functions_syspm_callback
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This driver supports one SysPm callback for Deep Sleep transition.
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_syspm_status_t Cy_CTDAC_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_init
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_Enable
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Power up the CTDAC hardware block.
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 81


 720:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Enable(CTDAC_Type *base)
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_CTRL(base) |= CTDAC_CTDAC_CTRL_ENABLED_Msk;
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_Disable
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Turn off the hardware block.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Disable(CTDAC_Type *base)
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_CTRL(base) &= ~CTDAC_CTDAC_CTRL_ENABLED_Msk;
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_basic
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_SetValue
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Set the CTDAC_VAL register (DAC hardware is
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * updated on the next PeriClk cycle).  Only the least significant 12 bits
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * have an effect. Sign extension of negative values is unnecessary and is
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * ignored by the hardware. The way in which the CTDAC interprets the 12-bit
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * data is controlled by \ref Cy_CTDAC_SetSignMode.
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \note
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Call this function only when the update mode is set to \ref group_ctdac_updatemode_direct_write.
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Calling this function for any other update mode will not have the intended effect.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param value
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Value to write into the CTDAC_VAL register
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \funcusage
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 82


 777:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm4.c CTDAC_SNIPPET_SET_VALUE
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValue(CTDAC_Type *base, int32_t value)
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_VAL(base) = (((uint32_t)value) << CTDAC_CTDAC_VAL_VALUE_Pos) & CTDAC_CTDAC_VAL_VALU
 240              		.loc 5 782 0 discriminator 3
 241 0024 C3F30B03 		ubfx	r3, r3, #0, #12
 242              	.LVL24:
 243 0028 0E4A     		ldr	r2, .L13+12
 244              	.LVL25:
 245 002a C2F80031 		str	r3, [r2, #256]
 246              	.LVL26:
 247              	.LBE72:
 248              	.LBE71:
 249              	.LBE70:
  99:main_cm4.c    ****         VDAC_1_SetValue(value);
 100:main_cm4.c    ****         
 101:main_cm4.c    ****         //Only codes, no mV
 102:main_cm4.c    ****         /*
 103:main_cm4.c    ****         int32_t code = codes[idx] + 2048;
 104:main_cm4.c    ****         VDAC_1_SetValue(value);
 105:main_cm4.c    ****         */
 106:main_cm4.c    ****         
 107:main_cm4.c    ****         CyDelayUs(83);
 250              		.loc 1 107 0 discriminator 3
 251 002e 5320     		movs	r0, #83
 252 0030 FFF7FEFF 		bl	Cy_SysLib_DelayUs
 253              	.LVL27:
 254              	.LBE69:
  91:main_cm4.c    ****         /*
 255              		.loc 1 91 0 discriminator 3
 256 0034 0134     		adds	r4, r4, #1
 257              	.LVL28:
 258              	.L10:
  91:main_cm4.c    ****         /*
 259              		.loc 1 91 0 is_stmt 0 discriminator 1
 260 0036 0C4B     		ldr	r3, .L13+16
 261 0038 9C42     		cmp	r4, r3
 262 003a ECDD     		ble	.L11
 263              	.LVL29:
 264              	.LBE68:
 265              	.LBB73:
 266              	.LBB74:
 267              	.LBB75:
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }
 268              		.loc 5 745 0 is_stmt 1
 269 003c 094A     		ldr	r2, .L13+12
 270 003e 1368     		ldr	r3, [r2]
 271 0040 23F00043 		bic	r3, r3, #-2147483648
 272 0044 1360     		str	r3, [r2]
 273              	.LVL30:
 274              	.LBE75:
 275              	.LBE74:
 276              	.LBE73:
 277              	.LBB76:
 278              	.LBB77:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 83


 279              		.loc 2 817 0
 280 0046 0822     		movs	r2, #8
 281 0048 034B     		ldr	r3, .L13
 282 004a 9A60     		str	r2, [r3, #8]
 283              	.LVL31:
 284              	.LBE77:
 285              	.LBE76:
 108:main_cm4.c    ****     }
 109:main_cm4.c    ****     
 110:main_cm4.c    ****     VDAC_1_Stop();
 111:main_cm4.c    ****     
 112:main_cm4.c    ****     Cy_GPIO_Write(RED_PORT, RED_NUM, 1);
 113:main_cm4.c    ****     printf("Finished voice playing.\r\n\n");
 286              		.loc 1 113 0
 287 004c 0748     		ldr	r0, .L13+20
 288 004e FFF7FEFF 		bl	puts
 289              	.LVL32:
 114:main_cm4.c    **** 
 115:main_cm4.c    ****     return 0;
 116:main_cm4.c    **** }
 290              		.loc 1 116 0
 291 0052 0020     		movs	r0, #0
 292 0054 10BD     		pop	{r4, pc}
 293              	.LVL33:
 294              	.L14:
 295 0056 00BF     		.align	2
 296              	.L13:
 297 0058 00003240 		.word	1077018624
 298 005c 58000000 		.word	.LC3
 299 0060 00000000 		.word	voice
 300 0064 00001441 		.word	1091829760
 301 0068 BFD40100 		.word	119999
 302 006c 74000000 		.word	.LC4
 303              		.cfi_endproc
 304              	.LFE578:
 305              		.size	play_voice, .-play_voice
 306              		.section	.text.main,"ax",%progbits
 307              		.align	2
 308              		.global	main
 309              		.thumb
 310              		.thumb_func
 311              		.type	main, %function
 312              	main:
 313              	.LFB576:
  28:main_cm4.c    ****     __enable_irq(); /* Enable global interrupts. */
 314              		.loc 1 28 0
 315              		.cfi_startproc
 316              		@ Volatile: function does not return.
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 08B5     		push	{r3, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
 323              	.LBB78:
 324              	.LBB79:
 325              		.file 6 "Generated_Source\\PSoC6\\pdl\\cmsis/include/cmsis_gcc.h"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 84


   1:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @version  V5.0.3
   5:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @date     16. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  28:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  39:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ASM
  41:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  43:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  46:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  49:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif                                           
  52:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  55:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __USED
  56:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 85


  58:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  61:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  64:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  67:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  70:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  78:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  86:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  94:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 86


 115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 326              		.loc 6 131 0
 327              		.syntax unified
 328              	@ 131 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 329 0002 62B6     		cpsie i
 330              	@ 0 "" 2
 331              		.thumb
 332              		.syntax unified
 333              	.LBE79:
 334              	.LBE78:
  31:main_cm4.c    ****     CapSense_Start();
 335              		.loc 1 31 0
 336 0004 FFF7FEFF 		bl	UART_Start
 337              	.LVL34:
  32:main_cm4.c    ****     setvbuf(stdin, NULL, _IONBF, 0);
 338              		.loc 1 32 0
 339 0008 FFF7FEFF 		bl	CapSense_Start
 340              	.LVL35:
  33:main_cm4.c    ****     
 341              		.loc 1 33 0
 342 000c 114B     		ldr	r3, .L21
 343 000e 1868     		ldr	r0, [r3]
 344 0010 0023     		movs	r3, #0
 345 0012 0222     		movs	r2, #2
 346 0014 1946     		mov	r1, r3
 347 0016 4068     		ldr	r0, [r0, #4]
 348 0018 FFF7FEFF 		bl	setvbuf
 349              	.LVL36:
  35:main_cm4.c    ****     printf("------------------- CapSense VoiceRepeater log -------------------\r\n\n");
 350              		.loc 1 35 0
 351 001c 0E48     		ldr	r0, .L21+4
 352 001e FFF7FEFF 		bl	printf
 353              	.LVL37:
  36:main_cm4.c    **** 
 354              		.loc 1 36 0
 355 0022 0E48     		ldr	r0, .L21+8
 356 0024 FFF7FEFF 		bl	puts
 357              	.LVL38:
 358              	.L16:
  40:main_cm4.c    ****         if (!CapSense_IsBusy()) {
 359              		.loc 1 40 0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 87


 360 0028 FFF7FEFF 		bl	CapSense_ScanAllWidgets
 361              	.LVL39:
  41:main_cm4.c    ****             CapSense_ProcessAllWidgets();
 362              		.loc 1 41 0
 363 002c FFF7FEFF 		bl	CapSense_IsBusy
 364              	.LVL40:
 365 0030 0028     		cmp	r0, #0
 366 0032 F9D1     		bne	.L16
  42:main_cm4.c    ****             if (CapSense_IsWidgetActive(CapSense_BUTTON0_WDGT_ID)) {
 367              		.loc 1 42 0
 368 0034 FFF7FEFF 		bl	CapSense_ProcessAllWidgets
 369              	.LVL41:
  43:main_cm4.c    ****                 write_voice();
 370              		.loc 1 43 0
 371 0038 0020     		movs	r0, #0
 372 003a FFF7FEFF 		bl	CapSense_IsWidgetActive
 373              	.LVL42:
 374 003e 08B1     		cbz	r0, .L17
  44:main_cm4.c    ****             }
 375              		.loc 1 44 0
 376 0040 FFF7FEFF 		bl	write_voice
 377              	.LVL43:
 378              	.L17:
  46:main_cm4.c    ****                 play_voice();
 379              		.loc 1 46 0
 380 0044 0120     		movs	r0, #1
 381 0046 FFF7FEFF 		bl	CapSense_IsWidgetActive
 382              	.LVL44:
 383 004a 0028     		cmp	r0, #0
 384 004c ECD0     		beq	.L16
  47:main_cm4.c    ****             }
 385              		.loc 1 47 0
 386 004e FFF7FEFF 		bl	play_voice
 387              	.LVL45:
 388 0052 E9E7     		b	.L16
 389              	.L22:
 390              		.align	2
 391              	.L21:
 392 0054 00000000 		.word	_impure_ptr
 393 0058 90000000 		.word	.LC5
 394 005c 98000000 		.word	.LC6
 395              		.cfi_endproc
 396              	.LFE576:
 397              		.size	main, .-main
 398              		.comm	voice,120000,4
 399              		.section	.rodata.str1.4,"aMS",%progbits,1
 400              		.align	2
 401              	.LC0:
 402 0000 53746172 		.ascii	"Started voice recording...\015\000"
 402      74656420 
 402      766F6963 
 402      65207265 
 402      636F7264 
 403              	.LC1:
 404 001c 47656E65 		.ascii	"Generated_Source\\PSoC6/ADC.h\000"
 404      72617465 
 404      645F536F 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 88


 404      75726365 
 404      5C50536F 
 405 0039 000000   		.space	3
 406              	.LC2:
 407 003c 46696E69 		.ascii	"Finished voice recording.\015\012\000"
 407      73686564 
 407      20766F69 
 407      63652072 
 407      65636F72 
 408              	.LC3:
 409 0058 53746172 		.ascii	"Started voice playing...\015\000"
 409      74656420 
 409      766F6963 
 409      6520706C 
 409      6179696E 
 410 0072 0000     		.space	2
 411              	.LC4:
 412 0074 46696E69 		.ascii	"Finished voice playing.\015\012\000"
 412      73686564 
 412      20766F69 
 412      63652070 
 412      6C617969 
 413 008e 0000     		.space	2
 414              	.LC5:
 415 0090 1B5B324A 		.ascii	"\033[2J\033[H\000"
 415      1B5B4800 
 416              	.LC6:
 417 0098 2D2D2D2D 		.ascii	"------------------- CapSense VoiceRepeater log ----"
 417      2D2D2D2D 
 417      2D2D2D2D 
 417      2D2D2D2D 
 417      2D2D2D20 
 418 00cb 2D2D2D2D 		.ascii	"---------------\015\012\000"
 418      2D2D2D2D 
 418      2D2D2D2D 
 418      2D2D2D0D 
 418      0A00
 419              		.text
 420              	.Letext0:
 421              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 422              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 423              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_gpio.h"
 424              		.file 10 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ctdac.h"
 425              		.file 11 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 426              		.file 12 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 427              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 428              		.file 14 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 429              		.file 15 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
 430              		.file 16 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
 431              		.file 17 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 432              		.file 18 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 433              		.file 19 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 434              		.file 20 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 435              		.file 21 "Generated_Source\\PSoC6/VDAC_1.h"
 436              		.file 22 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 437              		.file 23 "Generated_Source\\PSoC6/UART.h"
 438              		.file 24 "Generated_Source\\PSoC6/CapSense_Control.h"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 89


 439              		.file 25 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 440              		.file 26 "Generated_Source\\PSoC6/CapSense_Sensing.h"
 441              		.file 27 "Generated_Source\\PSoC6/CapSense_Structure.h"
 442              		.file 28 "<built-in>"
 443              		.section	.debug_info,"",%progbits
 444              	.Ldebug_info0:
 445 0000 411F0000 		.4byte	0x1f41
 446 0004 0400     		.2byte	0x4
 447 0006 00000000 		.4byte	.Ldebug_abbrev0
 448 000a 04       		.byte	0x4
 449 000b 01       		.uleb128 0x1
 450 000c D7030000 		.4byte	.LASF443
 451 0010 0C       		.byte	0xc
 452 0011 6A000000 		.4byte	.LASF444
 453 0015 E4060000 		.4byte	.LASF445
 454 0019 00000000 		.4byte	.Ldebug_ranges0+0
 455 001d 00000000 		.4byte	0
 456 0021 00000000 		.4byte	.Ldebug_line0
 457 0025 02       		.uleb128 0x2
 458 0026 02       		.byte	0x2
 459 0027 05       		.byte	0x5
 460 0028 BF020000 		.4byte	.LASF0
 461 002c 03       		.uleb128 0x3
 462 002d A7120000 		.4byte	.LASF2
 463 0031 07       		.byte	0x7
 464 0032 1B       		.byte	0x1b
 465 0033 37000000 		.4byte	0x37
 466 0037 02       		.uleb128 0x2
 467 0038 01       		.byte	0x1
 468 0039 06       		.byte	0x6
 469 003a 4D160000 		.4byte	.LASF1
 470 003e 03       		.uleb128 0x3
 471 003f 00120000 		.4byte	.LASF3
 472 0043 07       		.byte	0x7
 473 0044 1D       		.byte	0x1d
 474 0045 49000000 		.4byte	0x49
 475 0049 02       		.uleb128 0x2
 476 004a 01       		.byte	0x1
 477 004b 08       		.byte	0x8
 478 004c 28140000 		.4byte	.LASF4
 479 0050 03       		.uleb128 0x3
 480 0051 3E0D0000 		.4byte	.LASF5
 481 0055 07       		.byte	0x7
 482 0056 29       		.byte	0x29
 483 0057 25000000 		.4byte	0x25
 484 005b 03       		.uleb128 0x3
 485 005c 330A0000 		.4byte	.LASF6
 486 0060 07       		.byte	0x7
 487 0061 2B       		.byte	0x2b
 488 0062 66000000 		.4byte	0x66
 489 0066 02       		.uleb128 0x2
 490 0067 02       		.byte	0x2
 491 0068 07       		.byte	0x7
 492 0069 1D0F0000 		.4byte	.LASF7
 493 006d 03       		.uleb128 0x3
 494 006e 28020000 		.4byte	.LASF8
 495 0072 07       		.byte	0x7
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 90


 496 0073 3F       		.byte	0x3f
 497 0074 78000000 		.4byte	0x78
 498 0078 02       		.uleb128 0x2
 499 0079 04       		.byte	0x4
 500 007a 05       		.byte	0x5
 501 007b 15110000 		.4byte	.LASF9
 502 007f 03       		.uleb128 0x3
 503 0080 4A140000 		.4byte	.LASF10
 504 0084 07       		.byte	0x7
 505 0085 41       		.byte	0x41
 506 0086 8A000000 		.4byte	0x8a
 507 008a 02       		.uleb128 0x2
 508 008b 04       		.byte	0x4
 509 008c 07       		.byte	0x7
 510 008d 3D130000 		.4byte	.LASF11
 511 0091 02       		.uleb128 0x2
 512 0092 08       		.byte	0x8
 513 0093 05       		.byte	0x5
 514 0094 B30C0000 		.4byte	.LASF12
 515 0098 02       		.uleb128 0x2
 516 0099 08       		.byte	0x8
 517 009a 07       		.byte	0x7
 518 009b 02060000 		.4byte	.LASF13
 519 009f 04       		.uleb128 0x4
 520 00a0 04       		.byte	0x4
 521 00a1 05       		.byte	0x5
 522 00a2 696E7400 		.ascii	"int\000"
 523 00a6 02       		.uleb128 0x2
 524 00a7 04       		.byte	0x4
 525 00a8 07       		.byte	0x7
 526 00a9 83010000 		.4byte	.LASF14
 527 00ad 03       		.uleb128 0x3
 528 00ae 91050000 		.4byte	.LASF15
 529 00b2 08       		.byte	0x8
 530 00b3 14       		.byte	0x14
 531 00b4 2C000000 		.4byte	0x2c
 532 00b8 03       		.uleb128 0x3
 533 00b9 B10B0000 		.4byte	.LASF16
 534 00bd 08       		.byte	0x8
 535 00be 18       		.byte	0x18
 536 00bf 3E000000 		.4byte	0x3e
 537 00c3 03       		.uleb128 0x3
 538 00c4 A0060000 		.4byte	.LASF17
 539 00c8 08       		.byte	0x8
 540 00c9 20       		.byte	0x20
 541 00ca 50000000 		.4byte	0x50
 542 00ce 03       		.uleb128 0x3
 543 00cf 460F0000 		.4byte	.LASF18
 544 00d3 08       		.byte	0x8
 545 00d4 24       		.byte	0x24
 546 00d5 5B000000 		.4byte	0x5b
 547 00d9 03       		.uleb128 0x3
 548 00da 85130000 		.4byte	.LASF19
 549 00de 08       		.byte	0x8
 550 00df 2C       		.byte	0x2c
 551 00e0 6D000000 		.4byte	0x6d
 552 00e4 03       		.uleb128 0x3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 91


 553 00e5 88050000 		.4byte	.LASF20
 554 00e9 08       		.byte	0x8
 555 00ea 30       		.byte	0x30
 556 00eb 7F000000 		.4byte	0x7f
 557 00ef 02       		.uleb128 0x2
 558 00f0 04       		.byte	0x4
 559 00f1 07       		.byte	0x7
 560 00f2 F50F0000 		.4byte	.LASF21
 561 00f6 05       		.uleb128 0x5
 562 00f7 E4000000 		.4byte	0xe4
 563 00fb 06       		.uleb128 0x6
 564 00fc F6000000 		.4byte	0xf6
 565 0100 07       		.uleb128 0x7
 566 0101 FB000000 		.4byte	0xfb
 567 0105 10010000 		.4byte	0x110
 568 0109 08       		.uleb128 0x8
 569 010a EF000000 		.4byte	0xef
 570 010e 01       		.byte	0x1
 571 010f 00       		.byte	0
 572 0110 07       		.uleb128 0x7
 573 0111 F6000000 		.4byte	0xf6
 574 0115 20010000 		.4byte	0x120
 575 0119 08       		.uleb128 0x8
 576 011a EF000000 		.4byte	0xef
 577 011e 0F       		.byte	0xf
 578 011f 00       		.byte	0
 579 0120 07       		.uleb128 0x7
 580 0121 FB000000 		.4byte	0xfb
 581 0125 30010000 		.4byte	0x130
 582 0129 08       		.uleb128 0x8
 583 012a EF000000 		.4byte	0xef
 584 012e 06       		.byte	0x6
 585 012f 00       		.byte	0
 586 0130 07       		.uleb128 0x7
 587 0131 FB000000 		.4byte	0xfb
 588 0135 40010000 		.4byte	0x140
 589 0139 08       		.uleb128 0x8
 590 013a EF000000 		.4byte	0xef
 591 013e 0F       		.byte	0xf
 592 013f 00       		.byte	0
 593 0140 07       		.uleb128 0x7
 594 0141 FB000000 		.4byte	0xfb
 595 0145 50010000 		.4byte	0x150
 596 0149 08       		.uleb128 0x8
 597 014a EF000000 		.4byte	0xef
 598 014e 02       		.byte	0x2
 599 014f 00       		.byte	0
 600 0150 07       		.uleb128 0x7
 601 0151 FB000000 		.4byte	0xfb
 602 0155 60010000 		.4byte	0x160
 603 0159 08       		.uleb128 0x8
 604 015a EF000000 		.4byte	0xef
 605 015e 0E       		.byte	0xe
 606 015f 00       		.byte	0
 607 0160 07       		.uleb128 0x7
 608 0161 FB000000 		.4byte	0xfb
 609 0165 70010000 		.4byte	0x170
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 92


 610 0169 08       		.uleb128 0x8
 611 016a EF000000 		.4byte	0xef
 612 016e 1F       		.byte	0x1f
 613 016f 00       		.byte	0
 614 0170 09       		.uleb128 0x9
 615 0171 80       		.byte	0x80
 616 0172 09       		.byte	0x9
 617 0173 22       		.byte	0x22
 618 0174 44020000 		.4byte	0x244
 619 0178 0A       		.uleb128 0xa
 620 0179 4F555400 		.ascii	"OUT\000"
 621 017d 09       		.byte	0x9
 622 017e 23       		.byte	0x23
 623 017f F6000000 		.4byte	0xf6
 624 0183 00       		.byte	0
 625 0184 0B       		.uleb128 0xb
 626 0185 82060000 		.4byte	.LASF22
 627 0189 09       		.byte	0x9
 628 018a 24       		.byte	0x24
 629 018b F6000000 		.4byte	0xf6
 630 018f 04       		.byte	0x4
 631 0190 0B       		.uleb128 0xb
 632 0191 19060000 		.4byte	.LASF23
 633 0195 09       		.byte	0x9
 634 0196 25       		.byte	0x25
 635 0197 F6000000 		.4byte	0xf6
 636 019b 08       		.byte	0x8
 637 019c 0B       		.uleb128 0xb
 638 019d F0110000 		.4byte	.LASF24
 639 01a1 09       		.byte	0x9
 640 01a2 26       		.byte	0x26
 641 01a3 F6000000 		.4byte	0xf6
 642 01a7 0C       		.byte	0xc
 643 01a8 0A       		.uleb128 0xa
 644 01a9 494E00   		.ascii	"IN\000"
 645 01ac 09       		.byte	0x9
 646 01ad 27       		.byte	0x27
 647 01ae FB000000 		.4byte	0xfb
 648 01b2 10       		.byte	0x10
 649 01b3 0B       		.uleb128 0xb
 650 01b4 820D0000 		.4byte	.LASF25
 651 01b8 09       		.byte	0x9
 652 01b9 28       		.byte	0x28
 653 01ba F6000000 		.4byte	0xf6
 654 01be 14       		.byte	0x14
 655 01bf 0B       		.uleb128 0xb
 656 01c0 A90D0000 		.4byte	.LASF26
 657 01c4 09       		.byte	0x9
 658 01c5 29       		.byte	0x29
 659 01c6 F6000000 		.4byte	0xf6
 660 01ca 18       		.byte	0x18
 661 01cb 0B       		.uleb128 0xb
 662 01cc 900E0000 		.4byte	.LASF27
 663 01d0 09       		.byte	0x9
 664 01d1 2A       		.byte	0x2a
 665 01d2 FB000000 		.4byte	0xfb
 666 01d6 1C       		.byte	0x1c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 93


 667 01d7 0B       		.uleb128 0xb
 668 01d8 50030000 		.4byte	.LASF28
 669 01dc 09       		.byte	0x9
 670 01dd 2B       		.byte	0x2b
 671 01de F6000000 		.4byte	0xf6
 672 01e2 20       		.byte	0x20
 673 01e3 0B       		.uleb128 0xb
 674 01e4 73140000 		.4byte	.LASF29
 675 01e8 09       		.byte	0x9
 676 01e9 2C       		.byte	0x2c
 677 01ea F6000000 		.4byte	0xf6
 678 01ee 24       		.byte	0x24
 679 01ef 0A       		.uleb128 0xa
 680 01f0 43464700 		.ascii	"CFG\000"
 681 01f4 09       		.byte	0x9
 682 01f5 2D       		.byte	0x2d
 683 01f6 F6000000 		.4byte	0xf6
 684 01fa 28       		.byte	0x28
 685 01fb 0B       		.uleb128 0xb
 686 01fc 45050000 		.4byte	.LASF30
 687 0200 09       		.byte	0x9
 688 0201 2E       		.byte	0x2e
 689 0202 F6000000 		.4byte	0xf6
 690 0206 2C       		.byte	0x2c
 691 0207 0B       		.uleb128 0xb
 692 0208 1D080000 		.4byte	.LASF31
 693 020c 09       		.byte	0x9
 694 020d 2F       		.byte	0x2f
 695 020e F6000000 		.4byte	0xf6
 696 0212 30       		.byte	0x30
 697 0213 0B       		.uleb128 0xb
 698 0214 15020000 		.4byte	.LASF32
 699 0218 09       		.byte	0x9
 700 0219 30       		.byte	0x30
 701 021a F6000000 		.4byte	0xf6
 702 021e 34       		.byte	0x34
 703 021f 0B       		.uleb128 0xb
 704 0220 14000000 		.4byte	.LASF33
 705 0224 09       		.byte	0x9
 706 0225 31       		.byte	0x31
 707 0226 FB000000 		.4byte	0xfb
 708 022a 38       		.byte	0x38
 709 022b 0B       		.uleb128 0xb
 710 022c C0110000 		.4byte	.LASF34
 711 0230 09       		.byte	0x9
 712 0231 32       		.byte	0x32
 713 0232 F6000000 		.4byte	0xf6
 714 0236 3C       		.byte	0x3c
 715 0237 0B       		.uleb128 0xb
 716 0238 8B170000 		.4byte	.LASF35
 717 023c 09       		.byte	0x9
 718 023d 33       		.byte	0x33
 719 023e 49020000 		.4byte	0x249
 720 0242 40       		.byte	0x40
 721 0243 00       		.byte	0
 722 0244 05       		.uleb128 0x5
 723 0245 30010000 		.4byte	0x130
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 94


 724 0249 06       		.uleb128 0x6
 725 024a 44020000 		.4byte	0x244
 726 024e 03       		.uleb128 0x3
 727 024f 7D0A0000 		.4byte	.LASF36
 728 0253 09       		.byte	0x9
 729 0254 34       		.byte	0x34
 730 0255 70010000 		.4byte	0x170
 731 0259 0C       		.uleb128 0xc
 732 025a 2440     		.2byte	0x4024
 733 025c 09       		.byte	0x9
 734 025d 39       		.byte	0x39
 735 025e E4020000 		.4byte	0x2e4
 736 0262 0A       		.uleb128 0xa
 737 0263 50525400 		.ascii	"PRT\000"
 738 0267 09       		.byte	0x9
 739 0268 3A       		.byte	0x3a
 740 0269 E4020000 		.4byte	0x2e4
 741 026d 00       		.byte	0
 742 026e 0D       		.uleb128 0xd
 743 026f 28000000 		.4byte	.LASF37
 744 0273 09       		.byte	0x9
 745 0274 3B       		.byte	0x3b
 746 0275 FB000000 		.4byte	0xfb
 747 0279 0040     		.2byte	0x4000
 748 027b 0D       		.uleb128 0xd
 749 027c 34000000 		.4byte	.LASF38
 750 0280 09       		.byte	0x9
 751 0281 3C       		.byte	0x3c
 752 0282 FB000000 		.4byte	0xfb
 753 0286 0440     		.2byte	0x4004
 754 0288 0D       		.uleb128 0xd
 755 0289 40000000 		.4byte	.LASF39
 756 028d 09       		.byte	0x9
 757 028e 3D       		.byte	0x3d
 758 028f FB000000 		.4byte	0xfb
 759 0293 0840     		.2byte	0x4008
 760 0295 0D       		.uleb128 0xd
 761 0296 4C000000 		.4byte	.LASF40
 762 029a 09       		.byte	0x9
 763 029b 3E       		.byte	0x3e
 764 029c FB000000 		.4byte	0xfb
 765 02a0 0C40     		.2byte	0x400c
 766 02a2 0D       		.uleb128 0xd
 767 02a3 1D000000 		.4byte	.LASF41
 768 02a7 09       		.byte	0x9
 769 02a8 3F       		.byte	0x3f
 770 02a9 FB000000 		.4byte	0xfb
 771 02ad 1040     		.2byte	0x4010
 772 02af 0D       		.uleb128 0xd
 773 02b0 62090000 		.4byte	.LASF42
 774 02b4 09       		.byte	0x9
 775 02b5 40       		.byte	0x40
 776 02b6 F6000000 		.4byte	0xf6
 777 02ba 1440     		.2byte	0x4014
 778 02bc 0D       		.uleb128 0xd
 779 02bd 37160000 		.4byte	.LASF43
 780 02c1 09       		.byte	0x9
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 95


 781 02c2 41       		.byte	0x41
 782 02c3 F6000000 		.4byte	0xf6
 783 02c7 1840     		.2byte	0x4018
 784 02c9 0D       		.uleb128 0xd
 785 02ca CF0E0000 		.4byte	.LASF44
 786 02ce 09       		.byte	0x9
 787 02cf 42       		.byte	0x42
 788 02d0 FB000000 		.4byte	0xfb
 789 02d4 1C40     		.2byte	0x401c
 790 02d6 0D       		.uleb128 0xd
 791 02d7 580F0000 		.4byte	.LASF45
 792 02db 09       		.byte	0x9
 793 02dc 43       		.byte	0x43
 794 02dd F6000000 		.4byte	0xf6
 795 02e1 2040     		.2byte	0x4020
 796 02e3 00       		.byte	0
 797 02e4 07       		.uleb128 0x7
 798 02e5 4E020000 		.4byte	0x24e
 799 02e9 F4020000 		.4byte	0x2f4
 800 02ed 08       		.uleb128 0x8
 801 02ee EF000000 		.4byte	0xef
 802 02f2 7F       		.byte	0x7f
 803 02f3 00       		.byte	0
 804 02f4 03       		.uleb128 0x3
 805 02f5 B3050000 		.4byte	.LASF46
 806 02f9 09       		.byte	0x9
 807 02fa 44       		.byte	0x44
 808 02fb 59020000 		.4byte	0x259
 809 02ff 0C       		.uleb128 0xc
 810 0300 0801     		.2byte	0x108
 811 0302 0A       		.byte	0xa
 812 0303 21       		.byte	0x21
 813 0304 9B030000 		.4byte	0x39b
 814 0308 0B       		.uleb128 0xb
 815 0309 52010000 		.4byte	.LASF47
 816 030d 0A       		.byte	0xa
 817 030e 22       		.byte	0x22
 818 030f F6000000 		.4byte	0xf6
 819 0313 00       		.byte	0
 820 0314 0B       		.uleb128 0xb
 821 0315 14000000 		.4byte	.LASF33
 822 0319 0A       		.byte	0xa
 823 031a 23       		.byte	0x23
 824 031b A0030000 		.4byte	0x3a0
 825 031f 04       		.byte	0x4
 826 0320 0B       		.uleb128 0xb
 827 0321 820D0000 		.4byte	.LASF25
 828 0325 0A       		.byte	0xa
 829 0326 24       		.byte	0x24
 830 0327 F6000000 		.4byte	0xf6
 831 032b 20       		.byte	0x20
 832 032c 0B       		.uleb128 0xb
 833 032d 50030000 		.4byte	.LASF28
 834 0331 0A       		.byte	0xa
 835 0332 25       		.byte	0x25
 836 0333 F6000000 		.4byte	0xf6
 837 0337 24       		.byte	0x24
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 96


 838 0338 0B       		.uleb128 0xb
 839 0339 A90D0000 		.4byte	.LASF26
 840 033d 0A       		.byte	0xa
 841 033e 26       		.byte	0x26
 842 033f F6000000 		.4byte	0xf6
 843 0343 28       		.byte	0x28
 844 0344 0B       		.uleb128 0xb
 845 0345 900E0000 		.4byte	.LASF27
 846 0349 0A       		.byte	0xa
 847 034a 27       		.byte	0x27
 848 034b FB000000 		.4byte	0xfb
 849 034f 2C       		.byte	0x2c
 850 0350 0B       		.uleb128 0xb
 851 0351 8B170000 		.4byte	.LASF35
 852 0355 0A       		.byte	0xa
 853 0356 28       		.byte	0x28
 854 0357 AA030000 		.4byte	0x3aa
 855 035b 30       		.byte	0x30
 856 035c 0B       		.uleb128 0xb
 857 035d D9000000 		.4byte	.LASF48
 858 0361 0A       		.byte	0xa
 859 0362 29       		.byte	0x29
 860 0363 F6000000 		.4byte	0xf6
 861 0367 B0       		.byte	0xb0
 862 0368 0B       		.uleb128 0xb
 863 0369 D6130000 		.4byte	.LASF49
 864 036d 0A       		.byte	0xa
 865 036e 2A       		.byte	0x2a
 866 036f F6000000 		.4byte	0xf6
 867 0373 B4       		.byte	0xb4
 868 0374 0B       		.uleb128 0xb
 869 0375 4F100000 		.4byte	.LASF50
 870 0379 0A       		.byte	0xa
 871 037a 2B       		.byte	0x2b
 872 037b C4030000 		.4byte	0x3c4
 873 037f B8       		.byte	0xb8
 874 0380 0D       		.uleb128 0xd
 875 0381 19180000 		.4byte	.LASF51
 876 0385 0A       		.byte	0xa
 877 0386 2C       		.byte	0x2c
 878 0387 F6000000 		.4byte	0xf6
 879 038b 0001     		.2byte	0x100
 880 038d 0D       		.uleb128 0xd
 881 038e 70150000 		.4byte	.LASF52
 882 0392 0A       		.byte	0xa
 883 0393 2D       		.byte	0x2d
 884 0394 F6000000 		.4byte	0xf6
 885 0398 0401     		.2byte	0x104
 886 039a 00       		.byte	0
 887 039b 05       		.uleb128 0x5
 888 039c 20010000 		.4byte	0x120
 889 03a0 06       		.uleb128 0x6
 890 03a1 9B030000 		.4byte	0x39b
 891 03a5 05       		.uleb128 0x5
 892 03a6 60010000 		.4byte	0x160
 893 03aa 06       		.uleb128 0x6
 894 03ab A5030000 		.4byte	0x3a5
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 97


 895 03af 07       		.uleb128 0x7
 896 03b0 FB000000 		.4byte	0xfb
 897 03b4 BF030000 		.4byte	0x3bf
 898 03b8 08       		.uleb128 0x8
 899 03b9 EF000000 		.4byte	0xef
 900 03bd 11       		.byte	0x11
 901 03be 00       		.byte	0
 902 03bf 05       		.uleb128 0x5
 903 03c0 AF030000 		.4byte	0x3af
 904 03c4 06       		.uleb128 0x6
 905 03c5 BF030000 		.4byte	0x3bf
 906 03c9 03       		.uleb128 0x3
 907 03ca 11150000 		.4byte	.LASF53
 908 03ce 0A       		.byte	0xa
 909 03cf 2E       		.byte	0x2e
 910 03d0 FF020000 		.4byte	0x2ff
 911 03d4 0C       		.uleb128 0xc
 912 03d5 080F     		.2byte	0xf08
 913 03d7 0B       		.byte	0xb
 914 03d8 21       		.byte	0x21
 915 03d9 5C060000 		.4byte	0x65c
 916 03dd 0B       		.uleb128 0xb
 917 03de 88180000 		.4byte	.LASF54
 918 03e2 0B       		.byte	0xb
 919 03e3 22       		.byte	0x22
 920 03e4 F6000000 		.4byte	0xf6
 921 03e8 00       		.byte	0
 922 03e9 0B       		.uleb128 0xb
 923 03ea B30D0000 		.4byte	.LASF55
 924 03ee 0B       		.byte	0xb
 925 03ef 23       		.byte	0x23
 926 03f0 F6000000 		.4byte	0xf6
 927 03f4 04       		.byte	0x4
 928 03f5 0B       		.uleb128 0xb
 929 03f6 14000000 		.4byte	.LASF33
 930 03fa 0B       		.byte	0xb
 931 03fb 24       		.byte	0x24
 932 03fc 61060000 		.4byte	0x661
 933 0400 08       		.byte	0x8
 934 0401 0B       		.uleb128 0xb
 935 0402 4E180000 		.4byte	.LASF56
 936 0406 0B       		.byte	0xb
 937 0407 25       		.byte	0x25
 938 0408 F6000000 		.4byte	0xf6
 939 040c 10       		.byte	0x10
 940 040d 0B       		.uleb128 0xb
 941 040e 72170000 		.4byte	.LASF57
 942 0412 0B       		.byte	0xb
 943 0413 26       		.byte	0x26
 944 0414 F6000000 		.4byte	0xf6
 945 0418 14       		.byte	0x14
 946 0419 0B       		.uleb128 0xb
 947 041a 79110000 		.4byte	.LASF58
 948 041e 0B       		.byte	0xb
 949 041f 27       		.byte	0x27
 950 0420 F6000000 		.4byte	0xf6
 951 0424 18       		.byte	0x18
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 98


 952 0425 0B       		.uleb128 0xb
 953 0426 32090000 		.4byte	.LASF59
 954 042a 0B       		.byte	0xb
 955 042b 28       		.byte	0x28
 956 042c F6000000 		.4byte	0xf6
 957 0430 1C       		.byte	0x1c
 958 0431 0B       		.uleb128 0xb
 959 0432 EE000000 		.4byte	.LASF60
 960 0436 0B       		.byte	0xb
 961 0437 29       		.byte	0x29
 962 0438 F6000000 		.4byte	0xf6
 963 043c 20       		.byte	0x20
 964 043d 0B       		.uleb128 0xb
 965 043e 9C0E0000 		.4byte	.LASF61
 966 0442 0B       		.byte	0xb
 967 0443 2A       		.byte	0x2a
 968 0444 F6000000 		.4byte	0xf6
 969 0448 24       		.byte	0x24
 970 0449 0B       		.uleb128 0xb
 971 044a 8B170000 		.4byte	.LASF35
 972 044e 0B       		.byte	0xb
 973 044f 2B       		.byte	0x2b
 974 0450 7B060000 		.4byte	0x67b
 975 0454 28       		.byte	0x28
 976 0455 0B       		.uleb128 0xb
 977 0456 D8170000 		.4byte	.LASF62
 978 045a 0B       		.byte	0xb
 979 045b 2C       		.byte	0x2c
 980 045c 80060000 		.4byte	0x680
 981 0460 80       		.byte	0x80
 982 0461 0B       		.uleb128 0xb
 983 0462 4F100000 		.4byte	.LASF50
 984 0466 0B       		.byte	0xb
 985 0467 2D       		.byte	0x2d
 986 0468 8A060000 		.4byte	0x68a
 987 046c C0       		.byte	0xc0
 988 046d 0D       		.uleb128 0xd
 989 046e AF110000 		.4byte	.LASF63
 990 0472 0B       		.byte	0xb
 991 0473 2E       		.byte	0x2e
 992 0474 94060000 		.4byte	0x694
 993 0478 0001     		.2byte	0x100
 994 047a 0D       		.uleb128 0xd
 995 047b 59100000 		.4byte	.LASF64
 996 047f 0B       		.byte	0xb
 997 0480 2F       		.byte	0x2f
 998 0481 9E060000 		.4byte	0x69e
 999 0485 4001     		.2byte	0x140
 1000 0487 0D       		.uleb128 0xd
 1001 0488 520D0000 		.4byte	.LASF65
 1002 048c 0B       		.byte	0xb
 1003 048d 30       		.byte	0x30
 1004 048e A8060000 		.4byte	0x6a8
 1005 0492 8001     		.2byte	0x180
 1006 0494 0D       		.uleb128 0xd
 1007 0495 63100000 		.4byte	.LASF66
 1008 0499 0B       		.byte	0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 99


 1009 049a 31       		.byte	0x31
 1010 049b B2060000 		.4byte	0x6b2
 1011 049f C001     		.2byte	0x1c0
 1012 04a1 0D       		.uleb128 0xd
 1013 04a2 58000000 		.4byte	.LASF67
 1014 04a6 0B       		.byte	0xb
 1015 04a7 32       		.byte	0x32
 1016 04a8 FB000000 		.4byte	0xfb
 1017 04ac 0002     		.2byte	0x200
 1018 04ae 0D       		.uleb128 0xd
 1019 04af A6130000 		.4byte	.LASF68
 1020 04b3 0B       		.byte	0xb
 1021 04b4 33       		.byte	0x33
 1022 04b5 FB000000 		.4byte	0xfb
 1023 04b9 0402     		.2byte	0x204
 1024 04bb 0D       		.uleb128 0xd
 1025 04bc 39020000 		.4byte	.LASF69
 1026 04c0 0B       		.byte	0xb
 1027 04c1 34       		.byte	0x34
 1028 04c2 FB000000 		.4byte	0xfb
 1029 04c6 0802     		.2byte	0x208
 1030 04c8 0D       		.uleb128 0xd
 1031 04c9 340B0000 		.4byte	.LASF70
 1032 04cd 0B       		.byte	0xb
 1033 04ce 35       		.byte	0x35
 1034 04cf FB000000 		.4byte	0xfb
 1035 04d3 0C02     		.2byte	0x20c
 1036 04d5 0D       		.uleb128 0xd
 1037 04d6 820D0000 		.4byte	.LASF25
 1038 04da 0B       		.byte	0xb
 1039 04db 36       		.byte	0x36
 1040 04dc F6000000 		.4byte	0xf6
 1041 04e0 1002     		.2byte	0x210
 1042 04e2 0D       		.uleb128 0xd
 1043 04e3 50030000 		.4byte	.LASF28
 1044 04e7 0B       		.byte	0xb
 1045 04e8 37       		.byte	0x37
 1046 04e9 F6000000 		.4byte	0xf6
 1047 04ed 1402     		.2byte	0x214
 1048 04ef 0D       		.uleb128 0xd
 1049 04f0 A90D0000 		.4byte	.LASF26
 1050 04f4 0B       		.byte	0xb
 1051 04f5 38       		.byte	0x38
 1052 04f6 F6000000 		.4byte	0xf6
 1053 04fa 1802     		.2byte	0x218
 1054 04fc 0D       		.uleb128 0xd
 1055 04fd 900E0000 		.4byte	.LASF27
 1056 0501 0B       		.byte	0xb
 1057 0502 39       		.byte	0x39
 1058 0503 FB000000 		.4byte	0xfb
 1059 0507 1C02     		.2byte	0x21c
 1060 0509 0D       		.uleb128 0xd
 1061 050a D7020000 		.4byte	.LASF71
 1062 050e 0B       		.byte	0xb
 1063 050f 3A       		.byte	0x3a
 1064 0510 F6000000 		.4byte	0xf6
 1065 0514 2002     		.2byte	0x220
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 100


 1066 0516 0D       		.uleb128 0xd
 1067 0517 3C150000 		.4byte	.LASF72
 1068 051b 0B       		.byte	0xb
 1069 051c 3B       		.byte	0x3b
 1070 051d F6000000 		.4byte	0xf6
 1071 0521 2402     		.2byte	0x224
 1072 0523 0D       		.uleb128 0xd
 1073 0524 A0140000 		.4byte	.LASF73
 1074 0528 0B       		.byte	0xb
 1075 0529 3C       		.byte	0x3c
 1076 052a F6000000 		.4byte	0xf6
 1077 052e 2802     		.2byte	0x228
 1078 0530 0D       		.uleb128 0xd
 1079 0531 ED100000 		.4byte	.LASF74
 1080 0535 0B       		.byte	0xb
 1081 0536 3D       		.byte	0x3d
 1082 0537 FB000000 		.4byte	0xfb
 1083 053b 2C02     		.2byte	0x22c
 1084 053d 0D       		.uleb128 0xd
 1085 053e 870D0000 		.4byte	.LASF75
 1086 0542 0B       		.byte	0xb
 1087 0543 3E       		.byte	0x3e
 1088 0544 F6000000 		.4byte	0xf6
 1089 0548 3002     		.2byte	0x230
 1090 054a 0D       		.uleb128 0xd
 1091 054b 0C0C0000 		.4byte	.LASF76
 1092 054f 0B       		.byte	0xb
 1093 0550 3F       		.byte	0x3f
 1094 0551 F6000000 		.4byte	0xf6
 1095 0555 3402     		.2byte	0x234
 1096 0557 0D       		.uleb128 0xd
 1097 0558 5D010000 		.4byte	.LASF77
 1098 055c 0B       		.byte	0xb
 1099 055d 40       		.byte	0x40
 1100 055e F6000000 		.4byte	0xf6
 1101 0562 3802     		.2byte	0x238
 1102 0564 0D       		.uleb128 0xd
 1103 0565 020D0000 		.4byte	.LASF78
 1104 0569 0B       		.byte	0xb
 1105 056a 41       		.byte	0x41
 1106 056b FB000000 		.4byte	0xfb
 1107 056f 3C02     		.2byte	0x23c
 1108 0571 0D       		.uleb128 0xd
 1109 0572 A6010000 		.4byte	.LASF79
 1110 0576 0B       		.byte	0xb
 1111 0577 42       		.byte	0x42
 1112 0578 FB000000 		.4byte	0xfb
 1113 057c 4002     		.2byte	0x240
 1114 057e 0D       		.uleb128 0xd
 1115 057f 6D100000 		.4byte	.LASF80
 1116 0583 0B       		.byte	0xb
 1117 0584 43       		.byte	0x43
 1118 0585 BC060000 		.4byte	0x6bc
 1119 0589 4402     		.2byte	0x244
 1120 058b 0D       		.uleb128 0xd
 1121 058c 25080000 		.4byte	.LASF81
 1122 0590 0B       		.byte	0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 101


 1123 0591 44       		.byte	0x44
 1124 0592 F6000000 		.4byte	0xf6
 1125 0596 8002     		.2byte	0x280
 1126 0598 0D       		.uleb128 0xd
 1127 0599 77100000 		.4byte	.LASF82
 1128 059d 0B       		.byte	0xb
 1129 059e 45       		.byte	0x45
 1130 059f C6060000 		.4byte	0x6c6
 1131 05a3 8402     		.2byte	0x284
 1132 05a5 0D       		.uleb128 0xd
 1133 05a6 29030000 		.4byte	.LASF83
 1134 05aa 0B       		.byte	0xb
 1135 05ab 46       		.byte	0x46
 1136 05ac FB000000 		.4byte	0xfb
 1137 05b0 9002     		.2byte	0x290
 1138 05b2 0D       		.uleb128 0xd
 1139 05b3 E4170000 		.4byte	.LASF84
 1140 05b7 0B       		.byte	0xb
 1141 05b8 47       		.byte	0x47
 1142 05b9 D0060000 		.4byte	0x6d0
 1143 05bd 9402     		.2byte	0x294
 1144 05bf 0D       		.uleb128 0xd
 1145 05c0 AA170000 		.4byte	.LASF85
 1146 05c4 0B       		.byte	0xb
 1147 05c5 48       		.byte	0x48
 1148 05c6 FB000000 		.4byte	0xfb
 1149 05ca A002     		.2byte	0x2a0
 1150 05cc 0D       		.uleb128 0xd
 1151 05cd 760B0000 		.4byte	.LASF86
 1152 05d1 0B       		.byte	0xb
 1153 05d2 49       		.byte	0x49
 1154 05d3 FB000000 		.4byte	0xfb
 1155 05d7 A402     		.2byte	0x2a4
 1156 05d9 0D       		.uleb128 0xd
 1157 05da 90100000 		.4byte	.LASF87
 1158 05de 0B       		.byte	0xb
 1159 05df 4A       		.byte	0x4a
 1160 05e0 DA060000 		.4byte	0x6da
 1161 05e4 A802     		.2byte	0x2a8
 1162 05e6 0D       		.uleb128 0xd
 1163 05e7 8D130000 		.4byte	.LASF88
 1164 05eb 0B       		.byte	0xb
 1165 05ec 4B       		.byte	0x4b
 1166 05ed F6000000 		.4byte	0xf6
 1167 05f1 0003     		.2byte	0x300
 1168 05f3 0D       		.uleb128 0xd
 1169 05f4 090E0000 		.4byte	.LASF89
 1170 05f8 0B       		.byte	0xb
 1171 05f9 4C       		.byte	0x4c
 1172 05fa F6000000 		.4byte	0xf6
 1173 05fe 0403     		.2byte	0x304
 1174 0600 0D       		.uleb128 0xd
 1175 0601 9A100000 		.4byte	.LASF90
 1176 0605 0B       		.byte	0xb
 1177 0606 4D       		.byte	0x4d
 1178 0607 F4060000 		.4byte	0x6f4
 1179 060b 0803     		.2byte	0x308
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 102


 1180 060d 0D       		.uleb128 0xd
 1181 060e D80C0000 		.4byte	.LASF91
 1182 0612 0B       		.byte	0xb
 1183 0613 4E       		.byte	0x4e
 1184 0614 F6000000 		.4byte	0xf6
 1185 0618 4003     		.2byte	0x340
 1186 061a 0D       		.uleb128 0xd
 1187 061b 02110000 		.4byte	.LASF92
 1188 061f 0B       		.byte	0xb
 1189 0620 4F       		.byte	0x4f
 1190 0621 F6000000 		.4byte	0xf6
 1191 0625 4403     		.2byte	0x344
 1192 0627 0D       		.uleb128 0xd
 1193 0628 ED160000 		.4byte	.LASF93
 1194 062c 0B       		.byte	0xb
 1195 062d 50       		.byte	0x50
 1196 062e FB000000 		.4byte	0xfb
 1197 0632 4803     		.2byte	0x348
 1198 0634 0D       		.uleb128 0xd
 1199 0635 D0140000 		.4byte	.LASF94
 1200 0639 0B       		.byte	0xb
 1201 063a 51       		.byte	0x51
 1202 063b 0F070000 		.4byte	0x70f
 1203 063f 4C03     		.2byte	0x34c
 1204 0641 0D       		.uleb128 0xd
 1205 0642 36140000 		.4byte	.LASF95
 1206 0646 0B       		.byte	0xb
 1207 0647 52       		.byte	0x52
 1208 0648 F6000000 		.4byte	0xf6
 1209 064c 000F     		.2byte	0xf00
 1210 064e 0D       		.uleb128 0xd
 1211 064f 40140000 		.4byte	.LASF96
 1212 0653 0B       		.byte	0xb
 1213 0654 53       		.byte	0x53
 1214 0655 F6000000 		.4byte	0xf6
 1215 0659 040F     		.2byte	0xf04
 1216 065b 00       		.byte	0
 1217 065c 05       		.uleb128 0x5
 1218 065d 00010000 		.4byte	0x100
 1219 0661 06       		.uleb128 0x6
 1220 0662 5C060000 		.4byte	0x65c
 1221 0666 07       		.uleb128 0x7
 1222 0667 FB000000 		.4byte	0xfb
 1223 066b 76060000 		.4byte	0x676
 1224 066f 08       		.uleb128 0x8
 1225 0670 EF000000 		.4byte	0xef
 1226 0674 15       		.byte	0x15
 1227 0675 00       		.byte	0
 1228 0676 05       		.uleb128 0x5
 1229 0677 66060000 		.4byte	0x666
 1230 067b 06       		.uleb128 0x6
 1231 067c 76060000 		.4byte	0x676
 1232 0680 05       		.uleb128 0x5
 1233 0681 10010000 		.4byte	0x110
 1234 0685 05       		.uleb128 0x5
 1235 0686 30010000 		.4byte	0x130
 1236 068a 06       		.uleb128 0x6
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 103


 1237 068b 85060000 		.4byte	0x685
 1238 068f 05       		.uleb128 0x5
 1239 0690 30010000 		.4byte	0x130
 1240 0694 06       		.uleb128 0x6
 1241 0695 8F060000 		.4byte	0x68f
 1242 0699 05       		.uleb128 0x5
 1243 069a 30010000 		.4byte	0x130
 1244 069e 06       		.uleb128 0x6
 1245 069f 99060000 		.4byte	0x699
 1246 06a3 05       		.uleb128 0x5
 1247 06a4 30010000 		.4byte	0x130
 1248 06a8 06       		.uleb128 0x6
 1249 06a9 A3060000 		.4byte	0x6a3
 1250 06ad 05       		.uleb128 0x5
 1251 06ae 30010000 		.4byte	0x130
 1252 06b2 06       		.uleb128 0x6
 1253 06b3 AD060000 		.4byte	0x6ad
 1254 06b7 05       		.uleb128 0x5
 1255 06b8 50010000 		.4byte	0x150
 1256 06bc 06       		.uleb128 0x6
 1257 06bd B7060000 		.4byte	0x6b7
 1258 06c1 05       		.uleb128 0x5
 1259 06c2 40010000 		.4byte	0x140
 1260 06c6 06       		.uleb128 0x6
 1261 06c7 C1060000 		.4byte	0x6c1
 1262 06cb 05       		.uleb128 0x5
 1263 06cc 40010000 		.4byte	0x140
 1264 06d0 06       		.uleb128 0x6
 1265 06d1 CB060000 		.4byte	0x6cb
 1266 06d5 05       		.uleb128 0x5
 1267 06d6 66060000 		.4byte	0x666
 1268 06da 06       		.uleb128 0x6
 1269 06db D5060000 		.4byte	0x6d5
 1270 06df 07       		.uleb128 0x7
 1271 06e0 FB000000 		.4byte	0xfb
 1272 06e4 EF060000 		.4byte	0x6ef
 1273 06e8 08       		.uleb128 0x8
 1274 06e9 EF000000 		.4byte	0xef
 1275 06ed 0D       		.byte	0xd
 1276 06ee 00       		.byte	0
 1277 06ef 05       		.uleb128 0x5
 1278 06f0 DF060000 		.4byte	0x6df
 1279 06f4 06       		.uleb128 0x6
 1280 06f5 EF060000 		.4byte	0x6ef
 1281 06f9 07       		.uleb128 0x7
 1282 06fa FB000000 		.4byte	0xfb
 1283 06fe 0A070000 		.4byte	0x70a
 1284 0702 0E       		.uleb128 0xe
 1285 0703 EF000000 		.4byte	0xef
 1286 0707 EC02     		.2byte	0x2ec
 1287 0709 00       		.byte	0
 1288 070a 05       		.uleb128 0x5
 1289 070b F9060000 		.4byte	0x6f9
 1290 070f 06       		.uleb128 0x6
 1291 0710 0A070000 		.4byte	0x70a
 1292 0714 03       		.uleb128 0x3
 1293 0715 05090000 		.4byte	.LASF97
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 104


 1294 0719 0B       		.byte	0xb
 1295 071a 54       		.byte	0x54
 1296 071b D4030000 		.4byte	0x3d4
 1297 071f 0F       		.uleb128 0xf
 1298 0720 0C0A0000 		.4byte	.LASF98
 1299 0724 0C       		.byte	0xc
 1300 0725 3106     		.2byte	0x631
 1301 0727 4E020000 		.4byte	0x24e
 1302 072b 0F       		.uleb128 0xf
 1303 072c 55140000 		.4byte	.LASF99
 1304 0730 0C       		.byte	0xc
 1305 0731 3206     		.2byte	0x632
 1306 0733 F4020000 		.4byte	0x2f4
 1307 0737 0F       		.uleb128 0xf
 1308 0738 5E0D0000 		.4byte	.LASF100
 1309 073c 0C       		.byte	0xc
 1310 073d 5106     		.2byte	0x651
 1311 073f C9030000 		.4byte	0x3c9
 1312 0743 0F       		.uleb128 0xf
 1313 0744 7B080000 		.4byte	.LASF101
 1314 0748 0C       		.byte	0xc
 1315 0749 5206     		.2byte	0x652
 1316 074b 14070000 		.4byte	0x714
 1317 074f 02       		.uleb128 0x2
 1318 0750 08       		.byte	0x8
 1319 0751 04       		.byte	0x4
 1320 0752 3A0F0000 		.4byte	.LASF102
 1321 0756 09       		.uleb128 0x9
 1322 0757 B8       		.byte	0xb8
 1323 0758 0D       		.byte	0xd
 1324 0759 34       		.byte	0x34
 1325 075a 670B0000 		.4byte	0xb67
 1326 075e 0B       		.uleb128 0xb
 1327 075f 53020000 		.4byte	.LASF103
 1328 0763 0D       		.byte	0xd
 1329 0764 37       		.byte	0x37
 1330 0765 E4000000 		.4byte	0xe4
 1331 0769 00       		.byte	0
 1332 076a 0B       		.uleb128 0xb
 1333 076b 95060000 		.4byte	.LASF104
 1334 076f 0D       		.byte	0xd
 1335 0770 38       		.byte	0x38
 1336 0771 E4000000 		.4byte	0xe4
 1337 0775 04       		.byte	0x4
 1338 0776 0B       		.uleb128 0xb
 1339 0777 17010000 		.4byte	.LASF105
 1340 077b 0D       		.byte	0xd
 1341 077c 39       		.byte	0x39
 1342 077d E4000000 		.4byte	0xe4
 1343 0781 08       		.byte	0x8
 1344 0782 0B       		.uleb128 0xb
 1345 0783 9A070000 		.4byte	.LASF106
 1346 0787 0D       		.byte	0xd
 1347 0788 3A       		.byte	0x3a
 1348 0789 E4000000 		.4byte	0xe4
 1349 078d 0C       		.byte	0xc
 1350 078e 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 105


 1351 078f 4F0F0000 		.4byte	.LASF107
 1352 0793 0D       		.byte	0xd
 1353 0794 3B       		.byte	0x3b
 1354 0795 E4000000 		.4byte	0xe4
 1355 0799 10       		.byte	0x10
 1356 079a 0B       		.uleb128 0xb
 1357 079b 480D0000 		.4byte	.LASF108
 1358 079f 0D       		.byte	0xd
 1359 07a0 3C       		.byte	0x3c
 1360 07a1 E4000000 		.4byte	0xe4
 1361 07a5 14       		.byte	0x14
 1362 07a6 0B       		.uleb128 0xb
 1363 07a7 6B090000 		.4byte	.LASF109
 1364 07ab 0D       		.byte	0xd
 1365 07ac 3D       		.byte	0x3d
 1366 07ad E4000000 		.4byte	0xe4
 1367 07b1 18       		.byte	0x18
 1368 07b2 0B       		.uleb128 0xb
 1369 07b3 69170000 		.4byte	.LASF110
 1370 07b7 0D       		.byte	0xd
 1371 07b8 3E       		.byte	0x3e
 1372 07b9 E4000000 		.4byte	0xe4
 1373 07bd 1C       		.byte	0x1c
 1374 07be 0B       		.uleb128 0xb
 1375 07bf C10C0000 		.4byte	.LASF111
 1376 07c3 0D       		.byte	0xd
 1377 07c4 3F       		.byte	0x3f
 1378 07c5 E4000000 		.4byte	0xe4
 1379 07c9 20       		.byte	0x20
 1380 07ca 0B       		.uleb128 0xb
 1381 07cb 5A0A0000 		.4byte	.LASF112
 1382 07cf 0D       		.byte	0xd
 1383 07d0 40       		.byte	0x40
 1384 07d1 E4000000 		.4byte	0xe4
 1385 07d5 24       		.byte	0x24
 1386 07d6 0B       		.uleb128 0xb
 1387 07d7 1E110000 		.4byte	.LASF113
 1388 07db 0D       		.byte	0xd
 1389 07dc 43       		.byte	0x43
 1390 07dd B8000000 		.4byte	0xb8
 1391 07e1 28       		.byte	0x28
 1392 07e2 0B       		.uleb128 0xb
 1393 07e3 21060000 		.4byte	.LASF114
 1394 07e7 0D       		.byte	0xd
 1395 07e8 44       		.byte	0x44
 1396 07e9 B8000000 		.4byte	0xb8
 1397 07ed 29       		.byte	0x29
 1398 07ee 0B       		.uleb128 0xb
 1399 07ef D6090000 		.4byte	.LASF115
 1400 07f3 0D       		.byte	0xd
 1401 07f4 45       		.byte	0x45
 1402 07f5 B8000000 		.4byte	0xb8
 1403 07f9 2A       		.byte	0x2a
 1404 07fa 0B       		.uleb128 0xb
 1405 07fb 44110000 		.4byte	.LASF116
 1406 07ff 0D       		.byte	0xd
 1407 0800 46       		.byte	0x46
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 106


 1408 0801 B8000000 		.4byte	0xb8
 1409 0805 2B       		.byte	0x2b
 1410 0806 0B       		.uleb128 0xb
 1411 0807 38110000 		.4byte	.LASF117
 1412 080b 0D       		.byte	0xd
 1413 080c 47       		.byte	0x47
 1414 080d B8000000 		.4byte	0xb8
 1415 0811 2C       		.byte	0x2c
 1416 0812 0B       		.uleb128 0xb
 1417 0813 13130000 		.4byte	.LASF118
 1418 0817 0D       		.byte	0xd
 1419 0818 48       		.byte	0x48
 1420 0819 B8000000 		.4byte	0xb8
 1421 081d 2D       		.byte	0x2d
 1422 081e 0B       		.uleb128 0xb
 1423 081f 5C180000 		.4byte	.LASF119
 1424 0823 0D       		.byte	0xd
 1425 0824 49       		.byte	0x49
 1426 0825 B8000000 		.4byte	0xb8
 1427 0829 2E       		.byte	0x2e
 1428 082a 0B       		.uleb128 0xb
 1429 082b 1E170000 		.4byte	.LASF120
 1430 082f 0D       		.byte	0xd
 1431 0830 4A       		.byte	0x4a
 1432 0831 B8000000 		.4byte	0xb8
 1433 0835 2F       		.byte	0x2f
 1434 0836 0B       		.uleb128 0xb
 1435 0837 8A040000 		.4byte	.LASF121
 1436 083b 0D       		.byte	0xd
 1437 083c 4B       		.byte	0x4b
 1438 083d B8000000 		.4byte	0xb8
 1439 0841 30       		.byte	0x30
 1440 0842 0B       		.uleb128 0xb
 1441 0843 3E0A0000 		.4byte	.LASF122
 1442 0847 0D       		.byte	0xd
 1443 0848 4E       		.byte	0x4e
 1444 0849 B8000000 		.4byte	0xb8
 1445 084d 31       		.byte	0x31
 1446 084e 0B       		.uleb128 0xb
 1447 084f 71160000 		.4byte	.LASF123
 1448 0853 0D       		.byte	0xd
 1449 0854 4F       		.byte	0x4f
 1450 0855 B8000000 		.4byte	0xb8
 1451 0859 32       		.byte	0x32
 1452 085a 0B       		.uleb128 0xb
 1453 085b 9D0D0000 		.4byte	.LASF124
 1454 085f 0D       		.byte	0xd
 1455 0860 50       		.byte	0x50
 1456 0861 B8000000 		.4byte	0xb8
 1457 0865 33       		.byte	0x33
 1458 0866 0B       		.uleb128 0xb
 1459 0867 8E0A0000 		.4byte	.LASF125
 1460 086b 0D       		.byte	0xd
 1461 086c 51       		.byte	0x51
 1462 086d B8000000 		.4byte	0xb8
 1463 0871 34       		.byte	0x34
 1464 0872 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 107


 1465 0873 F30B0000 		.4byte	.LASF126
 1466 0877 0D       		.byte	0xd
 1467 0878 52       		.byte	0x52
 1468 0879 C3000000 		.4byte	0xc3
 1469 087d 36       		.byte	0x36
 1470 087e 0B       		.uleb128 0xb
 1471 087f B0030000 		.4byte	.LASF127
 1472 0883 0D       		.byte	0xd
 1473 0884 53       		.byte	0x53
 1474 0885 C3000000 		.4byte	0xc3
 1475 0889 38       		.byte	0x38
 1476 088a 0B       		.uleb128 0xb
 1477 088b AA020000 		.4byte	.LASF128
 1478 088f 0D       		.byte	0xd
 1479 0890 54       		.byte	0x54
 1480 0891 C3000000 		.4byte	0xc3
 1481 0895 3A       		.byte	0x3a
 1482 0896 0B       		.uleb128 0xb
 1483 0897 650A0000 		.4byte	.LASF129
 1484 089b 0D       		.byte	0xd
 1485 089c 55       		.byte	0x55
 1486 089d B8000000 		.4byte	0xb8
 1487 08a1 3C       		.byte	0x3c
 1488 08a2 0B       		.uleb128 0xb
 1489 08a3 70080000 		.4byte	.LASF130
 1490 08a7 0D       		.byte	0xd
 1491 08a8 56       		.byte	0x56
 1492 08a9 B8000000 		.4byte	0xb8
 1493 08ad 3D       		.byte	0x3d
 1494 08ae 0B       		.uleb128 0xb
 1495 08af 8D0F0000 		.4byte	.LASF131
 1496 08b3 0D       		.byte	0xd
 1497 08b4 57       		.byte	0x57
 1498 08b5 B8000000 		.4byte	0xb8
 1499 08b9 3E       		.byte	0x3e
 1500 08ba 0B       		.uleb128 0xb
 1501 08bb 9E000000 		.4byte	.LASF132
 1502 08bf 0D       		.byte	0xd
 1503 08c0 58       		.byte	0x58
 1504 08c1 B8000000 		.4byte	0xb8
 1505 08c5 3F       		.byte	0x3f
 1506 08c6 0B       		.uleb128 0xb
 1507 08c7 B1010000 		.4byte	.LASF133
 1508 08cb 0D       		.byte	0xd
 1509 08cc 59       		.byte	0x59
 1510 08cd B8000000 		.4byte	0xb8
 1511 08d1 40       		.byte	0x40
 1512 08d2 0B       		.uleb128 0xb
 1513 08d3 53120000 		.4byte	.LASF134
 1514 08d7 0D       		.byte	0xd
 1515 08d8 5A       		.byte	0x5a
 1516 08d9 B8000000 		.4byte	0xb8
 1517 08dd 41       		.byte	0x41
 1518 08de 0B       		.uleb128 0xb
 1519 08df 52060000 		.4byte	.LASF135
 1520 08e3 0D       		.byte	0xd
 1521 08e4 5B       		.byte	0x5b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 108


 1522 08e5 B8000000 		.4byte	0xb8
 1523 08e9 42       		.byte	0x42
 1524 08ea 0B       		.uleb128 0xb
 1525 08eb 010A0000 		.4byte	.LASF136
 1526 08ef 0D       		.byte	0xd
 1527 08f0 5C       		.byte	0x5c
 1528 08f1 B8000000 		.4byte	0xb8
 1529 08f5 43       		.byte	0x43
 1530 08f6 0B       		.uleb128 0xb
 1531 08f7 1A0B0000 		.4byte	.LASF137
 1532 08fb 0D       		.byte	0xd
 1533 08fc 5D       		.byte	0x5d
 1534 08fd B8000000 		.4byte	0xb8
 1535 0901 44       		.byte	0x44
 1536 0902 0B       		.uleb128 0xb
 1537 0903 52110000 		.4byte	.LASF138
 1538 0907 0D       		.byte	0xd
 1539 0908 5E       		.byte	0x5e
 1540 0909 E4000000 		.4byte	0xe4
 1541 090d 48       		.byte	0x48
 1542 090e 0B       		.uleb128 0xb
 1543 090f 59030000 		.4byte	.LASF139
 1544 0913 0D       		.byte	0xd
 1545 0914 5F       		.byte	0x5f
 1546 0915 E4000000 		.4byte	0xe4
 1547 0919 4C       		.byte	0x4c
 1548 091a 0B       		.uleb128 0xb
 1549 091b B5150000 		.4byte	.LASF140
 1550 091f 0D       		.byte	0xd
 1551 0920 60       		.byte	0x60
 1552 0921 B8000000 		.4byte	0xb8
 1553 0925 50       		.byte	0x50
 1554 0926 0B       		.uleb128 0xb
 1555 0927 A0080000 		.4byte	.LASF141
 1556 092b 0D       		.byte	0xd
 1557 092c 61       		.byte	0x61
 1558 092d B8000000 		.4byte	0xb8
 1559 0931 51       		.byte	0x51
 1560 0932 0B       		.uleb128 0xb
 1561 0933 190D0000 		.4byte	.LASF142
 1562 0937 0D       		.byte	0xd
 1563 0938 62       		.byte	0x62
 1564 0939 B8000000 		.4byte	0xb8
 1565 093d 52       		.byte	0x52
 1566 093e 0B       		.uleb128 0xb
 1567 093f DF0E0000 		.4byte	.LASF143
 1568 0943 0D       		.byte	0xd
 1569 0944 63       		.byte	0x63
 1570 0945 B8000000 		.4byte	0xb8
 1571 0949 53       		.byte	0x53
 1572 094a 0B       		.uleb128 0xb
 1573 094b F0140000 		.4byte	.LASF144
 1574 094f 0D       		.byte	0xd
 1575 0950 64       		.byte	0x64
 1576 0951 B8000000 		.4byte	0xb8
 1577 0955 54       		.byte	0x54
 1578 0956 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 109


 1579 0957 3D090000 		.4byte	.LASF145
 1580 095b 0D       		.byte	0xd
 1581 095c 65       		.byte	0x65
 1582 095d B8000000 		.4byte	0xb8
 1583 0961 55       		.byte	0x55
 1584 0962 0B       		.uleb128 0xb
 1585 0963 00000000 		.4byte	.LASF146
 1586 0967 0D       		.byte	0xd
 1587 0968 66       		.byte	0x66
 1588 0969 B8000000 		.4byte	0xb8
 1589 096d 56       		.byte	0x56
 1590 096e 0B       		.uleb128 0xb
 1591 096f BA0F0000 		.4byte	.LASF147
 1592 0973 0D       		.byte	0xd
 1593 0974 67       		.byte	0x67
 1594 0975 B8000000 		.4byte	0xb8
 1595 0979 57       		.byte	0x57
 1596 097a 0B       		.uleb128 0xb
 1597 097b 40080000 		.4byte	.LASF148
 1598 097f 0D       		.byte	0xd
 1599 0980 68       		.byte	0x68
 1600 0981 B8000000 		.4byte	0xb8
 1601 0985 58       		.byte	0x58
 1602 0986 0B       		.uleb128 0xb
 1603 0987 C4170000 		.4byte	.LASF149
 1604 098b 0D       		.byte	0xd
 1605 098c 69       		.byte	0x69
 1606 098d B8000000 		.4byte	0xb8
 1607 0991 59       		.byte	0x59
 1608 0992 0B       		.uleb128 0xb
 1609 0993 5F160000 		.4byte	.LASF150
 1610 0997 0D       		.byte	0xd
 1611 0998 6E       		.byte	0x6e
 1612 0999 CE000000 		.4byte	0xce
 1613 099d 5A       		.byte	0x5a
 1614 099e 0B       		.uleb128 0xb
 1615 099f 17140000 		.4byte	.LASF151
 1616 09a3 0D       		.byte	0xd
 1617 09a4 6F       		.byte	0x6f
 1618 09a5 CE000000 		.4byte	0xce
 1619 09a9 5C       		.byte	0x5c
 1620 09aa 0B       		.uleb128 0xb
 1621 09ab C90C0000 		.4byte	.LASF152
 1622 09af 0D       		.byte	0xd
 1623 09b0 70       		.byte	0x70
 1624 09b1 B8000000 		.4byte	0xb8
 1625 09b5 5E       		.byte	0x5e
 1626 09b6 0B       		.uleb128 0xb
 1627 09b7 7F160000 		.4byte	.LASF153
 1628 09bb 0D       		.byte	0xd
 1629 09bc 71       		.byte	0x71
 1630 09bd B8000000 		.4byte	0xb8
 1631 09c1 5F       		.byte	0x5f
 1632 09c2 0B       		.uleb128 0xb
 1633 09c3 220A0000 		.4byte	.LASF154
 1634 09c7 0D       		.byte	0xd
 1635 09c8 72       		.byte	0x72
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 110


 1636 09c9 B8000000 		.4byte	0xb8
 1637 09cd 60       		.byte	0x60
 1638 09ce 0B       		.uleb128 0xb
 1639 09cf 51090000 		.4byte	.LASF155
 1640 09d3 0D       		.byte	0xd
 1641 09d4 73       		.byte	0x73
 1642 09d5 E4000000 		.4byte	0xe4
 1643 09d9 64       		.byte	0x64
 1644 09da 0B       		.uleb128 0xb
 1645 09db CE0F0000 		.4byte	.LASF156
 1646 09df 0D       		.byte	0xd
 1647 09e0 76       		.byte	0x76
 1648 09e1 CE000000 		.4byte	0xce
 1649 09e5 68       		.byte	0x68
 1650 09e6 0B       		.uleb128 0xb
 1651 09e7 650F0000 		.4byte	.LASF157
 1652 09eb 0D       		.byte	0xd
 1653 09ec 77       		.byte	0x77
 1654 09ed CE000000 		.4byte	0xce
 1655 09f1 6A       		.byte	0x6a
 1656 09f2 0B       		.uleb128 0xb
 1657 09f3 690D0000 		.4byte	.LASF158
 1658 09f7 0D       		.byte	0xd
 1659 09f8 78       		.byte	0x78
 1660 09f9 CE000000 		.4byte	0xce
 1661 09fd 6C       		.byte	0x6c
 1662 09fe 0B       		.uleb128 0xb
 1663 09ff 03030000 		.4byte	.LASF159
 1664 0a03 0D       		.byte	0xd
 1665 0a04 79       		.byte	0x79
 1666 0a05 CE000000 		.4byte	0xce
 1667 0a09 6E       		.byte	0x6e
 1668 0a0a 0B       		.uleb128 0xb
 1669 0a0b F9070000 		.4byte	.LASF160
 1670 0a0f 0D       		.byte	0xd
 1671 0a10 7B       		.byte	0x7b
 1672 0a11 B8000000 		.4byte	0xb8
 1673 0a15 70       		.byte	0x70
 1674 0a16 0B       		.uleb128 0xb
 1675 0a17 F9040000 		.4byte	.LASF161
 1676 0a1b 0D       		.byte	0xd
 1677 0a1c 7C       		.byte	0x7c
 1678 0a1d B8000000 		.4byte	0xb8
 1679 0a21 71       		.byte	0x71
 1680 0a22 0B       		.uleb128 0xb
 1681 0a23 34030000 		.4byte	.LASF162
 1682 0a27 0D       		.byte	0xd
 1683 0a28 7D       		.byte	0x7d
 1684 0a29 B8000000 		.4byte	0xb8
 1685 0a2d 72       		.byte	0x72
 1686 0a2e 0B       		.uleb128 0xb
 1687 0a2f D8010000 		.4byte	.LASF163
 1688 0a33 0D       		.byte	0xd
 1689 0a34 7E       		.byte	0x7e
 1690 0a35 B8000000 		.4byte	0xb8
 1691 0a39 73       		.byte	0x73
 1692 0a3a 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 111


 1693 0a3b 3D100000 		.4byte	.LASF164
 1694 0a3f 0D       		.byte	0xd
 1695 0a40 80       		.byte	0x80
 1696 0a41 CE000000 		.4byte	0xce
 1697 0a45 74       		.byte	0x74
 1698 0a46 0B       		.uleb128 0xb
 1699 0a47 F10E0000 		.4byte	.LASF165
 1700 0a4b 0D       		.byte	0xd
 1701 0a4c 81       		.byte	0x81
 1702 0a4d CE000000 		.4byte	0xce
 1703 0a51 76       		.byte	0x76
 1704 0a52 0B       		.uleb128 0xb
 1705 0a53 95170000 		.4byte	.LASF166
 1706 0a57 0D       		.byte	0xd
 1707 0a58 82       		.byte	0x82
 1708 0a59 CE000000 		.4byte	0xce
 1709 0a5d 78       		.byte	0x78
 1710 0a5e 0B       		.uleb128 0xb
 1711 0a5f 63120000 		.4byte	.LASF167
 1712 0a63 0D       		.byte	0xd
 1713 0a64 83       		.byte	0x83
 1714 0a65 CE000000 		.4byte	0xce
 1715 0a69 7A       		.byte	0x7a
 1716 0a6a 0B       		.uleb128 0xb
 1717 0a6b 3E120000 		.4byte	.LASF168
 1718 0a6f 0D       		.byte	0xd
 1719 0a70 86       		.byte	0x86
 1720 0a71 B8000000 		.4byte	0xb8
 1721 0a75 7C       		.byte	0x7c
 1722 0a76 0B       		.uleb128 0xb
 1723 0a77 E1150000 		.4byte	.LASF169
 1724 0a7b 0D       		.byte	0xd
 1725 0a7c 87       		.byte	0x87
 1726 0a7d B8000000 		.4byte	0xb8
 1727 0a81 7D       		.byte	0x7d
 1728 0a82 0B       		.uleb128 0xb
 1729 0a83 B0060000 		.4byte	.LASF170
 1730 0a87 0D       		.byte	0xd
 1731 0a88 88       		.byte	0x88
 1732 0a89 B8000000 		.4byte	0xb8
 1733 0a8d 7E       		.byte	0x7e
 1734 0a8e 0B       		.uleb128 0xb
 1735 0a8f C0050000 		.4byte	.LASF171
 1736 0a93 0D       		.byte	0xd
 1737 0a94 89       		.byte	0x89
 1738 0a95 B8000000 		.4byte	0xb8
 1739 0a99 7F       		.byte	0x7f
 1740 0a9a 0B       		.uleb128 0xb
 1741 0a9b F50D0000 		.4byte	.LASF172
 1742 0a9f 0D       		.byte	0xd
 1743 0aa0 8A       		.byte	0x8a
 1744 0aa1 B8000000 		.4byte	0xb8
 1745 0aa5 80       		.byte	0x80
 1746 0aa6 0B       		.uleb128 0xb
 1747 0aa7 87000000 		.4byte	.LASF173
 1748 0aab 0D       		.byte	0xd
 1749 0aac 8D       		.byte	0x8d
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 112


 1750 0aad E4000000 		.4byte	0xe4
 1751 0ab1 84       		.byte	0x84
 1752 0ab2 0B       		.uleb128 0xb
 1753 0ab3 B0120000 		.4byte	.LASF174
 1754 0ab7 0D       		.byte	0xd
 1755 0ab8 8E       		.byte	0x8e
 1756 0ab9 E4000000 		.4byte	0xe4
 1757 0abd 88       		.byte	0x88
 1758 0abe 0B       		.uleb128 0xb
 1759 0abf A7160000 		.4byte	.LASF175
 1760 0ac3 0D       		.byte	0xd
 1761 0ac4 8F       		.byte	0x8f
 1762 0ac5 E4000000 		.4byte	0xe4
 1763 0ac9 8C       		.byte	0x8c
 1764 0aca 0B       		.uleb128 0xb
 1765 0acb F7130000 		.4byte	.LASF176
 1766 0acf 0D       		.byte	0xd
 1767 0ad0 90       		.byte	0x90
 1768 0ad1 E4000000 		.4byte	0xe4
 1769 0ad5 90       		.byte	0x90
 1770 0ad6 0B       		.uleb128 0xb
 1771 0ad7 28100000 		.4byte	.LASF177
 1772 0adb 0D       		.byte	0xd
 1773 0adc 91       		.byte	0x91
 1774 0add E4000000 		.4byte	0xe4
 1775 0ae1 94       		.byte	0x94
 1776 0ae2 0B       		.uleb128 0xb
 1777 0ae3 0E050000 		.4byte	.LASF178
 1778 0ae7 0D       		.byte	0xd
 1779 0ae8 92       		.byte	0x92
 1780 0ae9 E4000000 		.4byte	0xe4
 1781 0aed 98       		.byte	0x98
 1782 0aee 0B       		.uleb128 0xb
 1783 0aef CF120000 		.4byte	.LASF179
 1784 0af3 0D       		.byte	0xd
 1785 0af4 93       		.byte	0x93
 1786 0af5 E4000000 		.4byte	0xe4
 1787 0af9 9C       		.byte	0x9c
 1788 0afa 0B       		.uleb128 0xb
 1789 0afb 90010000 		.4byte	.LASF180
 1790 0aff 0D       		.byte	0xd
 1791 0b00 94       		.byte	0x94
 1792 0b01 E4000000 		.4byte	0xe4
 1793 0b05 A0       		.byte	0xa0
 1794 0b06 0B       		.uleb128 0xb
 1795 0b07 78120000 		.4byte	.LASF181
 1796 0b0b 0D       		.byte	0xd
 1797 0b0c 95       		.byte	0x95
 1798 0b0d CE000000 		.4byte	0xce
 1799 0b11 A4       		.byte	0xa4
 1800 0b12 0B       		.uleb128 0xb
 1801 0b13 13100000 		.4byte	.LASF182
 1802 0b17 0D       		.byte	0xd
 1803 0b18 96       		.byte	0x96
 1804 0b19 CE000000 		.4byte	0xce
 1805 0b1d A6       		.byte	0xa6
 1806 0b1e 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 113


 1807 0b1f 4F130000 		.4byte	.LASF183
 1808 0b23 0D       		.byte	0xd
 1809 0b24 97       		.byte	0x97
 1810 0b25 CE000000 		.4byte	0xce
 1811 0b29 A8       		.byte	0xa8
 1812 0b2a 0B       		.uleb128 0xb
 1813 0b2b A50C0000 		.4byte	.LASF184
 1814 0b2f 0D       		.byte	0xd
 1815 0b30 98       		.byte	0x98
 1816 0b31 CE000000 		.4byte	0xce
 1817 0b35 AA       		.byte	0xaa
 1818 0b36 0B       		.uleb128 0xb
 1819 0b37 75030000 		.4byte	.LASF185
 1820 0b3b 0D       		.byte	0xd
 1821 0b3c 99       		.byte	0x99
 1822 0b3d CE000000 		.4byte	0xce
 1823 0b41 AC       		.byte	0xac
 1824 0b42 0B       		.uleb128 0xb
 1825 0b43 470E0000 		.4byte	.LASF186
 1826 0b47 0D       		.byte	0xd
 1827 0b48 9A       		.byte	0x9a
 1828 0b49 CE000000 		.4byte	0xce
 1829 0b4d AE       		.byte	0xae
 1830 0b4e 0B       		.uleb128 0xb
 1831 0b4f 93030000 		.4byte	.LASF187
 1832 0b53 0D       		.byte	0xd
 1833 0b54 9D       		.byte	0x9d
 1834 0b55 CE000000 		.4byte	0xce
 1835 0b59 B0       		.byte	0xb0
 1836 0b5a 0B       		.uleb128 0xb
 1837 0b5b 5F140000 		.4byte	.LASF188
 1838 0b5f 0D       		.byte	0xd
 1839 0b60 9E       		.byte	0x9e
 1840 0b61 E4000000 		.4byte	0xe4
 1841 0b65 B4       		.byte	0xb4
 1842 0b66 00       		.byte	0
 1843 0b67 03       		.uleb128 0x3
 1844 0b68 BC160000 		.4byte	.LASF189
 1845 0b6c 0D       		.byte	0xd
 1846 0b6d 9F       		.byte	0x9f
 1847 0b6e 56070000 		.4byte	0x756
 1848 0b72 10       		.uleb128 0x10
 1849 0b73 04       		.byte	0x4
 1850 0b74 780B0000 		.4byte	0xb78
 1851 0b78 11       		.uleb128 0x11
 1852 0b79 0F       		.uleb128 0xf
 1853 0b7a A2110000 		.4byte	.LASF190
 1854 0b7e 0E       		.byte	0xe
 1855 0b7f F601     		.2byte	0x1f6
 1856 0b81 850B0000 		.4byte	0xb85
 1857 0b85 02       		.uleb128 0x2
 1858 0b86 01       		.byte	0x1
 1859 0b87 08       		.byte	0x8
 1860 0b88 C90A0000 		.4byte	.LASF191
 1861 0b8c 02       		.uleb128 0x2
 1862 0b8d 04       		.byte	0x4
 1863 0b8e 04       		.byte	0x4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 114


 1864 0b8f E0090000 		.4byte	.LASF192
 1865 0b93 02       		.uleb128 0x2
 1866 0b94 08       		.byte	0x8
 1867 0b95 04       		.byte	0x4
 1868 0b96 CF080000 		.4byte	.LASF193
 1869 0b9a 0F       		.uleb128 0xf
 1870 0b9b 54050000 		.4byte	.LASF194
 1871 0b9f 0E       		.byte	0xe
 1872 0ba0 EA03     		.2byte	0x3ea
 1873 0ba2 B8000000 		.4byte	0xb8
 1874 0ba6 12       		.uleb128 0x12
 1875 0ba7 04       		.byte	0x4
 1876 0ba8 02       		.uleb128 0x2
 1877 0ba9 01       		.byte	0x1
 1878 0baa 02       		.byte	0x2
 1879 0bab 00150000 		.4byte	.LASF195
 1880 0baf 13       		.uleb128 0x13
 1881 0bb0 01       		.byte	0x1
 1882 0bb1 49000000 		.4byte	0x49
 1883 0bb5 0F       		.byte	0xf
 1884 0bb6 2107     		.2byte	0x721
 1885 0bb8 D50B0000 		.4byte	0xbd5
 1886 0bbc 14       		.uleb128 0x14
 1887 0bbd 5A070000 		.4byte	.LASF196
 1888 0bc1 00       		.byte	0
 1889 0bc2 14       		.uleb128 0x14
 1890 0bc3 9B0F0000 		.4byte	.LASF197
 1891 0bc7 01       		.byte	0x1
 1892 0bc8 14       		.uleb128 0x14
 1893 0bc9 AD0E0000 		.4byte	.LASF198
 1894 0bcd 02       		.byte	0x2
 1895 0bce 14       		.uleb128 0x14
 1896 0bcf 89140000 		.4byte	.LASF199
 1897 0bd3 03       		.byte	0x3
 1898 0bd4 00       		.byte	0
 1899 0bd5 0F       		.uleb128 0xf
 1900 0bd6 1F150000 		.4byte	.LASF200
 1901 0bda 0F       		.byte	0xf
 1902 0bdb 2607     		.2byte	0x726
 1903 0bdd AF0B0000 		.4byte	0xbaf
 1904 0be1 13       		.uleb128 0x13
 1905 0be2 01       		.byte	0x1
 1906 0be3 49000000 		.4byte	0x49
 1907 0be7 05       		.byte	0x5
 1908 0be8 B101     		.2byte	0x1b1
 1909 0bea 0D0C0000 		.4byte	0xc0d
 1910 0bee 14       		.uleb128 0x14
 1911 0bef B3140000 		.4byte	.LASF201
 1912 0bf3 00       		.byte	0
 1913 0bf4 14       		.uleb128 0x14
 1914 0bf5 E6080000 		.4byte	.LASF202
 1915 0bf9 01       		.byte	0x1
 1916 0bfa 14       		.uleb128 0x14
 1917 0bfb AB090000 		.4byte	.LASF203
 1918 0bff 02       		.byte	0x2
 1919 0c00 14       		.uleb128 0x14
 1920 0c01 84020000 		.4byte	.LASF204
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 115


 1921 0c05 03       		.byte	0x3
 1922 0c06 14       		.uleb128 0x14
 1923 0c07 20130000 		.4byte	.LASF205
 1924 0c0b 04       		.byte	0x4
 1925 0c0c 00       		.byte	0
 1926 0c0d 0F       		.uleb128 0xf
 1927 0c0e 680E0000 		.4byte	.LASF206
 1928 0c12 05       		.byte	0x5
 1929 0c13 B701     		.2byte	0x1b7
 1930 0c15 E10B0000 		.4byte	0xbe1
 1931 0c19 13       		.uleb128 0x13
 1932 0c1a 04       		.byte	0x4
 1933 0c1b A6000000 		.4byte	0xa6
 1934 0c1f 05       		.byte	0x5
 1935 0c20 BC01     		.2byte	0x1bc
 1936 0c22 360C0000 		.4byte	0xc36
 1937 0c26 14       		.uleb128 0x14
 1938 0c27 C80B0000 		.4byte	.LASF207
 1939 0c2b 00       		.byte	0
 1940 0c2c 15       		.uleb128 0x15
 1941 0c2d 89080000 		.4byte	.LASF208
 1942 0c31 00000001 		.4byte	0x1000000
 1943 0c35 00       		.byte	0
 1944 0c36 0F       		.uleb128 0xf
 1945 0c37 D8160000 		.4byte	.LASF209
 1946 0c3b 05       		.byte	0x5
 1947 0c3c BF01     		.2byte	0x1bf
 1948 0c3e 190C0000 		.4byte	0xc19
 1949 0c42 13       		.uleb128 0x13
 1950 0c43 04       		.byte	0x4
 1951 0c44 A6000000 		.4byte	0xa6
 1952 0c48 05       		.byte	0x5
 1953 0c49 C401     		.2byte	0x1c4
 1954 0c4b 5F0C0000 		.4byte	0xc5f
 1955 0c4f 14       		.uleb128 0x14
 1956 0c50 7F0B0000 		.4byte	.LASF210
 1957 0c54 00       		.byte	0
 1958 0c55 15       		.uleb128 0x15
 1959 0c56 DF070000 		.4byte	.LASF211
 1960 0c5a 00000040 		.4byte	0x40000000
 1961 0c5e 00       		.byte	0
 1962 0c5f 0F       		.uleb128 0xf
 1963 0c60 42170000 		.4byte	.LASF212
 1964 0c64 05       		.byte	0x5
 1965 0c65 C701     		.2byte	0x1c7
 1966 0c67 420C0000 		.4byte	0xc42
 1967 0c6b 13       		.uleb128 0x13
 1968 0c6c 04       		.byte	0x4
 1969 0c6d A6000000 		.4byte	0xa6
 1970 0c71 05       		.byte	0x5
 1971 0c72 CC01     		.2byte	0x1cc
 1972 0c74 A30C0000 		.4byte	0xca3
 1973 0c78 14       		.uleb128 0x14
 1974 0c79 FF160000 		.4byte	.LASF213
 1975 0c7d 00       		.byte	0
 1976 0c7e 15       		.uleb128 0x15
 1977 0c7f 6E070000 		.4byte	.LASF214
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 116


 1978 0c83 00004000 		.4byte	0x400000
 1979 0c87 15       		.uleb128 0x15
 1980 0c88 D4050000 		.4byte	.LASF215
 1981 0c8c 0000C000 		.4byte	0xc00000
 1982 0c90 15       		.uleb128 0x15
 1983 0c91 D7040000 		.4byte	.LASF216
 1984 0c95 00000008 		.4byte	0x8000000
 1985 0c99 15       		.uleb128 0x15
 1986 0c9a DB140000 		.4byte	.LASF217
 1987 0c9e 00008008 		.4byte	0x8800000
 1988 0ca2 00       		.byte	0
 1989 0ca3 0F       		.uleb128 0xf
 1990 0ca4 8D120000 		.4byte	.LASF218
 1991 0ca8 05       		.byte	0x5
 1992 0ca9 D401     		.2byte	0x1d4
 1993 0cab 6B0C0000 		.4byte	0xc6b
 1994 0caf 13       		.uleb128 0x13
 1995 0cb0 02       		.byte	0x2
 1996 0cb1 66000000 		.4byte	0x66
 1997 0cb5 05       		.byte	0x5
 1998 0cb6 DA01     		.2byte	0x1da
 1999 0cb8 D80C0000 		.4byte	0xcd8
 2000 0cbc 14       		.uleb128 0x14
 2001 0cbd 1C160000 		.4byte	.LASF219
 2002 0cc1 00       		.byte	0
 2003 0cc2 16       		.uleb128 0x16
 2004 0cc3 11090000 		.4byte	.LASF220
 2005 0cc7 0001     		.2byte	0x100
 2006 0cc9 16       		.uleb128 0x16
 2007 0cca B3100000 		.4byte	.LASF221
 2008 0cce 0002     		.2byte	0x200
 2009 0cd0 16       		.uleb128 0x16
 2010 0cd1 E6090000 		.4byte	.LASF222
 2011 0cd5 0003     		.2byte	0x300
 2012 0cd7 00       		.byte	0
 2013 0cd8 0F       		.uleb128 0xf
 2014 0cd9 F5010000 		.4byte	.LASF223
 2015 0cdd 05       		.byte	0x5
 2016 0cde E001     		.2byte	0x1e0
 2017 0ce0 AF0C0000 		.4byte	0xcaf
 2018 0ce4 13       		.uleb128 0x13
 2019 0ce5 01       		.byte	0x1
 2020 0ce6 49000000 		.4byte	0x49
 2021 0cea 05       		.byte	0x5
 2022 0ceb E701     		.2byte	0x1e7
 2023 0ced FE0C0000 		.4byte	0xcfe
 2024 0cf1 14       		.uleb128 0x14
 2025 0cf2 54080000 		.4byte	.LASF224
 2026 0cf6 00       		.byte	0
 2027 0cf7 14       		.uleb128 0x14
 2028 0cf8 2A170000 		.4byte	.LASF225
 2029 0cfc 01       		.byte	0x1
 2030 0cfd 00       		.byte	0
 2031 0cfe 0F       		.uleb128 0xf
 2032 0cff 10030000 		.4byte	.LASF226
 2033 0d03 05       		.byte	0x5
 2034 0d04 EA01     		.2byte	0x1ea
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 117


 2035 0d06 E40C0000 		.4byte	0xce4
 2036 0d0a 13       		.uleb128 0x13
 2037 0d0b 01       		.byte	0x1
 2038 0d0c 49000000 		.4byte	0x49
 2039 0d10 05       		.byte	0x5
 2040 0d11 F101     		.2byte	0x1f1
 2041 0d13 240D0000 		.4byte	0xd24
 2042 0d17 14       		.uleb128 0x14
 2043 0d18 AA000000 		.4byte	.LASF227
 2044 0d1c 00       		.byte	0
 2045 0d1d 14       		.uleb128 0x14
 2046 0d1e D2100000 		.4byte	.LASF228
 2047 0d22 01       		.byte	0x1
 2048 0d23 00       		.byte	0
 2049 0d24 0F       		.uleb128 0xf
 2050 0d25 64050000 		.4byte	.LASF229
 2051 0d29 05       		.byte	0x5
 2052 0d2a F401     		.2byte	0x1f4
 2053 0d2c 0A0D0000 		.4byte	0xd0a
 2054 0d30 17       		.uleb128 0x17
 2055 0d31 34       		.byte	0x34
 2056 0d32 05       		.byte	0x5
 2057 0d33 1702     		.2byte	0x217
 2058 0d35 0A0E0000 		.4byte	0xe0a
 2059 0d39 18       		.uleb128 0x18
 2060 0d3a C8040000 		.4byte	.LASF230
 2061 0d3e 05       		.byte	0x5
 2062 0d3f 1902     		.2byte	0x219
 2063 0d41 FE0C0000 		.4byte	0xcfe
 2064 0d45 00       		.byte	0
 2065 0d46 18       		.uleb128 0x18
 2066 0d47 96150000 		.4byte	.LASF231
 2067 0d4b 05       		.byte	0x5
 2068 0d4c 1A02     		.2byte	0x21a
 2069 0d4e 360C0000 		.4byte	0xc36
 2070 0d52 04       		.byte	0x4
 2071 0d53 18       		.uleb128 0x18
 2072 0d54 C40E0000 		.4byte	.LASF232
 2073 0d58 05       		.byte	0x5
 2074 0d59 1B02     		.2byte	0x21b
 2075 0d5b 0D0C0000 		.4byte	0xc0d
 2076 0d5f 08       		.byte	0x8
 2077 0d60 18       		.uleb128 0x18
 2078 0d61 99130000 		.4byte	.LASF233
 2079 0d65 05       		.byte	0x5
 2080 0d66 1C02     		.2byte	0x21c
 2081 0d68 D80C0000 		.4byte	0xcd8
 2082 0d6c 0A       		.byte	0xa
 2083 0d6d 18       		.uleb128 0x18
 2084 0d6e 8A060000 		.4byte	.LASF234
 2085 0d72 05       		.byte	0x5
 2086 0d73 1D02     		.2byte	0x21d
 2087 0d75 A30C0000 		.4byte	0xca3
 2088 0d79 0C       		.byte	0xc
 2089 0d7a 18       		.uleb128 0x18
 2090 0d7b 95160000 		.4byte	.LASF235
 2091 0d7f 05       		.byte	0x5
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 118


 2092 0d80 1E02     		.2byte	0x21e
 2093 0d82 240D0000 		.4byte	0xd24
 2094 0d86 10       		.byte	0x10
 2095 0d87 18       		.uleb128 0x18
 2096 0d88 6F110000 		.4byte	.LASF236
 2097 0d8c 05       		.byte	0x5
 2098 0d8d 1F02     		.2byte	0x21f
 2099 0d8f 5F0C0000 		.4byte	0xc5f
 2100 0d93 14       		.byte	0x14
 2101 0d94 18       		.uleb128 0x18
 2102 0d95 A1030000 		.4byte	.LASF237
 2103 0d99 05       		.byte	0x5
 2104 0d9a 2002     		.2byte	0x220
 2105 0d9c E4000000 		.4byte	0xe4
 2106 0da0 18       		.byte	0x18
 2107 0da1 18       		.uleb128 0x18
 2108 0da2 17080000 		.4byte	.LASF238
 2109 0da6 05       		.byte	0x5
 2110 0da7 2102     		.2byte	0x221
 2111 0da9 D9000000 		.4byte	0xd9
 2112 0dad 1C       		.byte	0x1c
 2113 0dae 18       		.uleb128 0x18
 2114 0daf F8050000 		.4byte	.LASF239
 2115 0db3 05       		.byte	0x5
 2116 0db4 2202     		.2byte	0x222
 2117 0db6 D9000000 		.4byte	0xd9
 2118 0dba 20       		.byte	0x20
 2119 0dbb 18       		.uleb128 0x18
 2120 0dbc C2070000 		.4byte	.LASF240
 2121 0dc0 05       		.byte	0x5
 2122 0dc1 2302     		.2byte	0x223
 2123 0dc3 A80B0000 		.4byte	0xba8
 2124 0dc7 24       		.byte	0x24
 2125 0dc8 18       		.uleb128 0x18
 2126 0dc9 E5020000 		.4byte	.LASF241
 2127 0dcd 05       		.byte	0x5
 2128 0dce 2602     		.2byte	0x226
 2129 0dd0 A80B0000 		.4byte	0xba8
 2130 0dd4 25       		.byte	0x25
 2131 0dd5 18       		.uleb128 0x18
 2132 0dd6 0E0B0000 		.4byte	.LASF242
 2133 0dda 05       		.byte	0x5
 2134 0ddb 2702     		.2byte	0x227
 2135 0ddd D50B0000 		.4byte	0xbd5
 2136 0de1 26       		.byte	0x26
 2137 0de2 18       		.uleb128 0x18
 2138 0de3 84070000 		.4byte	.LASF243
 2139 0de7 05       		.byte	0x5
 2140 0de8 2802     		.2byte	0x228
 2141 0dea E4000000 		.4byte	0xe4
 2142 0dee 28       		.byte	0x28
 2143 0def 18       		.uleb128 0x18
 2144 0df0 0D0F0000 		.4byte	.LASF244
 2145 0df4 05       		.byte	0x5
 2146 0df5 2902     		.2byte	0x229
 2147 0df7 E4000000 		.4byte	0xe4
 2148 0dfb 2C       		.byte	0x2c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 119


 2149 0dfc 18       		.uleb128 0x18
 2150 0dfd 24050000 		.4byte	.LASF245
 2151 0e01 05       		.byte	0x5
 2152 0e02 2A02     		.2byte	0x22a
 2153 0e04 E4000000 		.4byte	0xe4
 2154 0e08 30       		.byte	0x30
 2155 0e09 00       		.byte	0
 2156 0e0a 0F       		.uleb128 0xf
 2157 0e0b F2150000 		.4byte	.LASF246
 2158 0e0f 05       		.byte	0x5
 2159 0e10 2B02     		.2byte	0x22b
 2160 0e12 300D0000 		.4byte	0xd30
 2161 0e16 13       		.uleb128 0x13
 2162 0e17 01       		.byte	0x1
 2163 0e18 49000000 		.4byte	0x49
 2164 0e1c 04       		.byte	0x4
 2165 0e1d 0E03     		.2byte	0x30e
 2166 0e1f 300E0000 		.4byte	0xe30
 2167 0e23 14       		.uleb128 0x14
 2168 0e24 FE0F0000 		.4byte	.LASF247
 2169 0e28 00       		.byte	0
 2170 0e29 14       		.uleb128 0x14
 2171 0e2a 9A0B0000 		.4byte	.LASF248
 2172 0e2e 01       		.byte	0x1
 2173 0e2f 00       		.byte	0
 2174 0e30 13       		.uleb128 0x13
 2175 0e31 01       		.byte	0x1
 2176 0e32 49000000 		.4byte	0x49
 2177 0e36 04       		.byte	0x4
 2178 0e37 1304     		.2byte	0x413
 2179 0e39 560E0000 		.4byte	0xe56
 2180 0e3d 14       		.uleb128 0x14
 2181 0e3e 96040000 		.4byte	.LASF249
 2182 0e42 00       		.byte	0
 2183 0e43 14       		.uleb128 0x14
 2184 0e44 A9070000 		.4byte	.LASF250
 2185 0e48 01       		.byte	0x1
 2186 0e49 14       		.uleb128 0x14
 2187 0e4a B10A0000 		.4byte	.LASF251
 2188 0e4e 02       		.byte	0x2
 2189 0e4f 14       		.uleb128 0x14
 2190 0e50 BE010000 		.4byte	.LASF252
 2191 0e54 03       		.byte	0x3
 2192 0e55 00       		.byte	0
 2193 0e56 0F       		.uleb128 0xf
 2194 0e57 EE170000 		.4byte	.LASF253
 2195 0e5b 04       		.byte	0x4
 2196 0e5c 1804     		.2byte	0x418
 2197 0e5e 300E0000 		.4byte	0xe30
 2198 0e62 17       		.uleb128 0x17
 2199 0e63 78       		.byte	0x78
 2200 0e64 04       		.byte	0x4
 2201 0e65 0205     		.2byte	0x502
 2202 0e67 2F0F0000 		.4byte	0xf2f
 2203 0e6b 18       		.uleb128 0x18
 2204 0e6c DA070000 		.4byte	.LASF254
 2205 0e70 04       		.byte	0x4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 120


 2206 0e71 0405     		.2byte	0x504
 2207 0e73 E4000000 		.4byte	0xe4
 2208 0e77 00       		.byte	0
 2209 0e78 18       		.uleb128 0x18
 2210 0e79 0C140000 		.4byte	.LASF255
 2211 0e7d 04       		.byte	0x4
 2212 0e7e 0505     		.2byte	0x505
 2213 0e80 E4000000 		.4byte	0xe4
 2214 0e84 04       		.byte	0x4
 2215 0e85 18       		.uleb128 0x18
 2216 0e86 800F0000 		.4byte	.LASF256
 2217 0e8a 04       		.byte	0x4
 2218 0e8b 0605     		.2byte	0x506
 2219 0e8d E4000000 		.4byte	0xe4
 2220 0e91 08       		.byte	0x8
 2221 0e92 18       		.uleb128 0x18
 2222 0e93 E5120000 		.4byte	.LASF257
 2223 0e97 04       		.byte	0x4
 2224 0e98 0705     		.2byte	0x507
 2225 0e9a E4000000 		.4byte	0xe4
 2226 0e9e 0C       		.byte	0xc
 2227 0e9f 18       		.uleb128 0x18
 2228 0ea0 8F070000 		.4byte	.LASF258
 2229 0ea4 04       		.byte	0x4
 2230 0ea5 0805     		.2byte	0x508
 2231 0ea7 E4000000 		.4byte	0xe4
 2232 0eab 10       		.byte	0x10
 2233 0eac 18       		.uleb128 0x18
 2234 0ead 550E0000 		.4byte	.LASF259
 2235 0eb1 04       		.byte	0x4
 2236 0eb2 0905     		.2byte	0x509
 2237 0eb4 560E0000 		.4byte	0xe56
 2238 0eb8 14       		.byte	0x14
 2239 0eb9 18       		.uleb128 0x18
 2240 0eba F90A0000 		.4byte	.LASF260
 2241 0ebe 04       		.byte	0x4
 2242 0ebf 0A05     		.2byte	0x50a
 2243 0ec1 E4000000 		.4byte	0xe4
 2244 0ec5 18       		.byte	0x18
 2245 0ec6 18       		.uleb128 0x18
 2246 0ec7 BF0D0000 		.4byte	.LASF261
 2247 0ecb 04       		.byte	0x4
 2248 0ecc 0B05     		.2byte	0x50b
 2249 0ece 2F0F0000 		.4byte	0xf2f
 2250 0ed2 1C       		.byte	0x1c
 2251 0ed3 18       		.uleb128 0x18
 2252 0ed4 34010000 		.4byte	.LASF262
 2253 0ed8 04       		.byte	0x4
 2254 0ed9 0C05     		.2byte	0x50c
 2255 0edb E4000000 		.4byte	0xe4
 2256 0edf 5C       		.byte	0x5c
 2257 0ee0 18       		.uleb128 0x18
 2258 0ee1 CC160000 		.4byte	.LASF263
 2259 0ee5 04       		.byte	0x4
 2260 0ee6 0D05     		.2byte	0x50d
 2261 0ee8 E4000000 		.4byte	0xe4
 2262 0eec 60       		.byte	0x60
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 121


 2263 0eed 18       		.uleb128 0x18
 2264 0eee 810C0000 		.4byte	.LASF264
 2265 0ef2 04       		.byte	0x4
 2266 0ef3 0E05     		.2byte	0x50e
 2267 0ef5 E4000000 		.4byte	0xe4
 2268 0ef9 64       		.byte	0x64
 2269 0efa 18       		.uleb128 0x18
 2270 0efb B00F0000 		.4byte	.LASF265
 2271 0eff 04       		.byte	0x4
 2272 0f00 0F05     		.2byte	0x50f
 2273 0f02 E4000000 		.4byte	0xe4
 2274 0f06 68       		.byte	0x68
 2275 0f07 18       		.uleb128 0x18
 2276 0f08 2D0C0000 		.4byte	.LASF266
 2277 0f0c 04       		.byte	0x4
 2278 0f0d 1005     		.2byte	0x510
 2279 0f0f E4000000 		.4byte	0xe4
 2280 0f13 6C       		.byte	0x6c
 2281 0f14 18       		.uleb128 0x18
 2282 0f15 5B170000 		.4byte	.LASF267
 2283 0f19 04       		.byte	0x4
 2284 0f1a 1105     		.2byte	0x511
 2285 0f1c A80B0000 		.4byte	0xba8
 2286 0f20 70       		.byte	0x70
 2287 0f21 18       		.uleb128 0x18
 2288 0f22 4E0A0000 		.4byte	.LASF268
 2289 0f26 04       		.byte	0x4
 2290 0f27 1205     		.2byte	0x512
 2291 0f29 E4000000 		.4byte	0xe4
 2292 0f2d 74       		.byte	0x74
 2293 0f2e 00       		.byte	0
 2294 0f2f 07       		.uleb128 0x7
 2295 0f30 E4000000 		.4byte	0xe4
 2296 0f34 3F0F0000 		.4byte	0xf3f
 2297 0f38 08       		.uleb128 0x8
 2298 0f39 EF000000 		.4byte	0xef
 2299 0f3d 0F       		.byte	0xf
 2300 0f3e 00       		.byte	0
 2301 0f3f 0F       		.uleb128 0xf
 2302 0f40 3D0C0000 		.4byte	.LASF269
 2303 0f44 04       		.byte	0x4
 2304 0f45 1305     		.2byte	0x513
 2305 0f47 620E0000 		.4byte	0xe62
 2306 0f4b 10       		.uleb128 0x10
 2307 0f4c 04       		.byte	0x4
 2308 0f4d 510F0000 		.4byte	0xf51
 2309 0f51 19       		.uleb128 0x19
 2310 0f52 5C0F0000 		.4byte	0xf5c
 2311 0f56 1A       		.uleb128 0x1a
 2312 0f57 E4000000 		.4byte	0xe4
 2313 0f5b 00       		.byte	0
 2314 0f5c 0F       		.uleb128 0xf
 2315 0f5d 510C0000 		.4byte	.LASF270
 2316 0f61 10       		.byte	0x10
 2317 0f62 D901     		.2byte	0x1d9
 2318 0f64 4B0F0000 		.4byte	0xf4b
 2319 0f68 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 122


 2320 0f69 6A060000 		.4byte	.LASF303
 2321 0f6d 38       		.byte	0x38
 2322 0f6e 10       		.byte	0x10
 2323 0f6f 7502     		.2byte	0x275
 2324 0f71 2C100000 		.4byte	0x102c
 2325 0f75 18       		.uleb128 0x18
 2326 0f76 0E010000 		.4byte	.LASF271
 2327 0f7a 10       		.byte	0x10
 2328 0f7b 7802     		.2byte	0x278
 2329 0f7d F6000000 		.4byte	0xf6
 2330 0f81 00       		.byte	0
 2331 0f82 18       		.uleb128 0x18
 2332 0f83 3C050000 		.4byte	.LASF272
 2333 0f87 10       		.byte	0x10
 2334 0f88 7902     		.2byte	0x279
 2335 0f8a F6000000 		.4byte	0xf6
 2336 0f8e 04       		.byte	0x4
 2337 0f8f 18       		.uleb128 0x18
 2338 0f90 300F0000 		.4byte	.LASF273
 2339 0f94 10       		.byte	0x10
 2340 0f95 7B02     		.2byte	0x27b
 2341 0f97 A60B0000 		.4byte	0xba6
 2342 0f9b 08       		.byte	0x8
 2343 0f9c 18       		.uleb128 0x18
 2344 0f9d C9020000 		.4byte	.LASF274
 2345 0fa1 10       		.byte	0x10
 2346 0fa2 7C02     		.2byte	0x27c
 2347 0fa4 E4000000 		.4byte	0xe4
 2348 0fa8 0C       		.byte	0xc
 2349 0fa9 18       		.uleb128 0x18
 2350 0faa F7120000 		.4byte	.LASF275
 2351 0fae 10       		.byte	0x10
 2352 0faf 7D02     		.2byte	0x27d
 2353 0fb1 F6000000 		.4byte	0xf6
 2354 0fb5 10       		.byte	0x10
 2355 0fb6 18       		.uleb128 0x18
 2356 0fb7 000B0000 		.4byte	.LASF276
 2357 0fbb 10       		.byte	0x10
 2358 0fbc 7E02     		.2byte	0x27e
 2359 0fbe F6000000 		.4byte	0xf6
 2360 0fc2 14       		.byte	0x14
 2361 0fc3 18       		.uleb128 0x18
 2362 0fc4 2B180000 		.4byte	.LASF277
 2363 0fc8 10       		.byte	0x10
 2364 0fc9 8002     		.2byte	0x280
 2365 0fcb A60B0000 		.4byte	0xba6
 2366 0fcf 18       		.byte	0x18
 2367 0fd0 18       		.uleb128 0x18
 2368 0fd1 7E180000 		.4byte	.LASF278
 2369 0fd5 10       		.byte	0x10
 2370 0fd6 8102     		.2byte	0x281
 2371 0fd8 E4000000 		.4byte	0xe4
 2372 0fdc 1C       		.byte	0x1c
 2373 0fdd 18       		.uleb128 0x18
 2374 0fde 650B0000 		.4byte	.LASF279
 2375 0fe2 10       		.byte	0x10
 2376 0fe3 8202     		.2byte	0x282
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 123


 2377 0fe5 F6000000 		.4byte	0xf6
 2378 0fe9 20       		.byte	0x20
 2379 0fea 18       		.uleb128 0x18
 2380 0feb A70E0000 		.4byte	.LASF280
 2381 0fef 10       		.byte	0x10
 2382 0ff0 8402     		.2byte	0x284
 2383 0ff2 A60B0000 		.4byte	0xba6
 2384 0ff6 24       		.byte	0x24
 2385 0ff7 18       		.uleb128 0x18
 2386 0ff8 D10D0000 		.4byte	.LASF281
 2387 0ffc 10       		.byte	0x10
 2388 0ffd 8502     		.2byte	0x285
 2389 0fff E4000000 		.4byte	0xe4
 2390 1003 28       		.byte	0x28
 2391 1004 18       		.uleb128 0x18
 2392 1005 D8110000 		.4byte	.LASF282
 2393 1009 10       		.byte	0x10
 2394 100a 8602     		.2byte	0x286
 2395 100c F6000000 		.4byte	0xf6
 2396 1010 2C       		.byte	0x2c
 2397 1011 18       		.uleb128 0x18
 2398 1012 740A0000 		.4byte	.LASF283
 2399 1016 10       		.byte	0x10
 2400 1017 8B02     		.2byte	0x28b
 2401 1019 5C0F0000 		.4byte	0xf5c
 2402 101d 30       		.byte	0x30
 2403 101e 18       		.uleb128 0x18
 2404 101f 6E0B0000 		.4byte	.LASF284
 2405 1023 10       		.byte	0x10
 2406 1024 8E02     		.2byte	0x28e
 2407 1026 E4000000 		.4byte	0xe4
 2408 102a 34       		.byte	0x34
 2409 102b 00       		.byte	0
 2410 102c 0F       		.uleb128 0xf
 2411 102d 38060000 		.4byte	.LASF285
 2412 1031 10       		.byte	0x10
 2413 1032 9102     		.2byte	0x291
 2414 1034 680F0000 		.4byte	0xf68
 2415 1038 09       		.uleb128 0x9
 2416 1039 14       		.byte	0x14
 2417 103a 03       		.byte	0x3
 2418 103b 3B       		.byte	0x3b
 2419 103c 7D100000 		.4byte	0x107d
 2420 1040 0B       		.uleb128 0xb
 2421 1041 5D020000 		.4byte	.LASF286
 2422 1045 03       		.byte	0x3
 2423 1046 3D       		.byte	0x3d
 2424 1047 E4000000 		.4byte	0xe4
 2425 104b 00       		.byte	0
 2426 104c 0B       		.uleb128 0xb
 2427 104d C3060000 		.4byte	.LASF287
 2428 1051 03       		.byte	0x3
 2429 1052 3E       		.byte	0x3e
 2430 1053 E4000000 		.4byte	0xe4
 2431 1057 04       		.byte	0x4
 2432 1058 0B       		.uleb128 0xb
 2433 1059 78020000 		.4byte	.LASF288
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 124


 2434 105d 03       		.byte	0x3
 2435 105e 3F       		.byte	0x3f
 2436 105f 7D100000 		.4byte	0x107d
 2437 1063 08       		.byte	0x8
 2438 1064 0B       		.uleb128 0xb
 2439 1065 0F120000 		.4byte	.LASF289
 2440 1069 03       		.byte	0x3
 2441 106a 40       		.byte	0x40
 2442 106b E4000000 		.4byte	0xe4
 2443 106f 0C       		.byte	0xc
 2444 1070 0B       		.uleb128 0xb
 2445 1071 06150000 		.4byte	.LASF290
 2446 1075 03       		.byte	0x3
 2447 1076 45       		.byte	0x45
 2448 1077 E4000000 		.4byte	0xe4
 2449 107b 10       		.byte	0x10
 2450 107c 00       		.byte	0
 2451 107d 10       		.uleb128 0x10
 2452 107e 04       		.byte	0x4
 2453 107f 83100000 		.4byte	0x1083
 2454 1083 06       		.uleb128 0x6
 2455 1084 3F0F0000 		.4byte	0xf3f
 2456 1088 03       		.uleb128 0x3
 2457 1089 1B0C0000 		.4byte	.LASF291
 2458 108d 03       		.byte	0x3
 2459 108e 48       		.byte	0x48
 2460 108f 38100000 		.4byte	0x1038
 2461 1093 10       		.uleb128 0x10
 2462 1094 04       		.byte	0x4
 2463 1095 1F070000 		.4byte	0x71f
 2464 1099 03       		.uleb128 0x3
 2465 109a F1020000 		.4byte	.LASF292
 2466 109e 11       		.byte	0x11
 2467 109f 07       		.byte	0x7
 2468 10a0 9F000000 		.4byte	0x9f
 2469 10a4 03       		.uleb128 0x3
 2470 10a5 4C020000 		.4byte	.LASF293
 2471 10a9 12       		.byte	0x12
 2472 10aa 2C       		.byte	0x2c
 2473 10ab 78000000 		.4byte	0x78
 2474 10af 03       		.uleb128 0x3
 2475 10b0 AE040000 		.4byte	.LASF294
 2476 10b4 12       		.byte	0x12
 2477 10b5 72       		.byte	0x72
 2478 10b6 78000000 		.4byte	0x78
 2479 10ba 0F       		.uleb128 0xf
 2480 10bb 62130000 		.4byte	.LASF295
 2481 10bf 13       		.byte	0x13
 2482 10c0 6501     		.2byte	0x165
 2483 10c2 A6000000 		.4byte	0xa6
 2484 10c6 1C       		.uleb128 0x1c
 2485 10c7 04       		.byte	0x4
 2486 10c8 12       		.byte	0x12
 2487 10c9 A6       		.byte	0xa6
 2488 10ca E5100000 		.4byte	0x10e5
 2489 10ce 1D       		.uleb128 0x1d
 2490 10cf EF0F0000 		.4byte	.LASF296
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 125


 2491 10d3 12       		.byte	0x12
 2492 10d4 A8       		.byte	0xa8
 2493 10d5 BA100000 		.4byte	0x10ba
 2494 10d9 1D       		.uleb128 0x1d
 2495 10da B9110000 		.4byte	.LASF297
 2496 10de 12       		.byte	0x12
 2497 10df A9       		.byte	0xa9
 2498 10e0 E5100000 		.4byte	0x10e5
 2499 10e4 00       		.byte	0
 2500 10e5 07       		.uleb128 0x7
 2501 10e6 49000000 		.4byte	0x49
 2502 10ea F5100000 		.4byte	0x10f5
 2503 10ee 08       		.uleb128 0x8
 2504 10ef EF000000 		.4byte	0xef
 2505 10f3 03       		.byte	0x3
 2506 10f4 00       		.byte	0
 2507 10f5 09       		.uleb128 0x9
 2508 10f6 08       		.byte	0x8
 2509 10f7 12       		.byte	0x12
 2510 10f8 A3       		.byte	0xa3
 2511 10f9 16110000 		.4byte	0x1116
 2512 10fd 0B       		.uleb128 0xb
 2513 10fe F0050000 		.4byte	.LASF298
 2514 1102 12       		.byte	0x12
 2515 1103 A5       		.byte	0xa5
 2516 1104 9F000000 		.4byte	0x9f
 2517 1108 00       		.byte	0
 2518 1109 0B       		.uleb128 0xb
 2519 110a 1A0A0000 		.4byte	.LASF299
 2520 110e 12       		.byte	0x12
 2521 110f AA       		.byte	0xaa
 2522 1110 C6100000 		.4byte	0x10c6
 2523 1114 04       		.byte	0x4
 2524 1115 00       		.byte	0
 2525 1116 03       		.uleb128 0x3
 2526 1117 920D0000 		.4byte	.LASF300
 2527 111b 12       		.byte	0x12
 2528 111c AB       		.byte	0xab
 2529 111d F5100000 		.4byte	0x10f5
 2530 1121 03       		.uleb128 0x3
 2531 1122 490B0000 		.4byte	.LASF301
 2532 1126 12       		.byte	0x12
 2533 1127 AF       		.byte	0xaf
 2534 1128 99100000 		.4byte	0x1099
 2535 112c 03       		.uleb128 0x3
 2536 112d C7120000 		.4byte	.LASF302
 2537 1131 14       		.byte	0x14
 2538 1132 16       		.byte	0x16
 2539 1133 8A000000 		.4byte	0x8a
 2540 1137 1E       		.uleb128 0x1e
 2541 1138 4C050000 		.4byte	.LASF304
 2542 113c 18       		.byte	0x18
 2543 113d 14       		.byte	0x14
 2544 113e 2D       		.byte	0x2d
 2545 113f 8A110000 		.4byte	0x118a
 2546 1143 0B       		.uleb128 0xb
 2547 1144 48180000 		.4byte	.LASF305
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 126


 2548 1148 14       		.byte	0x14
 2549 1149 2F       		.byte	0x2f
 2550 114a 8A110000 		.4byte	0x118a
 2551 114e 00       		.byte	0
 2552 114f 0A       		.uleb128 0xa
 2553 1150 5F6B00   		.ascii	"_k\000"
 2554 1153 14       		.byte	0x14
 2555 1154 30       		.byte	0x30
 2556 1155 9F000000 		.4byte	0x9f
 2557 1159 04       		.byte	0x4
 2558 115a 0B       		.uleb128 0xb
 2559 115b 1A120000 		.4byte	.LASF306
 2560 115f 14       		.byte	0x14
 2561 1160 30       		.byte	0x30
 2562 1161 9F000000 		.4byte	0x9f
 2563 1165 08       		.byte	0x8
 2564 1166 0B       		.uleb128 0xb
 2565 1167 69110000 		.4byte	.LASF307
 2566 116b 14       		.byte	0x14
 2567 116c 30       		.byte	0x30
 2568 116d 9F000000 		.4byte	0x9f
 2569 1171 0C       		.byte	0xc
 2570 1172 0B       		.uleb128 0xb
 2571 1173 55070000 		.4byte	.LASF308
 2572 1177 14       		.byte	0x14
 2573 1178 30       		.byte	0x30
 2574 1179 9F000000 		.4byte	0x9f
 2575 117d 10       		.byte	0x10
 2576 117e 0A       		.uleb128 0xa
 2577 117f 5F7800   		.ascii	"_x\000"
 2578 1182 14       		.byte	0x14
 2579 1183 31       		.byte	0x31
 2580 1184 90110000 		.4byte	0x1190
 2581 1188 14       		.byte	0x14
 2582 1189 00       		.byte	0
 2583 118a 10       		.uleb128 0x10
 2584 118b 04       		.byte	0x4
 2585 118c 37110000 		.4byte	0x1137
 2586 1190 07       		.uleb128 0x7
 2587 1191 2C110000 		.4byte	0x112c
 2588 1195 A0110000 		.4byte	0x11a0
 2589 1199 08       		.uleb128 0x8
 2590 119a EF000000 		.4byte	0xef
 2591 119e 00       		.byte	0
 2592 119f 00       		.byte	0
 2593 11a0 1E       		.uleb128 0x1e
 2594 11a1 F2120000 		.4byte	.LASF309
 2595 11a5 24       		.byte	0x24
 2596 11a6 14       		.byte	0x14
 2597 11a7 35       		.byte	0x35
 2598 11a8 19120000 		.4byte	0x1219
 2599 11ac 0B       		.uleb128 0xb
 2600 11ad B2080000 		.4byte	.LASF310
 2601 11b1 14       		.byte	0x14
 2602 11b2 37       		.byte	0x37
 2603 11b3 9F000000 		.4byte	0x9f
 2604 11b7 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 127


 2605 11b8 0B       		.uleb128 0xb
 2606 11b9 2F060000 		.4byte	.LASF311
 2607 11bd 14       		.byte	0x14
 2608 11be 38       		.byte	0x38
 2609 11bf 9F000000 		.4byte	0x9f
 2610 11c3 04       		.byte	0x4
 2611 11c4 0B       		.uleb128 0xb
 2612 11c5 98050000 		.4byte	.LASF312
 2613 11c9 14       		.byte	0x14
 2614 11ca 39       		.byte	0x39
 2615 11cb 9F000000 		.4byte	0x9f
 2616 11cf 08       		.byte	0x8
 2617 11d0 0B       		.uleb128 0xb
 2618 11d1 E50A0000 		.4byte	.LASF313
 2619 11d5 14       		.byte	0x14
 2620 11d6 3A       		.byte	0x3a
 2621 11d7 9F000000 		.4byte	0x9f
 2622 11db 0C       		.byte	0xc
 2623 11dc 0B       		.uleb128 0xb
 2624 11dd 040F0000 		.4byte	.LASF314
 2625 11e1 14       		.byte	0x14
 2626 11e2 3B       		.byte	0x3b
 2627 11e3 9F000000 		.4byte	0x9f
 2628 11e7 10       		.byte	0x10
 2629 11e8 0B       		.uleb128 0xb
 2630 11e9 CE110000 		.4byte	.LASF315
 2631 11ed 14       		.byte	0x14
 2632 11ee 3C       		.byte	0x3c
 2633 11ef 9F000000 		.4byte	0x9f
 2634 11f3 14       		.byte	0x14
 2635 11f4 0B       		.uleb128 0xb
 2636 11f5 5A050000 		.4byte	.LASF316
 2637 11f9 14       		.byte	0x14
 2638 11fa 3D       		.byte	0x3d
 2639 11fb 9F000000 		.4byte	0x9f
 2640 11ff 18       		.byte	0x18
 2641 1200 0B       		.uleb128 0xb
 2642 1201 CC090000 		.4byte	.LASF317
 2643 1205 14       		.byte	0x14
 2644 1206 3E       		.byte	0x3e
 2645 1207 9F000000 		.4byte	0x9f
 2646 120b 1C       		.byte	0x1c
 2647 120c 0B       		.uleb128 0xb
 2648 120d EA0D0000 		.4byte	.LASF318
 2649 1211 14       		.byte	0x14
 2650 1212 3F       		.byte	0x3f
 2651 1213 9F000000 		.4byte	0x9f
 2652 1217 20       		.byte	0x20
 2653 1218 00       		.byte	0
 2654 1219 1F       		.uleb128 0x1f
 2655 121a CB000000 		.4byte	.LASF319
 2656 121e 0801     		.2byte	0x108
 2657 1220 14       		.byte	0x14
 2658 1221 48       		.byte	0x48
 2659 1222 59120000 		.4byte	0x1259
 2660 1226 0B       		.uleb128 0xb
 2661 1227 45160000 		.4byte	.LASF320
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 128


 2662 122b 14       		.byte	0x14
 2663 122c 49       		.byte	0x49
 2664 122d 59120000 		.4byte	0x1259
 2665 1231 00       		.byte	0
 2666 1232 0B       		.uleb128 0xb
 2667 1233 CA130000 		.4byte	.LASF321
 2668 1237 14       		.byte	0x14
 2669 1238 4A       		.byte	0x4a
 2670 1239 59120000 		.4byte	0x1259
 2671 123d 80       		.byte	0x80
 2672 123e 0D       		.uleb128 0xd
 2673 123f 15170000 		.4byte	.LASF322
 2674 1243 14       		.byte	0x14
 2675 1244 4C       		.byte	0x4c
 2676 1245 2C110000 		.4byte	0x112c
 2677 1249 0001     		.2byte	0x100
 2678 124b 0D       		.uleb128 0xd
 2679 124c 23180000 		.4byte	.LASF323
 2680 1250 14       		.byte	0x14
 2681 1251 4F       		.byte	0x4f
 2682 1252 2C110000 		.4byte	0x112c
 2683 1256 0401     		.2byte	0x104
 2684 1258 00       		.byte	0
 2685 1259 07       		.uleb128 0x7
 2686 125a A60B0000 		.4byte	0xba6
 2687 125e 69120000 		.4byte	0x1269
 2688 1262 08       		.uleb128 0x8
 2689 1263 EF000000 		.4byte	0xef
 2690 1267 1F       		.byte	0x1f
 2691 1268 00       		.byte	0
 2692 1269 1F       		.uleb128 0x1f
 2693 126a DE0F0000 		.4byte	.LASF324
 2694 126e 9001     		.2byte	0x190
 2695 1270 14       		.byte	0x14
 2696 1271 5B       		.byte	0x5b
 2697 1272 A7120000 		.4byte	0x12a7
 2698 1276 0B       		.uleb128 0xb
 2699 1277 48180000 		.4byte	.LASF305
 2700 127b 14       		.byte	0x14
 2701 127c 5C       		.byte	0x5c
 2702 127d A7120000 		.4byte	0x12a7
 2703 1281 00       		.byte	0
 2704 1282 0B       		.uleb128 0xb
 2705 1283 E1080000 		.4byte	.LASF325
 2706 1287 14       		.byte	0x14
 2707 1288 5D       		.byte	0x5d
 2708 1289 9F000000 		.4byte	0x9f
 2709 128d 04       		.byte	0x4
 2710 128e 0B       		.uleb128 0xb
 2711 128f D2040000 		.4byte	.LASF326
 2712 1293 14       		.byte	0x14
 2713 1294 5F       		.byte	0x5f
 2714 1295 AD120000 		.4byte	0x12ad
 2715 1299 08       		.byte	0x8
 2716 129a 0B       		.uleb128 0xb
 2717 129b CB000000 		.4byte	.LASF319
 2718 129f 14       		.byte	0x14
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 129


 2719 12a0 60       		.byte	0x60
 2720 12a1 19120000 		.4byte	0x1219
 2721 12a5 88       		.byte	0x88
 2722 12a6 00       		.byte	0
 2723 12a7 10       		.uleb128 0x10
 2724 12a8 04       		.byte	0x4
 2725 12a9 69120000 		.4byte	0x1269
 2726 12ad 07       		.uleb128 0x7
 2727 12ae 720B0000 		.4byte	0xb72
 2728 12b2 BD120000 		.4byte	0x12bd
 2729 12b6 08       		.uleb128 0x8
 2730 12b7 EF000000 		.4byte	0xef
 2731 12bb 1F       		.byte	0x1f
 2732 12bc 00       		.byte	0
 2733 12bd 1E       		.uleb128 0x1e
 2734 12be 35150000 		.4byte	.LASF327
 2735 12c2 08       		.byte	0x8
 2736 12c3 14       		.byte	0x14
 2737 12c4 73       		.byte	0x73
 2738 12c5 E2120000 		.4byte	0x12e2
 2739 12c9 0B       		.uleb128 0xb
 2740 12ca F20C0000 		.4byte	.LASF328
 2741 12ce 14       		.byte	0x14
 2742 12cf 74       		.byte	0x74
 2743 12d0 E2120000 		.4byte	0x12e2
 2744 12d4 00       		.byte	0
 2745 12d5 0B       		.uleb128 0xb
 2746 12d6 EF010000 		.4byte	.LASF329
 2747 12da 14       		.byte	0x14
 2748 12db 75       		.byte	0x75
 2749 12dc 9F000000 		.4byte	0x9f
 2750 12e0 04       		.byte	0x4
 2751 12e1 00       		.byte	0
 2752 12e2 10       		.uleb128 0x10
 2753 12e3 04       		.byte	0x4
 2754 12e4 49000000 		.4byte	0x49
 2755 12e8 1E       		.uleb128 0x1e
 2756 12e9 4D070000 		.4byte	.LASF330
 2757 12ed 68       		.byte	0x68
 2758 12ee 14       		.byte	0x14
 2759 12ef B3       		.byte	0xb3
 2760 12f0 12140000 		.4byte	0x1412
 2761 12f4 0A       		.uleb128 0xa
 2762 12f5 5F7000   		.ascii	"_p\000"
 2763 12f8 14       		.byte	0x14
 2764 12f9 B4       		.byte	0xb4
 2765 12fa E2120000 		.4byte	0x12e2
 2766 12fe 00       		.byte	0
 2767 12ff 0A       		.uleb128 0xa
 2768 1300 5F7200   		.ascii	"_r\000"
 2769 1303 14       		.byte	0x14
 2770 1304 B5       		.byte	0xb5
 2771 1305 9F000000 		.4byte	0x9f
 2772 1309 04       		.byte	0x4
 2773 130a 0A       		.uleb128 0xa
 2774 130b 5F7700   		.ascii	"_w\000"
 2775 130e 14       		.byte	0x14
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 130


 2776 130f B6       		.byte	0xb6
 2777 1310 9F000000 		.4byte	0x9f
 2778 1314 08       		.byte	0x8
 2779 1315 0B       		.uleb128 0xb
 2780 1316 35050000 		.4byte	.LASF331
 2781 131a 14       		.byte	0x14
 2782 131b B7       		.byte	0xb7
 2783 131c 25000000 		.4byte	0x25
 2784 1320 0C       		.byte	0xc
 2785 1321 0B       		.uleb128 0xb
 2786 1322 380D0000 		.4byte	.LASF332
 2787 1326 14       		.byte	0x14
 2788 1327 B8       		.byte	0xb8
 2789 1328 25000000 		.4byte	0x25
 2790 132c 0E       		.byte	0xe
 2791 132d 0A       		.uleb128 0xa
 2792 132e 5F626600 		.ascii	"_bf\000"
 2793 1332 14       		.byte	0x14
 2794 1333 B9       		.byte	0xb9
 2795 1334 BD120000 		.4byte	0x12bd
 2796 1338 10       		.byte	0x10
 2797 1339 0B       		.uleb128 0xb
 2798 133a 0C020000 		.4byte	.LASF333
 2799 133e 14       		.byte	0x14
 2800 133f BA       		.byte	0xba
 2801 1340 9F000000 		.4byte	0x9f
 2802 1344 18       		.byte	0x18
 2803 1345 0B       		.uleb128 0xb
 2804 1346 C3000000 		.4byte	.LASF334
 2805 134a 14       		.byte	0x14
 2806 134b C1       		.byte	0xc1
 2807 134c A60B0000 		.4byte	0xba6
 2808 1350 1C       		.byte	0x1c
 2809 1351 0B       		.uleb128 0xb
 2810 1352 4A030000 		.4byte	.LASF335
 2811 1356 14       		.byte	0x14
 2812 1357 C3       		.byte	0xc3
 2813 1358 6E150000 		.4byte	0x156e
 2814 135c 20       		.byte	0x20
 2815 135d 0B       		.uleb128 0xb
 2816 135e E9110000 		.4byte	.LASF336
 2817 1362 14       		.byte	0x14
 2818 1363 C5       		.byte	0xc5
 2819 1364 9D150000 		.4byte	0x159d
 2820 1368 24       		.byte	0x24
 2821 1369 0B       		.uleb128 0xb
 2822 136a 42180000 		.4byte	.LASF337
 2823 136e 14       		.byte	0x14
 2824 136f C8       		.byte	0xc8
 2825 1370 C1150000 		.4byte	0x15c1
 2826 1374 28       		.byte	0x28
 2827 1375 0B       		.uleb128 0xb
 2828 1376 E10B0000 		.4byte	.LASF338
 2829 137a 14       		.byte	0x14
 2830 137b C9       		.byte	0xc9
 2831 137c DB150000 		.4byte	0x15db
 2832 1380 2C       		.byte	0x2c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 131


 2833 1381 0A       		.uleb128 0xa
 2834 1382 5F756200 		.ascii	"_ub\000"
 2835 1386 14       		.byte	0x14
 2836 1387 CC       		.byte	0xcc
 2837 1388 BD120000 		.4byte	0x12bd
 2838 138c 30       		.byte	0x30
 2839 138d 0A       		.uleb128 0xa
 2840 138e 5F757000 		.ascii	"_up\000"
 2841 1392 14       		.byte	0x14
 2842 1393 CD       		.byte	0xcd
 2843 1394 E2120000 		.4byte	0x12e2
 2844 1398 38       		.byte	0x38
 2845 1399 0A       		.uleb128 0xa
 2846 139a 5F757200 		.ascii	"_ur\000"
 2847 139e 14       		.byte	0x14
 2848 139f CE       		.byte	0xce
 2849 13a0 9F000000 		.4byte	0x9f
 2850 13a4 3C       		.byte	0x3c
 2851 13a5 0B       		.uleb128 0xb
 2852 13a6 78180000 		.4byte	.LASF339
 2853 13aa 14       		.byte	0x14
 2854 13ab D1       		.byte	0xd1
 2855 13ac E1150000 		.4byte	0x15e1
 2856 13b0 40       		.byte	0x40
 2857 13b1 0B       		.uleb128 0xb
 2858 13b2 B1170000 		.4byte	.LASF340
 2859 13b6 14       		.byte	0x14
 2860 13b7 D2       		.byte	0xd2
 2861 13b8 F1150000 		.4byte	0x15f1
 2862 13bc 43       		.byte	0x43
 2863 13bd 0A       		.uleb128 0xa
 2864 13be 5F6C6200 		.ascii	"_lb\000"
 2865 13c2 14       		.byte	0x14
 2866 13c3 D5       		.byte	0xd5
 2867 13c4 BD120000 		.4byte	0x12bd
 2868 13c8 44       		.byte	0x44
 2869 13c9 0B       		.uleb128 0xb
 2870 13ca 2B0B0000 		.4byte	.LASF341
 2871 13ce 14       		.byte	0x14
 2872 13cf D8       		.byte	0xd8
 2873 13d0 9F000000 		.4byte	0x9f
 2874 13d4 4C       		.byte	0x4c
 2875 13d5 0B       		.uleb128 0xb
 2876 13d6 D2070000 		.4byte	.LASF342
 2877 13da 14       		.byte	0x14
 2878 13db D9       		.byte	0xd9
 2879 13dc A4100000 		.4byte	0x10a4
 2880 13e0 50       		.byte	0x50
 2881 13e1 0B       		.uleb128 0xb
 2882 13e2 A9110000 		.4byte	.LASF343
 2883 13e6 14       		.byte	0x14
 2884 13e7 DC       		.byte	0xdc
 2885 13e8 30140000 		.4byte	0x1430
 2886 13ec 54       		.byte	0x54
 2887 13ed 0B       		.uleb128 0xb
 2888 13ee 05130000 		.4byte	.LASF344
 2889 13f2 14       		.byte	0x14
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 132


 2890 13f3 E0       		.byte	0xe0
 2891 13f4 21110000 		.4byte	0x1121
 2892 13f8 58       		.byte	0x58
 2893 13f9 0B       		.uleb128 0xb
 2894 13fa E60F0000 		.4byte	.LASF345
 2895 13fe 14       		.byte	0x14
 2896 13ff E2       		.byte	0xe2
 2897 1400 16110000 		.4byte	0x1116
 2898 1404 5C       		.byte	0x5c
 2899 1405 0B       		.uleb128 0xb
 2900 1406 11180000 		.4byte	.LASF346
 2901 140a 14       		.byte	0x14
 2902 140b E3       		.byte	0xe3
 2903 140c 9F000000 		.4byte	0x9f
 2904 1410 64       		.byte	0x64
 2905 1411 00       		.byte	0
 2906 1412 20       		.uleb128 0x20
 2907 1413 9F000000 		.4byte	0x9f
 2908 1417 30140000 		.4byte	0x1430
 2909 141b 1A       		.uleb128 0x1a
 2910 141c 30140000 		.4byte	0x1430
 2911 1420 1A       		.uleb128 0x1a
 2912 1421 A60B0000 		.4byte	0xba6
 2913 1425 1A       		.uleb128 0x1a
 2914 1426 68150000 		.4byte	0x1568
 2915 142a 1A       		.uleb128 0x1a
 2916 142b 9F000000 		.4byte	0x9f
 2917 142f 00       		.byte	0
 2918 1430 10       		.uleb128 0x10
 2919 1431 04       		.byte	0x4
 2920 1432 36140000 		.4byte	0x1436
 2921 1436 21       		.uleb128 0x21
 2922 1437 6A160000 		.4byte	.LASF347
 2923 143b 2804     		.2byte	0x428
 2924 143d 14       		.byte	0x14
 2925 143e 3802     		.2byte	0x238
 2926 1440 68150000 		.4byte	0x1568
 2927 1444 18       		.uleb128 0x18
 2928 1445 32020000 		.4byte	.LASF348
 2929 1449 14       		.byte	0x14
 2930 144a 3A02     		.2byte	0x23a
 2931 144c 9F000000 		.4byte	0x9f
 2932 1450 00       		.byte	0
 2933 1451 18       		.uleb128 0x18
 2934 1452 8F0C0000 		.4byte	.LASF349
 2935 1456 14       		.byte	0x14
 2936 1457 3F02     		.2byte	0x23f
 2937 1459 48160000 		.4byte	0x1648
 2938 145d 04       		.byte	0x4
 2939 145e 18       		.uleb128 0x18
 2940 145f CF030000 		.4byte	.LASF350
 2941 1463 14       		.byte	0x14
 2942 1464 3F02     		.2byte	0x23f
 2943 1466 48160000 		.4byte	0x1648
 2944 146a 08       		.byte	0x8
 2945 146b 18       		.uleb128 0x18
 2946 146c 67180000 		.4byte	.LASF351
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 133


 2947 1470 14       		.byte	0x14
 2948 1471 3F02     		.2byte	0x23f
 2949 1473 48160000 		.4byte	0x1648
 2950 1477 0C       		.byte	0xc
 2951 1478 18       		.uleb128 0x18
 2952 1479 DC080000 		.4byte	.LASF352
 2953 147d 14       		.byte	0x14
 2954 147e 4102     		.2byte	0x241
 2955 1480 9F000000 		.4byte	0x9f
 2956 1484 10       		.byte	0x10
 2957 1485 18       		.uleb128 0x18
 2958 1486 35080000 		.4byte	.LASF353
 2959 148a 14       		.byte	0x14
 2960 148b 4202     		.2byte	0x242
 2961 148d 2A180000 		.4byte	0x182a
 2962 1491 14       		.byte	0x14
 2963 1492 18       		.uleb128 0x18
 2964 1493 2C120000 		.4byte	.LASF354
 2965 1497 14       		.byte	0x14
 2966 1498 4402     		.2byte	0x244
 2967 149a 9F000000 		.4byte	0x9f
 2968 149e 30       		.byte	0x30
 2969 149f 18       		.uleb128 0x18
 2970 14a0 85110000 		.4byte	.LASF355
 2971 14a4 14       		.byte	0x14
 2972 14a5 4502     		.2byte	0x245
 2973 14a7 92150000 		.4byte	0x1592
 2974 14ab 34       		.byte	0x34
 2975 14ac 18       		.uleb128 0x18
 2976 14ad E80B0000 		.4byte	.LASF356
 2977 14b1 14       		.byte	0x14
 2978 14b2 4702     		.2byte	0x247
 2979 14b4 9F000000 		.4byte	0x9f
 2980 14b8 38       		.byte	0x38
 2981 14b9 18       		.uleb128 0x18
 2982 14ba 780D0000 		.4byte	.LASF357
 2983 14be 14       		.byte	0x14
 2984 14bf 4902     		.2byte	0x249
 2985 14c1 45180000 		.4byte	0x1845
 2986 14c5 3C       		.byte	0x3c
 2987 14c6 18       		.uleb128 0x18
 2988 14c7 80050000 		.4byte	.LASF358
 2989 14cb 14       		.byte	0x14
 2990 14cc 4C02     		.2byte	0x24c
 2991 14ce 8A110000 		.4byte	0x118a
 2992 14d2 40       		.byte	0x40
 2993 14d3 18       		.uleb128 0x18
 2994 14d4 CF060000 		.4byte	.LASF359
 2995 14d8 14       		.byte	0x14
 2996 14d9 4D02     		.2byte	0x24d
 2997 14db 9F000000 		.4byte	0x9f
 2998 14df 44       		.byte	0x44
 2999 14e0 18       		.uleb128 0x18
 3000 14e1 490A0000 		.4byte	.LASF360
 3001 14e5 14       		.byte	0x14
 3002 14e6 4E02     		.2byte	0x24e
 3003 14e8 8A110000 		.4byte	0x118a
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 134


 3004 14ec 48       		.byte	0x48
 3005 14ed 18       		.uleb128 0x18
 3006 14ee F80C0000 		.4byte	.LASF361
 3007 14f2 14       		.byte	0x14
 3008 14f3 4F02     		.2byte	0x24f
 3009 14f5 4B180000 		.4byte	0x184b
 3010 14f9 4C       		.byte	0x4c
 3011 14fa 18       		.uleb128 0x18
 3012 14fb 0B130000 		.4byte	.LASF362
 3013 14ff 14       		.byte	0x14
 3014 1500 5202     		.2byte	0x252
 3015 1502 9F000000 		.4byte	0x9f
 3016 1506 50       		.byte	0x50
 3017 1507 18       		.uleb128 0x18
 3018 1508 20140000 		.4byte	.LASF363
 3019 150c 14       		.byte	0x14
 3020 150d 5302     		.2byte	0x253
 3021 150f 68150000 		.4byte	0x1568
 3022 1513 54       		.byte	0x54
 3023 1514 18       		.uleb128 0x18
 3024 1515 0A120000 		.4byte	.LASF364
 3025 1519 14       		.byte	0x14
 3026 151a 7602     		.2byte	0x276
 3027 151c 08180000 		.4byte	0x1808
 3028 1520 58       		.byte	0x58
 3029 1521 22       		.uleb128 0x22
 3030 1522 DE0F0000 		.4byte	.LASF324
 3031 1526 14       		.byte	0x14
 3032 1527 7A02     		.2byte	0x27a
 3033 1529 A7120000 		.4byte	0x12a7
 3034 152d 4801     		.2byte	0x148
 3035 152f 22       		.uleb128 0x22
 3036 1530 770F0000 		.4byte	.LASF365
 3037 1534 14       		.byte	0x14
 3038 1535 7B02     		.2byte	0x27b
 3039 1537 69120000 		.4byte	0x1269
 3040 153b 4C01     		.2byte	0x14c
 3041 153d 22       		.uleb128 0x22
 3042 153e EF0A0000 		.4byte	.LASF366
 3043 1542 14       		.byte	0x14
 3044 1543 7F02     		.2byte	0x27f
 3045 1545 5C180000 		.4byte	0x185c
 3046 1549 DC02     		.2byte	0x2dc
 3047 154b 22       		.uleb128 0x22
 3048 154c A1150000 		.4byte	.LASF367
 3049 1550 14       		.byte	0x14
 3050 1551 8402     		.2byte	0x284
 3051 1553 0D160000 		.4byte	0x160d
 3052 1557 E002     		.2byte	0x2e0
 3053 1559 22       		.uleb128 0x22
 3054 155a 64110000 		.4byte	.LASF368
 3055 155e 14       		.byte	0x14
 3056 155f 8502     		.2byte	0x285
 3057 1561 68180000 		.4byte	0x1868
 3058 1565 EC02     		.2byte	0x2ec
 3059 1567 00       		.byte	0
 3060 1568 10       		.uleb128 0x10
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 135


 3061 1569 04       		.byte	0x4
 3062 156a 850B0000 		.4byte	0xb85
 3063 156e 10       		.uleb128 0x10
 3064 156f 04       		.byte	0x4
 3065 1570 12140000 		.4byte	0x1412
 3066 1574 20       		.uleb128 0x20
 3067 1575 9F000000 		.4byte	0x9f
 3068 1579 92150000 		.4byte	0x1592
 3069 157d 1A       		.uleb128 0x1a
 3070 157e 30140000 		.4byte	0x1430
 3071 1582 1A       		.uleb128 0x1a
 3072 1583 A60B0000 		.4byte	0xba6
 3073 1587 1A       		.uleb128 0x1a
 3074 1588 92150000 		.4byte	0x1592
 3075 158c 1A       		.uleb128 0x1a
 3076 158d 9F000000 		.4byte	0x9f
 3077 1591 00       		.byte	0
 3078 1592 10       		.uleb128 0x10
 3079 1593 04       		.byte	0x4
 3080 1594 98150000 		.4byte	0x1598
 3081 1598 06       		.uleb128 0x6
 3082 1599 850B0000 		.4byte	0xb85
 3083 159d 10       		.uleb128 0x10
 3084 159e 04       		.byte	0x4
 3085 159f 74150000 		.4byte	0x1574
 3086 15a3 20       		.uleb128 0x20
 3087 15a4 AF100000 		.4byte	0x10af
 3088 15a8 C1150000 		.4byte	0x15c1
 3089 15ac 1A       		.uleb128 0x1a
 3090 15ad 30140000 		.4byte	0x1430
 3091 15b1 1A       		.uleb128 0x1a
 3092 15b2 A60B0000 		.4byte	0xba6
 3093 15b6 1A       		.uleb128 0x1a
 3094 15b7 AF100000 		.4byte	0x10af
 3095 15bb 1A       		.uleb128 0x1a
 3096 15bc 9F000000 		.4byte	0x9f
 3097 15c0 00       		.byte	0
 3098 15c1 10       		.uleb128 0x10
 3099 15c2 04       		.byte	0x4
 3100 15c3 A3150000 		.4byte	0x15a3
 3101 15c7 20       		.uleb128 0x20
 3102 15c8 9F000000 		.4byte	0x9f
 3103 15cc DB150000 		.4byte	0x15db
 3104 15d0 1A       		.uleb128 0x1a
 3105 15d1 30140000 		.4byte	0x1430
 3106 15d5 1A       		.uleb128 0x1a
 3107 15d6 A60B0000 		.4byte	0xba6
 3108 15da 00       		.byte	0
 3109 15db 10       		.uleb128 0x10
 3110 15dc 04       		.byte	0x4
 3111 15dd C7150000 		.4byte	0x15c7
 3112 15e1 07       		.uleb128 0x7
 3113 15e2 49000000 		.4byte	0x49
 3114 15e6 F1150000 		.4byte	0x15f1
 3115 15ea 08       		.uleb128 0x8
 3116 15eb EF000000 		.4byte	0xef
 3117 15ef 02       		.byte	0x2
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 136


 3118 15f0 00       		.byte	0
 3119 15f1 07       		.uleb128 0x7
 3120 15f2 49000000 		.4byte	0x49
 3121 15f6 01160000 		.4byte	0x1601
 3122 15fa 08       		.uleb128 0x8
 3123 15fb EF000000 		.4byte	0xef
 3124 15ff 00       		.byte	0
 3125 1600 00       		.byte	0
 3126 1601 0F       		.uleb128 0xf
 3127 1602 A2070000 		.4byte	.LASF369
 3128 1606 14       		.byte	0x14
 3129 1607 1D01     		.2byte	0x11d
 3130 1609 E8120000 		.4byte	0x12e8
 3131 160d 1B       		.uleb128 0x1b
 3132 160e 2E010000 		.4byte	.LASF370
 3133 1612 0C       		.byte	0xc
 3134 1613 14       		.byte	0x14
 3135 1614 2101     		.2byte	0x121
 3136 1616 42160000 		.4byte	0x1642
 3137 161a 18       		.uleb128 0x18
 3138 161b 48180000 		.4byte	.LASF305
 3139 161f 14       		.byte	0x14
 3140 1620 2301     		.2byte	0x123
 3141 1622 42160000 		.4byte	0x1642
 3142 1626 00       		.byte	0
 3143 1627 18       		.uleb128 0x18
 3144 1628 5B130000 		.4byte	.LASF371
 3145 162c 14       		.byte	0x14
 3146 162d 2401     		.2byte	0x124
 3147 162f 9F000000 		.4byte	0x9f
 3148 1633 04       		.byte	0x4
 3149 1634 18       		.uleb128 0x18
 3150 1635 59160000 		.4byte	.LASF372
 3151 1639 14       		.byte	0x14
 3152 163a 2501     		.2byte	0x125
 3153 163c 48160000 		.4byte	0x1648
 3154 1640 08       		.byte	0x8
 3155 1641 00       		.byte	0
 3156 1642 10       		.uleb128 0x10
 3157 1643 04       		.byte	0x4
 3158 1644 0D160000 		.4byte	0x160d
 3159 1648 10       		.uleb128 0x10
 3160 1649 04       		.byte	0x4
 3161 164a 01160000 		.4byte	0x1601
 3162 164e 1B       		.uleb128 0x1b
 3163 164f A8060000 		.4byte	.LASF373
 3164 1653 0E       		.byte	0xe
 3165 1654 14       		.byte	0x14
 3166 1655 3D01     		.2byte	0x13d
 3167 1657 83160000 		.4byte	0x1683
 3168 165b 18       		.uleb128 0x18
 3169 165c 31180000 		.4byte	.LASF374
 3170 1660 14       		.byte	0x14
 3171 1661 3E01     		.2byte	0x13e
 3172 1663 83160000 		.4byte	0x1683
 3173 1667 00       		.byte	0
 3174 1668 18       		.uleb128 0x18
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 137


 3175 1669 D6080000 		.4byte	.LASF375
 3176 166d 14       		.byte	0x14
 3177 166e 3F01     		.2byte	0x13f
 3178 1670 83160000 		.4byte	0x1683
 3179 1674 06       		.byte	0x6
 3180 1675 18       		.uleb128 0x18
 3181 1676 140D0000 		.4byte	.LASF376
 3182 167a 14       		.byte	0x14
 3183 167b 4001     		.2byte	0x140
 3184 167d 66000000 		.4byte	0x66
 3185 1681 0C       		.byte	0xc
 3186 1682 00       		.byte	0
 3187 1683 07       		.uleb128 0x7
 3188 1684 66000000 		.4byte	0x66
 3189 1688 93160000 		.4byte	0x1693
 3190 168c 08       		.uleb128 0x8
 3191 168d EF000000 		.4byte	0xef
 3192 1691 02       		.byte	0x2
 3193 1692 00       		.byte	0
 3194 1693 17       		.uleb128 0x17
 3195 1694 D0       		.byte	0xd0
 3196 1695 14       		.byte	0x14
 3197 1696 5702     		.2byte	0x257
 3198 1698 94170000 		.4byte	0x1794
 3199 169c 18       		.uleb128 0x18
 3200 169d B7170000 		.4byte	.LASF377
 3201 16a1 14       		.byte	0x14
 3202 16a2 5902     		.2byte	0x259
 3203 16a4 A6000000 		.4byte	0xa6
 3204 16a8 00       		.byte	0
 3205 16a9 18       		.uleb128 0x18
 3206 16aa C6150000 		.4byte	.LASF378
 3207 16ae 14       		.byte	0x14
 3208 16af 5A02     		.2byte	0x25a
 3209 16b1 68150000 		.4byte	0x1568
 3210 16b5 04       		.byte	0x4
 3211 16b6 18       		.uleb128 0x18
 3212 16b7 32070000 		.4byte	.LASF379
 3213 16bb 14       		.byte	0x14
 3214 16bc 5B02     		.2byte	0x25b
 3215 16be 94170000 		.4byte	0x1794
 3216 16c2 08       		.byte	0x8
 3217 16c3 18       		.uleb128 0x18
 3218 16c4 85090000 		.4byte	.LASF380
 3219 16c8 14       		.byte	0x14
 3220 16c9 5C02     		.2byte	0x25c
 3221 16cb A0110000 		.4byte	0x11a0
 3222 16cf 24       		.byte	0x24
 3223 16d0 18       		.uleb128 0x18
 3224 16d1 960C0000 		.4byte	.LASF381
 3225 16d5 14       		.byte	0x14
 3226 16d6 5D02     		.2byte	0x25d
 3227 16d8 9F000000 		.4byte	0x9f
 3228 16dc 48       		.byte	0x48
 3229 16dd 18       		.uleb128 0x18
 3230 16de 37180000 		.4byte	.LASF382
 3231 16e2 14       		.byte	0x14
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 138


 3232 16e3 5E02     		.2byte	0x25e
 3233 16e5 98000000 		.4byte	0x98
 3234 16e9 50       		.byte	0x50
 3235 16ea 18       		.uleb128 0x18
 3236 16eb 3D010000 		.4byte	.LASF383
 3237 16ef 14       		.byte	0x14
 3238 16f0 5F02     		.2byte	0x25f
 3239 16f2 4E160000 		.4byte	0x164e
 3240 16f6 58       		.byte	0x58
 3241 16f7 18       		.uleb128 0x18
 3242 16f8 9F0A0000 		.4byte	.LASF384
 3243 16fc 14       		.byte	0x14
 3244 16fd 6002     		.2byte	0x260
 3245 16ff 16110000 		.4byte	0x1116
 3246 1703 68       		.byte	0x68
 3247 1704 18       		.uleb128 0x18
 3248 1705 D3150000 		.4byte	.LASF385
 3249 1709 14       		.byte	0x14
 3250 170a 6102     		.2byte	0x261
 3251 170c 16110000 		.4byte	0x1116
 3252 1710 70       		.byte	0x70
 3253 1711 18       		.uleb128 0x18
 3254 1712 20010000 		.4byte	.LASF386
 3255 1716 14       		.byte	0x14
 3256 1717 6202     		.2byte	0x262
 3257 1719 16110000 		.4byte	0x1116
 3258 171d 78       		.byte	0x78
 3259 171e 18       		.uleb128 0x18
 3260 171f 22120000 		.4byte	.LASF387
 3261 1723 14       		.byte	0x14
 3262 1724 6302     		.2byte	0x263
 3263 1726 A4170000 		.4byte	0x17a4
 3264 172a 80       		.byte	0x80
 3265 172b 18       		.uleb128 0x18
 3266 172c 77010000 		.4byte	.LASF388
 3267 1730 14       		.byte	0x14
 3268 1731 6402     		.2byte	0x264
 3269 1733 B4170000 		.4byte	0x17b4
 3270 1737 88       		.byte	0x88
 3271 1738 18       		.uleb128 0x18
 3272 1739 7C140000 		.4byte	.LASF389
 3273 173d 14       		.byte	0x14
 3274 173e 6502     		.2byte	0x265
 3275 1740 9F000000 		.4byte	0x9f
 3276 1744 A0       		.byte	0xa0
 3277 1745 18       		.uleb128 0x18
 3278 1746 67030000 		.4byte	.LASF390
 3279 174a 14       		.byte	0x14
 3280 174b 6602     		.2byte	0x266
 3281 174d 16110000 		.4byte	0x1116
 3282 1751 A4       		.byte	0xa4
 3283 1752 18       		.uleb128 0x18
 3284 1753 DB0D0000 		.4byte	.LASF391
 3285 1757 14       		.byte	0x14
 3286 1758 6702     		.2byte	0x267
 3287 175a 16110000 		.4byte	0x1116
 3288 175e AC       		.byte	0xac
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 139


 3289 175f 18       		.uleb128 0x18
 3290 1760 74090000 		.4byte	.LASF392
 3291 1764 14       		.byte	0x14
 3292 1765 6802     		.2byte	0x268
 3293 1767 16110000 		.4byte	0x1116
 3294 176b B4       		.byte	0xb4
 3295 176c 18       		.uleb128 0x18
 3296 176d 290D0000 		.4byte	.LASF393
 3297 1771 14       		.byte	0x14
 3298 1772 6902     		.2byte	0x269
 3299 1774 16110000 		.4byte	0x1116
 3300 1778 BC       		.byte	0xbc
 3301 1779 18       		.uleb128 0x18
 3302 177a 1B0E0000 		.4byte	.LASF394
 3303 177e 14       		.byte	0x14
 3304 177f 6A02     		.2byte	0x26a
 3305 1781 16110000 		.4byte	0x1116
 3306 1785 C4       		.byte	0xc4
 3307 1786 18       		.uleb128 0x18
 3308 1787 5F0E0000 		.4byte	.LASF395
 3309 178b 14       		.byte	0x14
 3310 178c 6B02     		.2byte	0x26b
 3311 178e 9F000000 		.4byte	0x9f
 3312 1792 CC       		.byte	0xcc
 3313 1793 00       		.byte	0
 3314 1794 07       		.uleb128 0x7
 3315 1795 850B0000 		.4byte	0xb85
 3316 1799 A4170000 		.4byte	0x17a4
 3317 179d 08       		.uleb128 0x8
 3318 179e EF000000 		.4byte	0xef
 3319 17a2 19       		.byte	0x19
 3320 17a3 00       		.byte	0
 3321 17a4 07       		.uleb128 0x7
 3322 17a5 850B0000 		.4byte	0xb85
 3323 17a9 B4170000 		.4byte	0x17b4
 3324 17ad 08       		.uleb128 0x8
 3325 17ae EF000000 		.4byte	0xef
 3326 17b2 07       		.byte	0x7
 3327 17b3 00       		.byte	0
 3328 17b4 07       		.uleb128 0x7
 3329 17b5 850B0000 		.4byte	0xb85
 3330 17b9 C4170000 		.4byte	0x17c4
 3331 17bd 08       		.uleb128 0x8
 3332 17be EF000000 		.4byte	0xef
 3333 17c2 17       		.byte	0x17
 3334 17c3 00       		.byte	0
 3335 17c4 17       		.uleb128 0x17
 3336 17c5 F0       		.byte	0xf0
 3337 17c6 14       		.byte	0x14
 3338 17c7 7002     		.2byte	0x270
 3339 17c9 E8170000 		.4byte	0x17e8
 3340 17cd 18       		.uleb128 0x18
 3341 17ce 63060000 		.4byte	.LASF396
 3342 17d2 14       		.byte	0x14
 3343 17d3 7302     		.2byte	0x273
 3344 17d5 E8170000 		.4byte	0x17e8
 3345 17d9 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 140


 3346 17da 18       		.uleb128 0x18
 3347 17db 6F180000 		.4byte	.LASF397
 3348 17df 14       		.byte	0x14
 3349 17e0 7402     		.2byte	0x274
 3350 17e2 F8170000 		.4byte	0x17f8
 3351 17e6 78       		.byte	0x78
 3352 17e7 00       		.byte	0
 3353 17e8 07       		.uleb128 0x7
 3354 17e9 E2120000 		.4byte	0x12e2
 3355 17ed F8170000 		.4byte	0x17f8
 3356 17f1 08       		.uleb128 0x8
 3357 17f2 EF000000 		.4byte	0xef
 3358 17f6 1D       		.byte	0x1d
 3359 17f7 00       		.byte	0
 3360 17f8 07       		.uleb128 0x7
 3361 17f9 A6000000 		.4byte	0xa6
 3362 17fd 08180000 		.4byte	0x1808
 3363 1801 08       		.uleb128 0x8
 3364 1802 EF000000 		.4byte	0xef
 3365 1806 1D       		.byte	0x1d
 3366 1807 00       		.byte	0
 3367 1808 23       		.uleb128 0x23
 3368 1809 F0       		.byte	0xf0
 3369 180a 14       		.byte	0x14
 3370 180b 5502     		.2byte	0x255
 3371 180d 2A180000 		.4byte	0x182a
 3372 1811 24       		.uleb128 0x24
 3373 1812 6A160000 		.4byte	.LASF347
 3374 1816 14       		.byte	0x14
 3375 1817 6C02     		.2byte	0x26c
 3376 1819 93160000 		.4byte	0x1693
 3377 181d 24       		.uleb128 0x24
 3378 181e F8110000 		.4byte	.LASF398
 3379 1822 14       		.byte	0x14
 3380 1823 7502     		.2byte	0x275
 3381 1825 C4170000 		.4byte	0x17c4
 3382 1829 00       		.byte	0
 3383 182a 07       		.uleb128 0x7
 3384 182b 850B0000 		.4byte	0xb85
 3385 182f 3A180000 		.4byte	0x183a
 3386 1833 08       		.uleb128 0x8
 3387 1834 EF000000 		.4byte	0xef
 3388 1838 18       		.byte	0x18
 3389 1839 00       		.byte	0
 3390 183a 19       		.uleb128 0x19
 3391 183b 45180000 		.4byte	0x1845
 3392 183f 1A       		.uleb128 0x1a
 3393 1840 30140000 		.4byte	0x1430
 3394 1844 00       		.byte	0
 3395 1845 10       		.uleb128 0x10
 3396 1846 04       		.byte	0x4
 3397 1847 3A180000 		.4byte	0x183a
 3398 184b 10       		.uleb128 0x10
 3399 184c 04       		.byte	0x4
 3400 184d 8A110000 		.4byte	0x118a
 3401 1851 19       		.uleb128 0x19
 3402 1852 5C180000 		.4byte	0x185c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 141


 3403 1856 1A       		.uleb128 0x1a
 3404 1857 9F000000 		.4byte	0x9f
 3405 185b 00       		.byte	0
 3406 185c 10       		.uleb128 0x10
 3407 185d 04       		.byte	0x4
 3408 185e 62180000 		.4byte	0x1862
 3409 1862 10       		.uleb128 0x10
 3410 1863 04       		.byte	0x4
 3411 1864 51180000 		.4byte	0x1851
 3412 1868 07       		.uleb128 0x7
 3413 1869 01160000 		.4byte	0x1601
 3414 186d 78180000 		.4byte	0x1878
 3415 1871 08       		.uleb128 0x8
 3416 1872 EF000000 		.4byte	0xef
 3417 1876 02       		.byte	0x2
 3418 1877 00       		.byte	0
 3419 1878 25       		.uleb128 0x25
 3420 1879 81100000 		.4byte	.LASF399
 3421 187d 04       		.byte	0x4
 3422 187e 9E05     		.2byte	0x59e
 3423 1880 03       		.byte	0x3
 3424 1881 92180000 		.4byte	0x1892
 3425 1885 26       		.uleb128 0x26
 3426 1886 5E060000 		.4byte	.LASF401
 3427 188a 04       		.byte	0x4
 3428 188b 9E05     		.2byte	0x59e
 3429 188d 92180000 		.4byte	0x1892
 3430 1891 00       		.byte	0
 3431 1892 10       		.uleb128 0x10
 3432 1893 04       		.byte	0x4
 3433 1894 43070000 		.4byte	0x743
 3434 1898 25       		.uleb128 0x25
 3435 1899 700C0000 		.4byte	.LASF400
 3436 189d 05       		.byte	0x5
 3437 189e E702     		.2byte	0x2e7
 3438 18a0 03       		.byte	0x3
 3439 18a1 B2180000 		.4byte	0x18b2
 3440 18a5 26       		.uleb128 0x26
 3441 18a6 5E060000 		.4byte	.LASF401
 3442 18aa 05       		.byte	0x5
 3443 18ab E702     		.2byte	0x2e7
 3444 18ad B2180000 		.4byte	0x18b2
 3445 18b1 00       		.byte	0
 3446 18b2 10       		.uleb128 0x10
 3447 18b3 04       		.byte	0x4
 3448 18b4 37070000 		.4byte	0x737
 3449 18b8 25       		.uleb128 0x25
 3450 18b9 B6040000 		.4byte	.LASF402
 3451 18bd 05       		.byte	0x5
 3452 18be 0C03     		.2byte	0x30c
 3453 18c0 03       		.byte	0x3
 3454 18c1 DE180000 		.4byte	0x18de
 3455 18c5 26       		.uleb128 0x26
 3456 18c6 5E060000 		.4byte	.LASF401
 3457 18ca 05       		.byte	0x5
 3458 18cb 0C03     		.2byte	0x30c
 3459 18cd B2180000 		.4byte	0x18b2
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 142


 3460 18d1 26       		.uleb128 0x26
 3461 18d2 17080000 		.4byte	.LASF238
 3462 18d6 05       		.byte	0x5
 3463 18d7 0C03     		.2byte	0x30c
 3464 18d9 D9000000 		.4byte	0xd9
 3465 18dd 00       		.byte	0
 3466 18de 25       		.uleb128 0x25
 3467 18df 3F070000 		.4byte	.LASF403
 3468 18e3 02       		.byte	0x2
 3469 18e4 2503     		.2byte	0x325
 3470 18e6 03       		.byte	0x3
 3471 18e7 10190000 		.4byte	0x1910
 3472 18eb 26       		.uleb128 0x26
 3473 18ec 5E060000 		.4byte	.LASF401
 3474 18f0 02       		.byte	0x2
 3475 18f1 2503     		.2byte	0x325
 3476 18f3 93100000 		.4byte	0x1093
 3477 18f7 26       		.uleb128 0x26
 3478 18f8 08160000 		.4byte	.LASF404
 3479 18fc 02       		.byte	0x2
 3480 18fd 2503     		.2byte	0x325
 3481 18ff E4000000 		.4byte	0xe4
 3482 1903 26       		.uleb128 0x26
 3483 1904 17080000 		.4byte	.LASF238
 3484 1908 02       		.byte	0x2
 3485 1909 2503     		.2byte	0x325
 3486 190b E4000000 		.4byte	0xe4
 3487 190f 00       		.byte	0
 3488 1910 27       		.uleb128 0x27
 3489 1911 7C130000 		.4byte	.LASF405
 3490 1915 03       		.byte	0x3
 3491 1916 AE03     		.2byte	0x3ae
 3492 1918 03       		.byte	0x3
 3493 1919 27       		.uleb128 0x27
 3494 191a 4E150000 		.4byte	.LASF406
 3495 191e 03       		.byte	0x3
 3496 191f C203     		.2byte	0x3c2
 3497 1921 03       		.byte	0x3
 3498 1922 25       		.uleb128 0x25
 3499 1923 42010000 		.4byte	.LASF407
 3500 1927 15       		.byte	0x15
 3501 1928 2401     		.2byte	0x124
 3502 192a 03       		.byte	0x3
 3503 192b 3C190000 		.4byte	0x193c
 3504 192f 26       		.uleb128 0x26
 3505 1930 17080000 		.4byte	.LASF238
 3506 1934 15       		.byte	0x15
 3507 1935 2401     		.2byte	0x124
 3508 1937 D9000000 		.4byte	0xd9
 3509 193b 00       		.byte	0
 3510 193c 27       		.uleb128 0x27
 3511 193d A9150000 		.4byte	.LASF408
 3512 1941 15       		.byte	0x15
 3513 1942 0B01     		.2byte	0x10b
 3514 1944 03       		.byte	0x3
 3515 1945 28       		.uleb128 0x28
 3516 1946 EC040000 		.4byte	.LASF409
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 143


 3517 194a 06       		.byte	0x6
 3518 194b 81       		.byte	0x81
 3519 194c 03       		.byte	0x3
 3520 194d 29       		.uleb128 0x29
 3521 194e BB080000 		.4byte	.LASF412
 3522 1952 03       		.byte	0x3
 3523 1953 D604     		.2byte	0x4d6
 3524 1955 C3000000 		.4byte	0xc3
 3525 1959 03       		.byte	0x3
 3526 195a 77190000 		.4byte	0x1977
 3527 195e 26       		.uleb128 0x26
 3528 195f AC0A0000 		.4byte	.LASF410
 3529 1963 03       		.byte	0x3
 3530 1964 D604     		.2byte	0x4d6
 3531 1966 E4000000 		.4byte	0xe4
 3532 196a 26       		.uleb128 0x26
 3533 196b 6D010000 		.4byte	.LASF411
 3534 196f 03       		.byte	0x3
 3535 1970 D604     		.2byte	0x4d6
 3536 1972 C3000000 		.4byte	0xc3
 3537 1976 00       		.byte	0
 3538 1977 29       		.uleb128 0x29
 3539 1978 BA130000 		.4byte	.LASF413
 3540 197c 03       		.byte	0x3
 3541 197d D503     		.2byte	0x3d5
 3542 197f C3000000 		.4byte	0xc3
 3543 1983 03       		.byte	0x3
 3544 1984 95190000 		.4byte	0x1995
 3545 1988 26       		.uleb128 0x26
 3546 1989 AC0A0000 		.4byte	.LASF410
 3547 198d 03       		.byte	0x3
 3548 198e D503     		.2byte	0x3d5
 3549 1990 E4000000 		.4byte	0xe4
 3550 1994 00       		.byte	0
 3551 1995 2A       		.uleb128 0x2a
 3552 1996 000C0000 		.4byte	.LASF416
 3553 199a 01       		.byte	0x1
 3554 199b 35       		.byte	0x35
 3555 199c 9F000000 		.4byte	0x9f
 3556 19a0 00000000 		.4byte	.LFB577
 3557 19a4 C0000000 		.4byte	.LFE577-.LFB577
 3558 19a8 01       		.uleb128 0x1
 3559 19a9 9C       		.byte	0x9c
 3560 19aa 981B0000 		.4byte	0x1b98
 3561 19ae 2B       		.uleb128 0x2b
 3562 19af DE180000 		.4byte	0x18de
 3563 19b3 02000000 		.4byte	.LBB51
 3564 19b7 06000000 		.4byte	.LBE51-.LBB51
 3565 19bb 01       		.byte	0x1
 3566 19bc 37       		.byte	0x37
 3567 19bd DD190000 		.4byte	0x19dd
 3568 19c1 2C       		.uleb128 0x2c
 3569 19c2 03190000 		.4byte	0x1903
 3570 19c6 00000000 		.4byte	.LLST0
 3571 19ca 2C       		.uleb128 0x2c
 3572 19cb F7180000 		.4byte	0x18f7
 3573 19cf 14000000 		.4byte	.LLST1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 144


 3574 19d3 2C       		.uleb128 0x2c
 3575 19d4 EB180000 		.4byte	0x18eb
 3576 19d8 28000000 		.4byte	.LLST2
 3577 19dc 00       		.byte	0
 3578 19dd 2D       		.uleb128 0x2d
 3579 19de 16000000 		.4byte	.LBB53
 3580 19e2 64000000 		.4byte	.LBE53-.LBB53
 3581 19e6 DA1A0000 		.4byte	0x1ada
 3582 19ea 2E       		.uleb128 0x2e
 3583 19eb 69647800 		.ascii	"idx\000"
 3584 19ef 01       		.byte	0x1
 3585 19f0 3D       		.byte	0x3d
 3586 19f1 9F000000 		.4byte	0x9f
 3587 19f5 40000000 		.4byte	.LLST3
 3588 19f9 2F       		.uleb128 0x2f
 3589 19fa 1A000000 		.4byte	.LBB54
 3590 19fe 58000000 		.4byte	.LBE54-.LBB54
 3591 1a02 30       		.uleb128 0x30
 3592 1a03 80170000 		.4byte	.LASF414
 3593 1a07 01       		.byte	0x1
 3594 1a08 3F       		.byte	0x3f
 3595 1a09 C3000000 		.4byte	0xc3
 3596 1a0d 30       		.uleb128 0x30
 3597 1a0e CA0D0000 		.4byte	.LASF415
 3598 1a12 01       		.byte	0x1
 3599 1a13 41       		.byte	0x41
 3600 1a14 C3000000 		.4byte	0xc3
 3601 1a18 2B       		.uleb128 0x2b
 3602 1a19 77190000 		.4byte	0x1977
 3603 1a1d 20000000 		.4byte	.LBB55
 3604 1a21 26000000 		.4byte	.LBE55-.LBB55
 3605 1a25 01       		.byte	0x1
 3606 1a26 3F       		.byte	0x3f
 3607 1a27 6B1A0000 		.4byte	0x1a6b
 3608 1a2b 2C       		.uleb128 0x2c
 3609 1a2c 88190000 		.4byte	0x1988
 3610 1a30 5F000000 		.4byte	.LLST4
 3611 1a34 31       		.uleb128 0x31
 3612 1a35 3C000000 		.4byte	.LVL7
 3613 1a39 741E0000 		.4byte	0x1e74
 3614 1a3d 521A0000 		.4byte	0x1a52
 3615 1a41 32       		.uleb128 0x32
 3616 1a42 01       		.uleb128 0x1
 3617 1a43 50       		.byte	0x50
 3618 1a44 05       		.uleb128 0x5
 3619 1a45 03       		.byte	0x3
 3620 1a46 1C000000 		.4byte	.LC1
 3621 1a4a 32       		.uleb128 0x32
 3622 1a4b 01       		.uleb128 0x1
 3623 1a4c 51       		.byte	0x51
 3624 1a4d 03       		.uleb128 0x3
 3625 1a4e 0A       		.byte	0xa
 3626 1a4f D803     		.2byte	0x3d8
 3627 1a51 00       		.byte	0
 3628 1a52 33       		.uleb128 0x33
 3629 1a53 44000000 		.4byte	.LVL8
 3630 1a57 801E0000 		.4byte	0x1e80
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 145


 3631 1a5b 32       		.uleb128 0x32
 3632 1a5c 01       		.uleb128 0x1
 3633 1a5d 50       		.byte	0x50
 3634 1a5e 05       		.uleb128 0x5
 3635 1a5f 0C       		.byte	0xc
 3636 1a60 00001D41 		.4byte	0x411d0000
 3637 1a64 32       		.uleb128 0x32
 3638 1a65 01       		.uleb128 0x1
 3639 1a66 51       		.byte	0x51
 3640 1a67 01       		.uleb128 0x1
 3641 1a68 30       		.byte	0x30
 3642 1a69 00       		.byte	0
 3643 1a6a 00       		.byte	0
 3644 1a6b 2B       		.uleb128 0x2b
 3645 1a6c 4D190000 		.4byte	0x194d
 3646 1a70 46000000 		.4byte	.LBB57
 3647 1a74 26000000 		.4byte	.LBE57-.LBB57
 3648 1a78 01       		.byte	0x1
 3649 1a79 41       		.byte	0x41
 3650 1a7a C91A0000 		.4byte	0x1ac9
 3651 1a7e 34       		.uleb128 0x34
 3652 1a7f 6A190000 		.4byte	0x196a
 3653 1a83 2C       		.uleb128 0x2c
 3654 1a84 5E190000 		.4byte	0x195e
 3655 1a88 73000000 		.4byte	.LLST5
 3656 1a8c 31       		.uleb128 0x31
 3657 1a8d 62000000 		.4byte	.LVL10
 3658 1a91 741E0000 		.4byte	0x1e74
 3659 1a95 AA1A0000 		.4byte	0x1aaa
 3660 1a99 32       		.uleb128 0x32
 3661 1a9a 01       		.uleb128 0x1
 3662 1a9b 50       		.byte	0x50
 3663 1a9c 05       		.uleb128 0x5
 3664 1a9d 03       		.byte	0x3
 3665 1a9e 1C000000 		.4byte	.LC1
 3666 1aa2 32       		.uleb128 0x32
 3667 1aa3 01       		.uleb128 0x1
 3668 1aa4 51       		.byte	0x51
 3669 1aa5 03       		.uleb128 0x3
 3670 1aa6 0A       		.byte	0xa
 3671 1aa7 D904     		.2byte	0x4d9
 3672 1aa9 00       		.byte	0
 3673 1aaa 33       		.uleb128 0x33
 3674 1aab 6C000000 		.4byte	.LVL11
 3675 1aaf 8C1E0000 		.4byte	0x1e8c
 3676 1ab3 32       		.uleb128 0x32
 3677 1ab4 01       		.uleb128 0x1
 3678 1ab5 50       		.byte	0x50
 3679 1ab6 05       		.uleb128 0x5
 3680 1ab7 0C       		.byte	0xc
 3681 1ab8 00001D41 		.4byte	0x411d0000
 3682 1abc 32       		.uleb128 0x32
 3683 1abd 01       		.uleb128 0x1
 3684 1abe 51       		.byte	0x51
 3685 1abf 01       		.uleb128 0x1
 3686 1ac0 30       		.byte	0x30
 3687 1ac1 32       		.uleb128 0x32
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 146


 3688 1ac2 01       		.uleb128 0x1
 3689 1ac3 52       		.byte	0x52
 3690 1ac4 02       		.uleb128 0x2
 3691 1ac5 75       		.byte	0x75
 3692 1ac6 00       		.sleb128 0
 3693 1ac7 00       		.byte	0
 3694 1ac8 00       		.byte	0
 3695 1ac9 33       		.uleb128 0x33
 3696 1aca 20000000 		.4byte	.LVL6
 3697 1ace 981E0000 		.4byte	0x1e98
 3698 1ad2 32       		.uleb128 0x32
 3699 1ad3 01       		.uleb128 0x1
 3700 1ad4 50       		.byte	0x50
 3701 1ad5 01       		.uleb128 0x1
 3702 1ad6 31       		.byte	0x31
 3703 1ad7 00       		.byte	0
 3704 1ad8 00       		.byte	0
 3705 1ad9 00       		.byte	0
 3706 1ada 2B       		.uleb128 0x2b
 3707 1adb 19190000 		.4byte	0x1919
 3708 1adf 7A000000 		.4byte	.LBB59
 3709 1ae3 08000000 		.4byte	.LBE59-.LBB59
 3710 1ae7 01       		.byte	0x1
 3711 1ae8 4C       		.byte	0x4c
 3712 1ae9 FE1A0000 		.4byte	0x1afe
 3713 1aed 33       		.uleb128 0x33
 3714 1aee 82000000 		.4byte	.LVL14
 3715 1af2 A31E0000 		.4byte	0x1ea3
 3716 1af6 32       		.uleb128 0x32
 3717 1af7 01       		.uleb128 0x1
 3718 1af8 50       		.byte	0x50
 3719 1af9 02       		.uleb128 0x2
 3720 1afa 74       		.byte	0x74
 3721 1afb 00       		.sleb128 0
 3722 1afc 00       		.byte	0
 3723 1afd 00       		.byte	0
 3724 1afe 2B       		.uleb128 0x2b
 3725 1aff 10190000 		.4byte	0x1910
 3726 1b03 82000000 		.4byte	.LBB61
 3727 1b07 08000000 		.4byte	.LBE61-.LBB61
 3728 1b0b 01       		.byte	0x1
 3729 1b0c 4D       		.byte	0x4d
 3730 1b0d 2C1B0000 		.4byte	0x1b2c
 3731 1b11 35       		.uleb128 0x35
 3732 1b12 78180000 		.4byte	0x1878
 3733 1b16 82000000 		.4byte	.LBB62
 3734 1b1a 08000000 		.4byte	.LBE62-.LBB62
 3735 1b1e 03       		.byte	0x3
 3736 1b1f B003     		.2byte	0x3b0
 3737 1b21 2C       		.uleb128 0x2c
 3738 1b22 85180000 		.4byte	0x1885
 3739 1b26 87000000 		.4byte	.LLST6
 3740 1b2a 00       		.byte	0
 3741 1b2b 00       		.byte	0
 3742 1b2c 2B       		.uleb128 0x2b
 3743 1b2d DE180000 		.4byte	0x18de
 3744 1b31 8A000000 		.4byte	.LBB64
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 147


 3745 1b35 06000000 		.4byte	.LBE64-.LBB64
 3746 1b39 01       		.byte	0x1
 3747 1b3a 4F       		.byte	0x4f
 3748 1b3b 5B1B0000 		.4byte	0x1b5b
 3749 1b3f 2C       		.uleb128 0x2c
 3750 1b40 03190000 		.4byte	0x1903
 3751 1b44 9F000000 		.4byte	.LLST7
 3752 1b48 2C       		.uleb128 0x2c
 3753 1b49 F7180000 		.4byte	0x18f7
 3754 1b4d 9F000000 		.4byte	.LLST7
 3755 1b51 2C       		.uleb128 0x2c
 3756 1b52 EB180000 		.4byte	0x18eb
 3757 1b56 B3000000 		.4byte	.LLST9
 3758 1b5a 00       		.byte	0
 3759 1b5b 31       		.uleb128 0x31
 3760 1b5c 0E000000 		.4byte	.LVL2
 3761 1b60 AF1E0000 		.4byte	0x1eaf
 3762 1b64 721B0000 		.4byte	0x1b72
 3763 1b68 32       		.uleb128 0x32
 3764 1b69 01       		.uleb128 0x1
 3765 1b6a 50       		.byte	0x50
 3766 1b6b 05       		.uleb128 0x5
 3767 1b6c 03       		.byte	0x3
 3768 1b6d 00000000 		.4byte	.LC0
 3769 1b71 00       		.byte	0
 3770 1b72 36       		.uleb128 0x36
 3771 1b73 12000000 		.4byte	.LVL3
 3772 1b77 BE1E0000 		.4byte	0x1ebe
 3773 1b7b 36       		.uleb128 0x36
 3774 1b7c 16000000 		.4byte	.LVL4
 3775 1b80 C91E0000 		.4byte	0x1ec9
 3776 1b84 33       		.uleb128 0x33
 3777 1b85 96000000 		.4byte	.LVL17
 3778 1b89 AF1E0000 		.4byte	0x1eaf
 3779 1b8d 32       		.uleb128 0x32
 3780 1b8e 01       		.uleb128 0x1
 3781 1b8f 50       		.byte	0x50
 3782 1b90 05       		.uleb128 0x5
 3783 1b91 03       		.byte	0x3
 3784 1b92 3C000000 		.4byte	.LC2
 3785 1b96 00       		.byte	0
 3786 1b97 00       		.byte	0
 3787 1b98 2A       		.uleb128 0x2a
 3788 1b99 1D020000 		.4byte	.LASF417
 3789 1b9d 01       		.byte	0x1
 3790 1b9e 55       		.byte	0x55
 3791 1b9f 9F000000 		.4byte	0x9f
 3792 1ba3 00000000 		.4byte	.LFB578
 3793 1ba7 70000000 		.4byte	.LFE578-.LFB578
 3794 1bab 01       		.uleb128 0x1
 3795 1bac 9C       		.byte	0x9c
 3796 1bad F71C0000 		.4byte	0x1cf7
 3797 1bb1 2B       		.uleb128 0x2b
 3798 1bb2 DE180000 		.4byte	0x18de
 3799 1bb6 02000000 		.4byte	.LBB66
 3800 1bba 06000000 		.4byte	.LBE66-.LBB66
 3801 1bbe 01       		.byte	0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 148


 3802 1bbf 57       		.byte	0x57
 3803 1bc0 E01B0000 		.4byte	0x1be0
 3804 1bc4 2C       		.uleb128 0x2c
 3805 1bc5 03190000 		.4byte	0x1903
 3806 1bc9 CB000000 		.4byte	.LLST10
 3807 1bcd 2C       		.uleb128 0x2c
 3808 1bce F7180000 		.4byte	0x18f7
 3809 1bd2 DF000000 		.4byte	.LLST11
 3810 1bd6 2C       		.uleb128 0x2c
 3811 1bd7 EB180000 		.4byte	0x18eb
 3812 1bdb F3000000 		.4byte	.LLST12
 3813 1bdf 00       		.byte	0
 3814 1be0 2D       		.uleb128 0x2d
 3815 1be1 12000000 		.4byte	.LBB68
 3816 1be5 2A000000 		.4byte	.LBE68-.LBB68
 3817 1be9 661C0000 		.4byte	0x1c66
 3818 1bed 2E       		.uleb128 0x2e
 3819 1bee 69647800 		.ascii	"idx\000"
 3820 1bf2 01       		.byte	0x1
 3821 1bf3 5B       		.byte	0x5b
 3822 1bf4 9F000000 		.4byte	0x9f
 3823 1bf8 0B010000 		.4byte	.LLST13
 3824 1bfc 2F       		.uleb128 0x2f
 3825 1bfd 16000000 		.4byte	.LBB69
 3826 1c01 1E000000 		.4byte	.LBE69-.LBB69
 3827 1c05 37       		.uleb128 0x37
 3828 1c06 17080000 		.4byte	.LASF238
 3829 1c0a 01       		.byte	0x1
 3830 1c0b 62       		.byte	0x62
 3831 1c0c D9000000 		.4byte	0xd9
 3832 1c10 2A010000 		.4byte	.LLST14
 3833 1c14 2B       		.uleb128 0x2b
 3834 1c15 22190000 		.4byte	0x1922
 3835 1c19 24000000 		.4byte	.LBB70
 3836 1c1d 0A000000 		.4byte	.LBE70-.LBB70
 3837 1c21 01       		.byte	0x1
 3838 1c22 63       		.byte	0x63
 3839 1c23 541C0000 		.4byte	0x1c54
 3840 1c27 2C       		.uleb128 0x2c
 3841 1c28 2F190000 		.4byte	0x192f
 3842 1c2c 2A010000 		.4byte	.LLST14
 3843 1c30 35       		.uleb128 0x35
 3844 1c31 B8180000 		.4byte	0x18b8
 3845 1c35 24000000 		.4byte	.LBB71
 3846 1c39 0A000000 		.4byte	.LBE71-.LBB71
 3847 1c3d 15       		.byte	0x15
 3848 1c3e 2601     		.2byte	0x126
 3849 1c40 2C       		.uleb128 0x2c
 3850 1c41 D1180000 		.4byte	0x18d1
 3851 1c45 2A010000 		.4byte	.LLST14
 3852 1c49 2C       		.uleb128 0x2c
 3853 1c4a C5180000 		.4byte	0x18c5
 3854 1c4e 6F010000 		.4byte	.LLST17
 3855 1c52 00       		.byte	0
 3856 1c53 00       		.byte	0
 3857 1c54 33       		.uleb128 0x33
 3858 1c55 34000000 		.4byte	.LVL27
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 149


 3859 1c59 D41E0000 		.4byte	0x1ed4
 3860 1c5d 32       		.uleb128 0x32
 3861 1c5e 01       		.uleb128 0x1
 3862 1c5f 50       		.byte	0x50
 3863 1c60 02       		.uleb128 0x2
 3864 1c61 08       		.byte	0x8
 3865 1c62 53       		.byte	0x53
 3866 1c63 00       		.byte	0
 3867 1c64 00       		.byte	0
 3868 1c65 00       		.byte	0
 3869 1c66 2B       		.uleb128 0x2b
 3870 1c67 3C190000 		.4byte	0x193c
 3871 1c6b 3C000000 		.4byte	.LBB73
 3872 1c6f 0A000000 		.4byte	.LBE73-.LBB73
 3873 1c73 01       		.byte	0x1
 3874 1c74 6E       		.byte	0x6e
 3875 1c75 941C0000 		.4byte	0x1c94
 3876 1c79 35       		.uleb128 0x35
 3877 1c7a 98180000 		.4byte	0x1898
 3878 1c7e 3C000000 		.4byte	.LBB74
 3879 1c82 0A000000 		.4byte	.LBE74-.LBB74
 3880 1c86 15       		.byte	0x15
 3881 1c87 0D01     		.2byte	0x10d
 3882 1c89 2C       		.uleb128 0x2c
 3883 1c8a A5180000 		.4byte	0x18a5
 3884 1c8e 87010000 		.4byte	.LLST18
 3885 1c92 00       		.byte	0
 3886 1c93 00       		.byte	0
 3887 1c94 2B       		.uleb128 0x2b
 3888 1c95 DE180000 		.4byte	0x18de
 3889 1c99 46000000 		.4byte	.LBB76
 3890 1c9d 06000000 		.4byte	.LBE76-.LBB76
 3891 1ca1 01       		.byte	0x1
 3892 1ca2 70       		.byte	0x70
 3893 1ca3 C31C0000 		.4byte	0x1cc3
 3894 1ca7 2C       		.uleb128 0x2c
 3895 1ca8 03190000 		.4byte	0x1903
 3896 1cac 9F010000 		.4byte	.LLST19
 3897 1cb0 2C       		.uleb128 0x2c
 3898 1cb1 F7180000 		.4byte	0x18f7
 3899 1cb5 B3010000 		.4byte	.LLST20
 3900 1cb9 2C       		.uleb128 0x2c
 3901 1cba EB180000 		.4byte	0x18eb
 3902 1cbe C7010000 		.4byte	.LLST21
 3903 1cc2 00       		.byte	0
 3904 1cc3 31       		.uleb128 0x31
 3905 1cc4 0E000000 		.4byte	.LVL20
 3906 1cc8 AF1E0000 		.4byte	0x1eaf
 3907 1ccc DA1C0000 		.4byte	0x1cda
 3908 1cd0 32       		.uleb128 0x32
 3909 1cd1 01       		.uleb128 0x1
 3910 1cd2 50       		.byte	0x50
 3911 1cd3 05       		.uleb128 0x5
 3912 1cd4 03       		.byte	0x3
 3913 1cd5 58000000 		.4byte	.LC3
 3914 1cd9 00       		.byte	0
 3915 1cda 36       		.uleb128 0x36
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 150


 3916 1cdb 12000000 		.4byte	.LVL21
 3917 1cdf E01E0000 		.4byte	0x1ee0
 3918 1ce3 33       		.uleb128 0x33
 3919 1ce4 52000000 		.4byte	.LVL32
 3920 1ce8 AF1E0000 		.4byte	0x1eaf
 3921 1cec 32       		.uleb128 0x32
 3922 1ced 01       		.uleb128 0x1
 3923 1cee 50       		.byte	0x50
 3924 1cef 05       		.uleb128 0x5
 3925 1cf0 03       		.byte	0x3
 3926 1cf1 74000000 		.4byte	.LC4
 3927 1cf5 00       		.byte	0
 3928 1cf6 00       		.byte	0
 3929 1cf7 38       		.uleb128 0x38
 3930 1cf8 A2160000 		.4byte	.LASF446
 3931 1cfc 01       		.byte	0x1
 3932 1cfd 1B       		.byte	0x1b
 3933 1cfe 9F000000 		.4byte	0x9f
 3934 1d02 00000000 		.4byte	.LFB576
 3935 1d06 60000000 		.4byte	.LFE576-.LFB576
 3936 1d0a 01       		.uleb128 0x1
 3937 1d0b 9C       		.byte	0x9c
 3938 1d0c D01D0000 		.4byte	0x1dd0
 3939 1d10 39       		.uleb128 0x39
 3940 1d11 45190000 		.4byte	0x1945
 3941 1d15 02000000 		.4byte	.LBB78
 3942 1d19 02000000 		.4byte	.LBE78-.LBB78
 3943 1d1d 01       		.byte	0x1
 3944 1d1e 1D       		.byte	0x1d
 3945 1d1f 36       		.uleb128 0x36
 3946 1d20 08000000 		.4byte	.LVL34
 3947 1d24 EB1E0000 		.4byte	0x1eeb
 3948 1d28 36       		.uleb128 0x36
 3949 1d29 0C000000 		.4byte	.LVL35
 3950 1d2d F61E0000 		.4byte	0x1ef6
 3951 1d31 31       		.uleb128 0x31
 3952 1d32 1C000000 		.4byte	.LVL36
 3953 1d36 011F0000 		.4byte	0x1f01
 3954 1d3a 4E1D0000 		.4byte	0x1d4e
 3955 1d3e 32       		.uleb128 0x32
 3956 1d3f 01       		.uleb128 0x1
 3957 1d40 51       		.byte	0x51
 3958 1d41 01       		.uleb128 0x1
 3959 1d42 30       		.byte	0x30
 3960 1d43 32       		.uleb128 0x32
 3961 1d44 01       		.uleb128 0x1
 3962 1d45 52       		.byte	0x52
 3963 1d46 01       		.uleb128 0x1
 3964 1d47 32       		.byte	0x32
 3965 1d48 32       		.uleb128 0x32
 3966 1d49 01       		.uleb128 0x1
 3967 1d4a 53       		.byte	0x53
 3968 1d4b 01       		.uleb128 0x1
 3969 1d4c 30       		.byte	0x30
 3970 1d4d 00       		.byte	0
 3971 1d4e 31       		.uleb128 0x31
 3972 1d4f 22000000 		.4byte	.LVL37
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 151


 3973 1d53 0C1F0000 		.4byte	0x1f0c
 3974 1d57 651D0000 		.4byte	0x1d65
 3975 1d5b 32       		.uleb128 0x32
 3976 1d5c 01       		.uleb128 0x1
 3977 1d5d 50       		.byte	0x50
 3978 1d5e 05       		.uleb128 0x5
 3979 1d5f 03       		.byte	0x3
 3980 1d60 90000000 		.4byte	.LC5
 3981 1d64 00       		.byte	0
 3982 1d65 31       		.uleb128 0x31
 3983 1d66 28000000 		.4byte	.LVL38
 3984 1d6a AF1E0000 		.4byte	0x1eaf
 3985 1d6e 7C1D0000 		.4byte	0x1d7c
 3986 1d72 32       		.uleb128 0x32
 3987 1d73 01       		.uleb128 0x1
 3988 1d74 50       		.byte	0x50
 3989 1d75 05       		.uleb128 0x5
 3990 1d76 03       		.byte	0x3
 3991 1d77 98000000 		.4byte	.LC6
 3992 1d7b 00       		.byte	0
 3993 1d7c 36       		.uleb128 0x36
 3994 1d7d 2C000000 		.4byte	.LVL39
 3995 1d81 171F0000 		.4byte	0x1f17
 3996 1d85 36       		.uleb128 0x36
 3997 1d86 30000000 		.4byte	.LVL40
 3998 1d8a 221F0000 		.4byte	0x1f22
 3999 1d8e 36       		.uleb128 0x36
 4000 1d8f 38000000 		.4byte	.LVL41
 4001 1d93 2D1F0000 		.4byte	0x1f2d
 4002 1d97 31       		.uleb128 0x31
 4003 1d98 3E000000 		.4byte	.LVL42
 4004 1d9c 381F0000 		.4byte	0x1f38
 4005 1da0 AA1D0000 		.4byte	0x1daa
 4006 1da4 32       		.uleb128 0x32
 4007 1da5 01       		.uleb128 0x1
 4008 1da6 50       		.byte	0x50
 4009 1da7 01       		.uleb128 0x1
 4010 1da8 30       		.byte	0x30
 4011 1da9 00       		.byte	0
 4012 1daa 36       		.uleb128 0x36
 4013 1dab 44000000 		.4byte	.LVL43
 4014 1daf 95190000 		.4byte	0x1995
 4015 1db3 31       		.uleb128 0x31
 4016 1db4 4A000000 		.4byte	.LVL44
 4017 1db8 381F0000 		.4byte	0x1f38
 4018 1dbc C61D0000 		.4byte	0x1dc6
 4019 1dc0 32       		.uleb128 0x32
 4020 1dc1 01       		.uleb128 0x1
 4021 1dc2 50       		.byte	0x50
 4022 1dc3 01       		.uleb128 0x1
 4023 1dc4 31       		.byte	0x31
 4024 1dc5 00       		.byte	0
 4025 1dc6 36       		.uleb128 0x36
 4026 1dc7 52000000 		.4byte	.LVL45
 4027 1dcb 981B0000 		.4byte	0x1b98
 4028 1dcf 00       		.byte	0
 4029 1dd0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 152


 4030 1dd1 2B110000 		.4byte	.LASF418
 4031 1dd5 16       		.byte	0x16
 4032 1dd6 F907     		.2byte	0x7f9
 4033 1dd8 DC1D0000 		.4byte	0x1ddc
 4034 1ddc 05       		.uleb128 0x5
 4035 1ddd D9000000 		.4byte	0xd9
 4036 1de1 3B       		.uleb128 0x3b
 4037 1de2 75000000 		.4byte	.LASF419
 4038 1de6 0D       		.byte	0xd
 4039 1de7 A7       		.byte	0xa7
 4040 1de8 EC1D0000 		.4byte	0x1dec
 4041 1dec 10       		.uleb128 0x10
 4042 1ded 04       		.byte	0x4
 4043 1dee F21D0000 		.4byte	0x1df2
 4044 1df2 06       		.uleb128 0x6
 4045 1df3 670B0000 		.4byte	0xb67
 4046 1df7 3A       		.uleb128 0x3a
 4047 1df8 5E150000 		.4byte	.LASF420
 4048 1dfc 03       		.byte	0x3
 4049 1dfd 6001     		.2byte	0x160
 4050 1dff E4000000 		.4byte	0xe4
 4051 1e03 07       		.uleb128 0x7
 4052 1e04 131E0000 		.4byte	0x1e13
 4053 1e08 131E0000 		.4byte	0x1e13
 4054 1e0c 08       		.uleb128 0x8
 4055 1e0d EF000000 		.4byte	0xef
 4056 1e11 00       		.byte	0
 4057 1e12 00       		.byte	0
 4058 1e13 06       		.uleb128 0x6
 4059 1e14 88100000 		.4byte	0x1088
 4060 1e18 3A       		.uleb128 0x3a
 4061 1e19 A4100000 		.4byte	.LASF421
 4062 1e1d 03       		.byte	0x3
 4063 1e1e 6401     		.2byte	0x164
 4064 1e20 241E0000 		.4byte	0x1e24
 4065 1e24 06       		.uleb128 0x6
 4066 1e25 031E0000 		.4byte	0x1e03
 4067 1e29 3B       		.uleb128 0x3b
 4068 1e2a 0F160000 		.4byte	.LASF422
 4069 1e2e 17       		.byte	0x17
 4070 1e2f 87       		.byte	0x87
 4071 1e30 2C100000 		.4byte	0x102c
 4072 1e34 3B       		.uleb128 0x3b
 4073 1e35 520B0000 		.4byte	.LASF423
 4074 1e39 15       		.byte	0x15
 4075 1e3a 5A       		.byte	0x5a
 4076 1e3b 3F1E0000 		.4byte	0x1e3f
 4077 1e3f 06       		.uleb128 0x6
 4078 1e40 0A0E0000 		.4byte	0xe0a
 4079 1e44 3A       		.uleb128 0x3a
 4080 1e45 E2000000 		.4byte	.LASF424
 4081 1e49 14       		.byte	0x14
 4082 1e4a FD02     		.2byte	0x2fd
 4083 1e4c 30140000 		.4byte	0x1430
 4084 1e50 07       		.uleb128 0x7
 4085 1e51 AD000000 		.4byte	0xad
 4086 1e55 631E0000 		.4byte	0x1e63
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 153


 4087 1e59 3C       		.uleb128 0x3c
 4088 1e5a EF000000 		.4byte	0xef
 4089 1e5e BFD40100 		.4byte	0x1d4bf
 4090 1e62 00       		.byte	0
 4091 1e63 3D       		.uleb128 0x3d
 4092 1e64 8D180000 		.4byte	.LASF425
 4093 1e68 01       		.byte	0x1
 4094 1e69 18       		.byte	0x18
 4095 1e6a 501E0000 		.4byte	0x1e50
 4096 1e6e 05       		.uleb128 0x5
 4097 1e6f 03       		.byte	0x3
 4098 1e70 00000000 		.4byte	voice
 4099 1e74 3E       		.uleb128 0x3e
 4100 1e75 CE0A0000 		.4byte	.LASF426
 4101 1e79 CE0A0000 		.4byte	.LASF426
 4102 1e7d 0E       		.byte	0xe
 4103 1e7e 9203     		.2byte	0x392
 4104 1e80 3E       		.uleb128 0x3e
 4105 1e81 69130000 		.4byte	.LASF427
 4106 1e85 69130000 		.4byte	.LASF427
 4107 1e89 04       		.byte	0x4
 4108 1e8a 3605     		.2byte	0x536
 4109 1e8c 3E       		.uleb128 0x3e
 4110 1e8d 94090000 		.4byte	.LASF428
 4111 1e91 94090000 		.4byte	.LASF428
 4112 1e95 04       		.byte	0x4
 4113 1e96 5605     		.2byte	0x556
 4114 1e98 3F       		.uleb128 0x3f
 4115 1e99 BB030000 		.4byte	.LASF429
 4116 1e9d BB030000 		.4byte	.LASF429
 4117 1ea1 03       		.byte	0x3
 4118 1ea2 5E       		.byte	0x5e
 4119 1ea3 3E       		.uleb128 0x3e
 4120 1ea4 7D0E0000 		.4byte	.LASF430
 4121 1ea8 7D0E0000 		.4byte	.LASF430
 4122 1eac 04       		.byte	0x4
 4123 1ead 3405     		.2byte	0x534
 4124 1eaf 40       		.uleb128 0x40
 4125 1eb0 84080000 		.4byte	.LASF447
 4126 1eb4 B90B0000 		.4byte	.LASF448
 4127 1eb8 1C       		.byte	0x1c
 4128 1eb9 00       		.byte	0
 4129 1eba 84080000 		.4byte	.LASF447
 4130 1ebe 3F       		.uleb128 0x3f
 4131 1ebf 0D080000 		.4byte	.LASF431
 4132 1ec3 0D080000 		.4byte	.LASF431
 4133 1ec7 03       		.byte	0x3
 4134 1ec8 57       		.byte	0x57
 4135 1ec9 3F       		.uleb128 0x3f
 4136 1eca A2050000 		.4byte	.LASF432
 4137 1ece A2050000 		.4byte	.LASF432
 4138 1ed2 03       		.byte	0x3
 4139 1ed3 5A       		.byte	0x5a
 4140 1ed4 3E       		.uleb128 0x3e
 4141 1ed5 E5130000 		.4byte	.LASF433
 4142 1ed9 E5130000 		.4byte	.LASF433
 4143 1edd 0E       		.byte	0xe
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 154


 4144 1ede 8A03     		.2byte	0x38a
 4145 1ee0 3F       		.uleb128 0x3f
 4146 1ee1 95110000 		.4byte	.LASF434
 4147 1ee5 95110000 		.4byte	.LASF434
 4148 1ee9 15       		.byte	0x15
 4149 1eea BA       		.byte	0xba
 4150 1eeb 3F       		.uleb128 0x3f
 4151 1eec D9060000 		.4byte	.LASF435
 4152 1ef0 D9060000 		.4byte	.LASF435
 4153 1ef4 17       		.byte	0x17
 4154 1ef5 31       		.byte	0x31
 4155 1ef6 3F       		.uleb128 0x3f
 4156 1ef7 69020000 		.4byte	.LASF436
 4157 1efb 69020000 		.4byte	.LASF436
 4158 1eff 18       		.byte	0x18
 4159 1f00 3A       		.byte	0x3a
 4160 1f01 3F       		.uleb128 0x3f
 4161 1f02 7F000000 		.4byte	.LASF437
 4162 1f06 7F000000 		.4byte	.LASF437
 4163 1f0a 19       		.byte	0x19
 4164 1f0b B6       		.byte	0xb6
 4165 1f0c 3F       		.uleb128 0x3f
 4166 1f0d EB0C0000 		.4byte	.LASF438
 4167 1f11 EB0C0000 		.4byte	.LASF438
 4168 1f15 19       		.byte	0x19
 4169 1f16 BB       		.byte	0xbb
 4170 1f17 3F       		.uleb128 0x3f
 4171 1f18 7E150000 		.4byte	.LASF439
 4172 1f1c 7E150000 		.4byte	.LASF439
 4173 1f20 1A       		.byte	0x1a
 4174 1f21 55       		.byte	0x55
 4175 1f22 3F       		.uleb128 0x3f
 4176 1f23 83030000 		.4byte	.LASF440
 4177 1f27 83030000 		.4byte	.LASF440
 4178 1f2b 1A       		.byte	0x1a
 4179 1f2c 56       		.byte	0x56
 4180 1f2d 3F       		.uleb128 0x3f
 4181 1f2e 2C0E0000 		.4byte	.LASF441
 4182 1f32 2C0E0000 		.4byte	.LASF441
 4183 1f36 18       		.byte	0x18
 4184 1f37 3E       		.byte	0x3e
 4185 1f38 3E       		.uleb128 0x3e
 4186 1f39 F6000000 		.4byte	.LASF442
 4187 1f3d F6000000 		.4byte	.LASF442
 4188 1f41 1B       		.byte	0x1b
 4189 1f42 ED03     		.2byte	0x3ed
 4190 1f44 00       		.byte	0
 4191              		.section	.debug_abbrev,"",%progbits
 4192              	.Ldebug_abbrev0:
 4193 0000 01       		.uleb128 0x1
 4194 0001 11       		.uleb128 0x11
 4195 0002 01       		.byte	0x1
 4196 0003 25       		.uleb128 0x25
 4197 0004 0E       		.uleb128 0xe
 4198 0005 13       		.uleb128 0x13
 4199 0006 0B       		.uleb128 0xb
 4200 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 155


 4201 0008 0E       		.uleb128 0xe
 4202 0009 1B       		.uleb128 0x1b
 4203 000a 0E       		.uleb128 0xe
 4204 000b 55       		.uleb128 0x55
 4205 000c 17       		.uleb128 0x17
 4206 000d 11       		.uleb128 0x11
 4207 000e 01       		.uleb128 0x1
 4208 000f 10       		.uleb128 0x10
 4209 0010 17       		.uleb128 0x17
 4210 0011 00       		.byte	0
 4211 0012 00       		.byte	0
 4212 0013 02       		.uleb128 0x2
 4213 0014 24       		.uleb128 0x24
 4214 0015 00       		.byte	0
 4215 0016 0B       		.uleb128 0xb
 4216 0017 0B       		.uleb128 0xb
 4217 0018 3E       		.uleb128 0x3e
 4218 0019 0B       		.uleb128 0xb
 4219 001a 03       		.uleb128 0x3
 4220 001b 0E       		.uleb128 0xe
 4221 001c 00       		.byte	0
 4222 001d 00       		.byte	0
 4223 001e 03       		.uleb128 0x3
 4224 001f 16       		.uleb128 0x16
 4225 0020 00       		.byte	0
 4226 0021 03       		.uleb128 0x3
 4227 0022 0E       		.uleb128 0xe
 4228 0023 3A       		.uleb128 0x3a
 4229 0024 0B       		.uleb128 0xb
 4230 0025 3B       		.uleb128 0x3b
 4231 0026 0B       		.uleb128 0xb
 4232 0027 49       		.uleb128 0x49
 4233 0028 13       		.uleb128 0x13
 4234 0029 00       		.byte	0
 4235 002a 00       		.byte	0
 4236 002b 04       		.uleb128 0x4
 4237 002c 24       		.uleb128 0x24
 4238 002d 00       		.byte	0
 4239 002e 0B       		.uleb128 0xb
 4240 002f 0B       		.uleb128 0xb
 4241 0030 3E       		.uleb128 0x3e
 4242 0031 0B       		.uleb128 0xb
 4243 0032 03       		.uleb128 0x3
 4244 0033 08       		.uleb128 0x8
 4245 0034 00       		.byte	0
 4246 0035 00       		.byte	0
 4247 0036 05       		.uleb128 0x5
 4248 0037 35       		.uleb128 0x35
 4249 0038 00       		.byte	0
 4250 0039 49       		.uleb128 0x49
 4251 003a 13       		.uleb128 0x13
 4252 003b 00       		.byte	0
 4253 003c 00       		.byte	0
 4254 003d 06       		.uleb128 0x6
 4255 003e 26       		.uleb128 0x26
 4256 003f 00       		.byte	0
 4257 0040 49       		.uleb128 0x49
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 156


 4258 0041 13       		.uleb128 0x13
 4259 0042 00       		.byte	0
 4260 0043 00       		.byte	0
 4261 0044 07       		.uleb128 0x7
 4262 0045 01       		.uleb128 0x1
 4263 0046 01       		.byte	0x1
 4264 0047 49       		.uleb128 0x49
 4265 0048 13       		.uleb128 0x13
 4266 0049 01       		.uleb128 0x1
 4267 004a 13       		.uleb128 0x13
 4268 004b 00       		.byte	0
 4269 004c 00       		.byte	0
 4270 004d 08       		.uleb128 0x8
 4271 004e 21       		.uleb128 0x21
 4272 004f 00       		.byte	0
 4273 0050 49       		.uleb128 0x49
 4274 0051 13       		.uleb128 0x13
 4275 0052 2F       		.uleb128 0x2f
 4276 0053 0B       		.uleb128 0xb
 4277 0054 00       		.byte	0
 4278 0055 00       		.byte	0
 4279 0056 09       		.uleb128 0x9
 4280 0057 13       		.uleb128 0x13
 4281 0058 01       		.byte	0x1
 4282 0059 0B       		.uleb128 0xb
 4283 005a 0B       		.uleb128 0xb
 4284 005b 3A       		.uleb128 0x3a
 4285 005c 0B       		.uleb128 0xb
 4286 005d 3B       		.uleb128 0x3b
 4287 005e 0B       		.uleb128 0xb
 4288 005f 01       		.uleb128 0x1
 4289 0060 13       		.uleb128 0x13
 4290 0061 00       		.byte	0
 4291 0062 00       		.byte	0
 4292 0063 0A       		.uleb128 0xa
 4293 0064 0D       		.uleb128 0xd
 4294 0065 00       		.byte	0
 4295 0066 03       		.uleb128 0x3
 4296 0067 08       		.uleb128 0x8
 4297 0068 3A       		.uleb128 0x3a
 4298 0069 0B       		.uleb128 0xb
 4299 006a 3B       		.uleb128 0x3b
 4300 006b 0B       		.uleb128 0xb
 4301 006c 49       		.uleb128 0x49
 4302 006d 13       		.uleb128 0x13
 4303 006e 38       		.uleb128 0x38
 4304 006f 0B       		.uleb128 0xb
 4305 0070 00       		.byte	0
 4306 0071 00       		.byte	0
 4307 0072 0B       		.uleb128 0xb
 4308 0073 0D       		.uleb128 0xd
 4309 0074 00       		.byte	0
 4310 0075 03       		.uleb128 0x3
 4311 0076 0E       		.uleb128 0xe
 4312 0077 3A       		.uleb128 0x3a
 4313 0078 0B       		.uleb128 0xb
 4314 0079 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 157


 4315 007a 0B       		.uleb128 0xb
 4316 007b 49       		.uleb128 0x49
 4317 007c 13       		.uleb128 0x13
 4318 007d 38       		.uleb128 0x38
 4319 007e 0B       		.uleb128 0xb
 4320 007f 00       		.byte	0
 4321 0080 00       		.byte	0
 4322 0081 0C       		.uleb128 0xc
 4323 0082 13       		.uleb128 0x13
 4324 0083 01       		.byte	0x1
 4325 0084 0B       		.uleb128 0xb
 4326 0085 05       		.uleb128 0x5
 4327 0086 3A       		.uleb128 0x3a
 4328 0087 0B       		.uleb128 0xb
 4329 0088 3B       		.uleb128 0x3b
 4330 0089 0B       		.uleb128 0xb
 4331 008a 01       		.uleb128 0x1
 4332 008b 13       		.uleb128 0x13
 4333 008c 00       		.byte	0
 4334 008d 00       		.byte	0
 4335 008e 0D       		.uleb128 0xd
 4336 008f 0D       		.uleb128 0xd
 4337 0090 00       		.byte	0
 4338 0091 03       		.uleb128 0x3
 4339 0092 0E       		.uleb128 0xe
 4340 0093 3A       		.uleb128 0x3a
 4341 0094 0B       		.uleb128 0xb
 4342 0095 3B       		.uleb128 0x3b
 4343 0096 0B       		.uleb128 0xb
 4344 0097 49       		.uleb128 0x49
 4345 0098 13       		.uleb128 0x13
 4346 0099 38       		.uleb128 0x38
 4347 009a 05       		.uleb128 0x5
 4348 009b 00       		.byte	0
 4349 009c 00       		.byte	0
 4350 009d 0E       		.uleb128 0xe
 4351 009e 21       		.uleb128 0x21
 4352 009f 00       		.byte	0
 4353 00a0 49       		.uleb128 0x49
 4354 00a1 13       		.uleb128 0x13
 4355 00a2 2F       		.uleb128 0x2f
 4356 00a3 05       		.uleb128 0x5
 4357 00a4 00       		.byte	0
 4358 00a5 00       		.byte	0
 4359 00a6 0F       		.uleb128 0xf
 4360 00a7 16       		.uleb128 0x16
 4361 00a8 00       		.byte	0
 4362 00a9 03       		.uleb128 0x3
 4363 00aa 0E       		.uleb128 0xe
 4364 00ab 3A       		.uleb128 0x3a
 4365 00ac 0B       		.uleb128 0xb
 4366 00ad 3B       		.uleb128 0x3b
 4367 00ae 05       		.uleb128 0x5
 4368 00af 49       		.uleb128 0x49
 4369 00b0 13       		.uleb128 0x13
 4370 00b1 00       		.byte	0
 4371 00b2 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 158


 4372 00b3 10       		.uleb128 0x10
 4373 00b4 0F       		.uleb128 0xf
 4374 00b5 00       		.byte	0
 4375 00b6 0B       		.uleb128 0xb
 4376 00b7 0B       		.uleb128 0xb
 4377 00b8 49       		.uleb128 0x49
 4378 00b9 13       		.uleb128 0x13
 4379 00ba 00       		.byte	0
 4380 00bb 00       		.byte	0
 4381 00bc 11       		.uleb128 0x11
 4382 00bd 15       		.uleb128 0x15
 4383 00be 00       		.byte	0
 4384 00bf 27       		.uleb128 0x27
 4385 00c0 19       		.uleb128 0x19
 4386 00c1 00       		.byte	0
 4387 00c2 00       		.byte	0
 4388 00c3 12       		.uleb128 0x12
 4389 00c4 0F       		.uleb128 0xf
 4390 00c5 00       		.byte	0
 4391 00c6 0B       		.uleb128 0xb
 4392 00c7 0B       		.uleb128 0xb
 4393 00c8 00       		.byte	0
 4394 00c9 00       		.byte	0
 4395 00ca 13       		.uleb128 0x13
 4396 00cb 04       		.uleb128 0x4
 4397 00cc 01       		.byte	0x1
 4398 00cd 0B       		.uleb128 0xb
 4399 00ce 0B       		.uleb128 0xb
 4400 00cf 49       		.uleb128 0x49
 4401 00d0 13       		.uleb128 0x13
 4402 00d1 3A       		.uleb128 0x3a
 4403 00d2 0B       		.uleb128 0xb
 4404 00d3 3B       		.uleb128 0x3b
 4405 00d4 05       		.uleb128 0x5
 4406 00d5 01       		.uleb128 0x1
 4407 00d6 13       		.uleb128 0x13
 4408 00d7 00       		.byte	0
 4409 00d8 00       		.byte	0
 4410 00d9 14       		.uleb128 0x14
 4411 00da 28       		.uleb128 0x28
 4412 00db 00       		.byte	0
 4413 00dc 03       		.uleb128 0x3
 4414 00dd 0E       		.uleb128 0xe
 4415 00de 1C       		.uleb128 0x1c
 4416 00df 0B       		.uleb128 0xb
 4417 00e0 00       		.byte	0
 4418 00e1 00       		.byte	0
 4419 00e2 15       		.uleb128 0x15
 4420 00e3 28       		.uleb128 0x28
 4421 00e4 00       		.byte	0
 4422 00e5 03       		.uleb128 0x3
 4423 00e6 0E       		.uleb128 0xe
 4424 00e7 1C       		.uleb128 0x1c
 4425 00e8 06       		.uleb128 0x6
 4426 00e9 00       		.byte	0
 4427 00ea 00       		.byte	0
 4428 00eb 16       		.uleb128 0x16
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 159


 4429 00ec 28       		.uleb128 0x28
 4430 00ed 00       		.byte	0
 4431 00ee 03       		.uleb128 0x3
 4432 00ef 0E       		.uleb128 0xe
 4433 00f0 1C       		.uleb128 0x1c
 4434 00f1 05       		.uleb128 0x5
 4435 00f2 00       		.byte	0
 4436 00f3 00       		.byte	0
 4437 00f4 17       		.uleb128 0x17
 4438 00f5 13       		.uleb128 0x13
 4439 00f6 01       		.byte	0x1
 4440 00f7 0B       		.uleb128 0xb
 4441 00f8 0B       		.uleb128 0xb
 4442 00f9 3A       		.uleb128 0x3a
 4443 00fa 0B       		.uleb128 0xb
 4444 00fb 3B       		.uleb128 0x3b
 4445 00fc 05       		.uleb128 0x5
 4446 00fd 01       		.uleb128 0x1
 4447 00fe 13       		.uleb128 0x13
 4448 00ff 00       		.byte	0
 4449 0100 00       		.byte	0
 4450 0101 18       		.uleb128 0x18
 4451 0102 0D       		.uleb128 0xd
 4452 0103 00       		.byte	0
 4453 0104 03       		.uleb128 0x3
 4454 0105 0E       		.uleb128 0xe
 4455 0106 3A       		.uleb128 0x3a
 4456 0107 0B       		.uleb128 0xb
 4457 0108 3B       		.uleb128 0x3b
 4458 0109 05       		.uleb128 0x5
 4459 010a 49       		.uleb128 0x49
 4460 010b 13       		.uleb128 0x13
 4461 010c 38       		.uleb128 0x38
 4462 010d 0B       		.uleb128 0xb
 4463 010e 00       		.byte	0
 4464 010f 00       		.byte	0
 4465 0110 19       		.uleb128 0x19
 4466 0111 15       		.uleb128 0x15
 4467 0112 01       		.byte	0x1
 4468 0113 27       		.uleb128 0x27
 4469 0114 19       		.uleb128 0x19
 4470 0115 01       		.uleb128 0x1
 4471 0116 13       		.uleb128 0x13
 4472 0117 00       		.byte	0
 4473 0118 00       		.byte	0
 4474 0119 1A       		.uleb128 0x1a
 4475 011a 05       		.uleb128 0x5
 4476 011b 00       		.byte	0
 4477 011c 49       		.uleb128 0x49
 4478 011d 13       		.uleb128 0x13
 4479 011e 00       		.byte	0
 4480 011f 00       		.byte	0
 4481 0120 1B       		.uleb128 0x1b
 4482 0121 13       		.uleb128 0x13
 4483 0122 01       		.byte	0x1
 4484 0123 03       		.uleb128 0x3
 4485 0124 0E       		.uleb128 0xe
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 160


 4486 0125 0B       		.uleb128 0xb
 4487 0126 0B       		.uleb128 0xb
 4488 0127 3A       		.uleb128 0x3a
 4489 0128 0B       		.uleb128 0xb
 4490 0129 3B       		.uleb128 0x3b
 4491 012a 05       		.uleb128 0x5
 4492 012b 01       		.uleb128 0x1
 4493 012c 13       		.uleb128 0x13
 4494 012d 00       		.byte	0
 4495 012e 00       		.byte	0
 4496 012f 1C       		.uleb128 0x1c
 4497 0130 17       		.uleb128 0x17
 4498 0131 01       		.byte	0x1
 4499 0132 0B       		.uleb128 0xb
 4500 0133 0B       		.uleb128 0xb
 4501 0134 3A       		.uleb128 0x3a
 4502 0135 0B       		.uleb128 0xb
 4503 0136 3B       		.uleb128 0x3b
 4504 0137 0B       		.uleb128 0xb
 4505 0138 01       		.uleb128 0x1
 4506 0139 13       		.uleb128 0x13
 4507 013a 00       		.byte	0
 4508 013b 00       		.byte	0
 4509 013c 1D       		.uleb128 0x1d
 4510 013d 0D       		.uleb128 0xd
 4511 013e 00       		.byte	0
 4512 013f 03       		.uleb128 0x3
 4513 0140 0E       		.uleb128 0xe
 4514 0141 3A       		.uleb128 0x3a
 4515 0142 0B       		.uleb128 0xb
 4516 0143 3B       		.uleb128 0x3b
 4517 0144 0B       		.uleb128 0xb
 4518 0145 49       		.uleb128 0x49
 4519 0146 13       		.uleb128 0x13
 4520 0147 00       		.byte	0
 4521 0148 00       		.byte	0
 4522 0149 1E       		.uleb128 0x1e
 4523 014a 13       		.uleb128 0x13
 4524 014b 01       		.byte	0x1
 4525 014c 03       		.uleb128 0x3
 4526 014d 0E       		.uleb128 0xe
 4527 014e 0B       		.uleb128 0xb
 4528 014f 0B       		.uleb128 0xb
 4529 0150 3A       		.uleb128 0x3a
 4530 0151 0B       		.uleb128 0xb
 4531 0152 3B       		.uleb128 0x3b
 4532 0153 0B       		.uleb128 0xb
 4533 0154 01       		.uleb128 0x1
 4534 0155 13       		.uleb128 0x13
 4535 0156 00       		.byte	0
 4536 0157 00       		.byte	0
 4537 0158 1F       		.uleb128 0x1f
 4538 0159 13       		.uleb128 0x13
 4539 015a 01       		.byte	0x1
 4540 015b 03       		.uleb128 0x3
 4541 015c 0E       		.uleb128 0xe
 4542 015d 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 161


 4543 015e 05       		.uleb128 0x5
 4544 015f 3A       		.uleb128 0x3a
 4545 0160 0B       		.uleb128 0xb
 4546 0161 3B       		.uleb128 0x3b
 4547 0162 0B       		.uleb128 0xb
 4548 0163 01       		.uleb128 0x1
 4549 0164 13       		.uleb128 0x13
 4550 0165 00       		.byte	0
 4551 0166 00       		.byte	0
 4552 0167 20       		.uleb128 0x20
 4553 0168 15       		.uleb128 0x15
 4554 0169 01       		.byte	0x1
 4555 016a 27       		.uleb128 0x27
 4556 016b 19       		.uleb128 0x19
 4557 016c 49       		.uleb128 0x49
 4558 016d 13       		.uleb128 0x13
 4559 016e 01       		.uleb128 0x1
 4560 016f 13       		.uleb128 0x13
 4561 0170 00       		.byte	0
 4562 0171 00       		.byte	0
 4563 0172 21       		.uleb128 0x21
 4564 0173 13       		.uleb128 0x13
 4565 0174 01       		.byte	0x1
 4566 0175 03       		.uleb128 0x3
 4567 0176 0E       		.uleb128 0xe
 4568 0177 0B       		.uleb128 0xb
 4569 0178 05       		.uleb128 0x5
 4570 0179 3A       		.uleb128 0x3a
 4571 017a 0B       		.uleb128 0xb
 4572 017b 3B       		.uleb128 0x3b
 4573 017c 05       		.uleb128 0x5
 4574 017d 01       		.uleb128 0x1
 4575 017e 13       		.uleb128 0x13
 4576 017f 00       		.byte	0
 4577 0180 00       		.byte	0
 4578 0181 22       		.uleb128 0x22
 4579 0182 0D       		.uleb128 0xd
 4580 0183 00       		.byte	0
 4581 0184 03       		.uleb128 0x3
 4582 0185 0E       		.uleb128 0xe
 4583 0186 3A       		.uleb128 0x3a
 4584 0187 0B       		.uleb128 0xb
 4585 0188 3B       		.uleb128 0x3b
 4586 0189 05       		.uleb128 0x5
 4587 018a 49       		.uleb128 0x49
 4588 018b 13       		.uleb128 0x13
 4589 018c 38       		.uleb128 0x38
 4590 018d 05       		.uleb128 0x5
 4591 018e 00       		.byte	0
 4592 018f 00       		.byte	0
 4593 0190 23       		.uleb128 0x23
 4594 0191 17       		.uleb128 0x17
 4595 0192 01       		.byte	0x1
 4596 0193 0B       		.uleb128 0xb
 4597 0194 0B       		.uleb128 0xb
 4598 0195 3A       		.uleb128 0x3a
 4599 0196 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 162


 4600 0197 3B       		.uleb128 0x3b
 4601 0198 05       		.uleb128 0x5
 4602 0199 01       		.uleb128 0x1
 4603 019a 13       		.uleb128 0x13
 4604 019b 00       		.byte	0
 4605 019c 00       		.byte	0
 4606 019d 24       		.uleb128 0x24
 4607 019e 0D       		.uleb128 0xd
 4608 019f 00       		.byte	0
 4609 01a0 03       		.uleb128 0x3
 4610 01a1 0E       		.uleb128 0xe
 4611 01a2 3A       		.uleb128 0x3a
 4612 01a3 0B       		.uleb128 0xb
 4613 01a4 3B       		.uleb128 0x3b
 4614 01a5 05       		.uleb128 0x5
 4615 01a6 49       		.uleb128 0x49
 4616 01a7 13       		.uleb128 0x13
 4617 01a8 00       		.byte	0
 4618 01a9 00       		.byte	0
 4619 01aa 25       		.uleb128 0x25
 4620 01ab 2E       		.uleb128 0x2e
 4621 01ac 01       		.byte	0x1
 4622 01ad 03       		.uleb128 0x3
 4623 01ae 0E       		.uleb128 0xe
 4624 01af 3A       		.uleb128 0x3a
 4625 01b0 0B       		.uleb128 0xb
 4626 01b1 3B       		.uleb128 0x3b
 4627 01b2 05       		.uleb128 0x5
 4628 01b3 27       		.uleb128 0x27
 4629 01b4 19       		.uleb128 0x19
 4630 01b5 20       		.uleb128 0x20
 4631 01b6 0B       		.uleb128 0xb
 4632 01b7 01       		.uleb128 0x1
 4633 01b8 13       		.uleb128 0x13
 4634 01b9 00       		.byte	0
 4635 01ba 00       		.byte	0
 4636 01bb 26       		.uleb128 0x26
 4637 01bc 05       		.uleb128 0x5
 4638 01bd 00       		.byte	0
 4639 01be 03       		.uleb128 0x3
 4640 01bf 0E       		.uleb128 0xe
 4641 01c0 3A       		.uleb128 0x3a
 4642 01c1 0B       		.uleb128 0xb
 4643 01c2 3B       		.uleb128 0x3b
 4644 01c3 05       		.uleb128 0x5
 4645 01c4 49       		.uleb128 0x49
 4646 01c5 13       		.uleb128 0x13
 4647 01c6 00       		.byte	0
 4648 01c7 00       		.byte	0
 4649 01c8 27       		.uleb128 0x27
 4650 01c9 2E       		.uleb128 0x2e
 4651 01ca 00       		.byte	0
 4652 01cb 03       		.uleb128 0x3
 4653 01cc 0E       		.uleb128 0xe
 4654 01cd 3A       		.uleb128 0x3a
 4655 01ce 0B       		.uleb128 0xb
 4656 01cf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 163


 4657 01d0 05       		.uleb128 0x5
 4658 01d1 27       		.uleb128 0x27
 4659 01d2 19       		.uleb128 0x19
 4660 01d3 20       		.uleb128 0x20
 4661 01d4 0B       		.uleb128 0xb
 4662 01d5 00       		.byte	0
 4663 01d6 00       		.byte	0
 4664 01d7 28       		.uleb128 0x28
 4665 01d8 2E       		.uleb128 0x2e
 4666 01d9 00       		.byte	0
 4667 01da 03       		.uleb128 0x3
 4668 01db 0E       		.uleb128 0xe
 4669 01dc 3A       		.uleb128 0x3a
 4670 01dd 0B       		.uleb128 0xb
 4671 01de 3B       		.uleb128 0x3b
 4672 01df 0B       		.uleb128 0xb
 4673 01e0 27       		.uleb128 0x27
 4674 01e1 19       		.uleb128 0x19
 4675 01e2 20       		.uleb128 0x20
 4676 01e3 0B       		.uleb128 0xb
 4677 01e4 00       		.byte	0
 4678 01e5 00       		.byte	0
 4679 01e6 29       		.uleb128 0x29
 4680 01e7 2E       		.uleb128 0x2e
 4681 01e8 01       		.byte	0x1
 4682 01e9 03       		.uleb128 0x3
 4683 01ea 0E       		.uleb128 0xe
 4684 01eb 3A       		.uleb128 0x3a
 4685 01ec 0B       		.uleb128 0xb
 4686 01ed 3B       		.uleb128 0x3b
 4687 01ee 05       		.uleb128 0x5
 4688 01ef 27       		.uleb128 0x27
 4689 01f0 19       		.uleb128 0x19
 4690 01f1 49       		.uleb128 0x49
 4691 01f2 13       		.uleb128 0x13
 4692 01f3 20       		.uleb128 0x20
 4693 01f4 0B       		.uleb128 0xb
 4694 01f5 01       		.uleb128 0x1
 4695 01f6 13       		.uleb128 0x13
 4696 01f7 00       		.byte	0
 4697 01f8 00       		.byte	0
 4698 01f9 2A       		.uleb128 0x2a
 4699 01fa 2E       		.uleb128 0x2e
 4700 01fb 01       		.byte	0x1
 4701 01fc 3F       		.uleb128 0x3f
 4702 01fd 19       		.uleb128 0x19
 4703 01fe 03       		.uleb128 0x3
 4704 01ff 0E       		.uleb128 0xe
 4705 0200 3A       		.uleb128 0x3a
 4706 0201 0B       		.uleb128 0xb
 4707 0202 3B       		.uleb128 0x3b
 4708 0203 0B       		.uleb128 0xb
 4709 0204 49       		.uleb128 0x49
 4710 0205 13       		.uleb128 0x13
 4711 0206 11       		.uleb128 0x11
 4712 0207 01       		.uleb128 0x1
 4713 0208 12       		.uleb128 0x12
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 164


 4714 0209 06       		.uleb128 0x6
 4715 020a 40       		.uleb128 0x40
 4716 020b 18       		.uleb128 0x18
 4717 020c 9742     		.uleb128 0x2117
 4718 020e 19       		.uleb128 0x19
 4719 020f 01       		.uleb128 0x1
 4720 0210 13       		.uleb128 0x13
 4721 0211 00       		.byte	0
 4722 0212 00       		.byte	0
 4723 0213 2B       		.uleb128 0x2b
 4724 0214 1D       		.uleb128 0x1d
 4725 0215 01       		.byte	0x1
 4726 0216 31       		.uleb128 0x31
 4727 0217 13       		.uleb128 0x13
 4728 0218 11       		.uleb128 0x11
 4729 0219 01       		.uleb128 0x1
 4730 021a 12       		.uleb128 0x12
 4731 021b 06       		.uleb128 0x6
 4732 021c 58       		.uleb128 0x58
 4733 021d 0B       		.uleb128 0xb
 4734 021e 59       		.uleb128 0x59
 4735 021f 0B       		.uleb128 0xb
 4736 0220 01       		.uleb128 0x1
 4737 0221 13       		.uleb128 0x13
 4738 0222 00       		.byte	0
 4739 0223 00       		.byte	0
 4740 0224 2C       		.uleb128 0x2c
 4741 0225 05       		.uleb128 0x5
 4742 0226 00       		.byte	0
 4743 0227 31       		.uleb128 0x31
 4744 0228 13       		.uleb128 0x13
 4745 0229 02       		.uleb128 0x2
 4746 022a 17       		.uleb128 0x17
 4747 022b 00       		.byte	0
 4748 022c 00       		.byte	0
 4749 022d 2D       		.uleb128 0x2d
 4750 022e 0B       		.uleb128 0xb
 4751 022f 01       		.byte	0x1
 4752 0230 11       		.uleb128 0x11
 4753 0231 01       		.uleb128 0x1
 4754 0232 12       		.uleb128 0x12
 4755 0233 06       		.uleb128 0x6
 4756 0234 01       		.uleb128 0x1
 4757 0235 13       		.uleb128 0x13
 4758 0236 00       		.byte	0
 4759 0237 00       		.byte	0
 4760 0238 2E       		.uleb128 0x2e
 4761 0239 34       		.uleb128 0x34
 4762 023a 00       		.byte	0
 4763 023b 03       		.uleb128 0x3
 4764 023c 08       		.uleb128 0x8
 4765 023d 3A       		.uleb128 0x3a
 4766 023e 0B       		.uleb128 0xb
 4767 023f 3B       		.uleb128 0x3b
 4768 0240 0B       		.uleb128 0xb
 4769 0241 49       		.uleb128 0x49
 4770 0242 13       		.uleb128 0x13
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 165


 4771 0243 02       		.uleb128 0x2
 4772 0244 17       		.uleb128 0x17
 4773 0245 00       		.byte	0
 4774 0246 00       		.byte	0
 4775 0247 2F       		.uleb128 0x2f
 4776 0248 0B       		.uleb128 0xb
 4777 0249 01       		.byte	0x1
 4778 024a 11       		.uleb128 0x11
 4779 024b 01       		.uleb128 0x1
 4780 024c 12       		.uleb128 0x12
 4781 024d 06       		.uleb128 0x6
 4782 024e 00       		.byte	0
 4783 024f 00       		.byte	0
 4784 0250 30       		.uleb128 0x30
 4785 0251 34       		.uleb128 0x34
 4786 0252 00       		.byte	0
 4787 0253 03       		.uleb128 0x3
 4788 0254 0E       		.uleb128 0xe
 4789 0255 3A       		.uleb128 0x3a
 4790 0256 0B       		.uleb128 0xb
 4791 0257 3B       		.uleb128 0x3b
 4792 0258 0B       		.uleb128 0xb
 4793 0259 49       		.uleb128 0x49
 4794 025a 13       		.uleb128 0x13
 4795 025b 00       		.byte	0
 4796 025c 00       		.byte	0
 4797 025d 31       		.uleb128 0x31
 4798 025e 898201   		.uleb128 0x4109
 4799 0261 01       		.byte	0x1
 4800 0262 11       		.uleb128 0x11
 4801 0263 01       		.uleb128 0x1
 4802 0264 31       		.uleb128 0x31
 4803 0265 13       		.uleb128 0x13
 4804 0266 01       		.uleb128 0x1
 4805 0267 13       		.uleb128 0x13
 4806 0268 00       		.byte	0
 4807 0269 00       		.byte	0
 4808 026a 32       		.uleb128 0x32
 4809 026b 8A8201   		.uleb128 0x410a
 4810 026e 00       		.byte	0
 4811 026f 02       		.uleb128 0x2
 4812 0270 18       		.uleb128 0x18
 4813 0271 9142     		.uleb128 0x2111
 4814 0273 18       		.uleb128 0x18
 4815 0274 00       		.byte	0
 4816 0275 00       		.byte	0
 4817 0276 33       		.uleb128 0x33
 4818 0277 898201   		.uleb128 0x4109
 4819 027a 01       		.byte	0x1
 4820 027b 11       		.uleb128 0x11
 4821 027c 01       		.uleb128 0x1
 4822 027d 31       		.uleb128 0x31
 4823 027e 13       		.uleb128 0x13
 4824 027f 00       		.byte	0
 4825 0280 00       		.byte	0
 4826 0281 34       		.uleb128 0x34
 4827 0282 05       		.uleb128 0x5
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 166


 4828 0283 00       		.byte	0
 4829 0284 31       		.uleb128 0x31
 4830 0285 13       		.uleb128 0x13
 4831 0286 00       		.byte	0
 4832 0287 00       		.byte	0
 4833 0288 35       		.uleb128 0x35
 4834 0289 1D       		.uleb128 0x1d
 4835 028a 01       		.byte	0x1
 4836 028b 31       		.uleb128 0x31
 4837 028c 13       		.uleb128 0x13
 4838 028d 11       		.uleb128 0x11
 4839 028e 01       		.uleb128 0x1
 4840 028f 12       		.uleb128 0x12
 4841 0290 06       		.uleb128 0x6
 4842 0291 58       		.uleb128 0x58
 4843 0292 0B       		.uleb128 0xb
 4844 0293 59       		.uleb128 0x59
 4845 0294 05       		.uleb128 0x5
 4846 0295 00       		.byte	0
 4847 0296 00       		.byte	0
 4848 0297 36       		.uleb128 0x36
 4849 0298 898201   		.uleb128 0x4109
 4850 029b 00       		.byte	0
 4851 029c 11       		.uleb128 0x11
 4852 029d 01       		.uleb128 0x1
 4853 029e 31       		.uleb128 0x31
 4854 029f 13       		.uleb128 0x13
 4855 02a0 00       		.byte	0
 4856 02a1 00       		.byte	0
 4857 02a2 37       		.uleb128 0x37
 4858 02a3 34       		.uleb128 0x34
 4859 02a4 00       		.byte	0
 4860 02a5 03       		.uleb128 0x3
 4861 02a6 0E       		.uleb128 0xe
 4862 02a7 3A       		.uleb128 0x3a
 4863 02a8 0B       		.uleb128 0xb
 4864 02a9 3B       		.uleb128 0x3b
 4865 02aa 0B       		.uleb128 0xb
 4866 02ab 49       		.uleb128 0x49
 4867 02ac 13       		.uleb128 0x13
 4868 02ad 02       		.uleb128 0x2
 4869 02ae 17       		.uleb128 0x17
 4870 02af 00       		.byte	0
 4871 02b0 00       		.byte	0
 4872 02b1 38       		.uleb128 0x38
 4873 02b2 2E       		.uleb128 0x2e
 4874 02b3 01       		.byte	0x1
 4875 02b4 3F       		.uleb128 0x3f
 4876 02b5 19       		.uleb128 0x19
 4877 02b6 03       		.uleb128 0x3
 4878 02b7 0E       		.uleb128 0xe
 4879 02b8 3A       		.uleb128 0x3a
 4880 02b9 0B       		.uleb128 0xb
 4881 02ba 3B       		.uleb128 0x3b
 4882 02bb 0B       		.uleb128 0xb
 4883 02bc 27       		.uleb128 0x27
 4884 02bd 19       		.uleb128 0x19
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 167


 4885 02be 49       		.uleb128 0x49
 4886 02bf 13       		.uleb128 0x13
 4887 02c0 8701     		.uleb128 0x87
 4888 02c2 19       		.uleb128 0x19
 4889 02c3 11       		.uleb128 0x11
 4890 02c4 01       		.uleb128 0x1
 4891 02c5 12       		.uleb128 0x12
 4892 02c6 06       		.uleb128 0x6
 4893 02c7 40       		.uleb128 0x40
 4894 02c8 18       		.uleb128 0x18
 4895 02c9 9742     		.uleb128 0x2117
 4896 02cb 19       		.uleb128 0x19
 4897 02cc 01       		.uleb128 0x1
 4898 02cd 13       		.uleb128 0x13
 4899 02ce 00       		.byte	0
 4900 02cf 00       		.byte	0
 4901 02d0 39       		.uleb128 0x39
 4902 02d1 1D       		.uleb128 0x1d
 4903 02d2 00       		.byte	0
 4904 02d3 31       		.uleb128 0x31
 4905 02d4 13       		.uleb128 0x13
 4906 02d5 11       		.uleb128 0x11
 4907 02d6 01       		.uleb128 0x1
 4908 02d7 12       		.uleb128 0x12
 4909 02d8 06       		.uleb128 0x6
 4910 02d9 58       		.uleb128 0x58
 4911 02da 0B       		.uleb128 0xb
 4912 02db 59       		.uleb128 0x59
 4913 02dc 0B       		.uleb128 0xb
 4914 02dd 00       		.byte	0
 4915 02de 00       		.byte	0
 4916 02df 3A       		.uleb128 0x3a
 4917 02e0 34       		.uleb128 0x34
 4918 02e1 00       		.byte	0
 4919 02e2 03       		.uleb128 0x3
 4920 02e3 0E       		.uleb128 0xe
 4921 02e4 3A       		.uleb128 0x3a
 4922 02e5 0B       		.uleb128 0xb
 4923 02e6 3B       		.uleb128 0x3b
 4924 02e7 05       		.uleb128 0x5
 4925 02e8 49       		.uleb128 0x49
 4926 02e9 13       		.uleb128 0x13
 4927 02ea 3F       		.uleb128 0x3f
 4928 02eb 19       		.uleb128 0x19
 4929 02ec 3C       		.uleb128 0x3c
 4930 02ed 19       		.uleb128 0x19
 4931 02ee 00       		.byte	0
 4932 02ef 00       		.byte	0
 4933 02f0 3B       		.uleb128 0x3b
 4934 02f1 34       		.uleb128 0x34
 4935 02f2 00       		.byte	0
 4936 02f3 03       		.uleb128 0x3
 4937 02f4 0E       		.uleb128 0xe
 4938 02f5 3A       		.uleb128 0x3a
 4939 02f6 0B       		.uleb128 0xb
 4940 02f7 3B       		.uleb128 0x3b
 4941 02f8 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 168


 4942 02f9 49       		.uleb128 0x49
 4943 02fa 13       		.uleb128 0x13
 4944 02fb 3F       		.uleb128 0x3f
 4945 02fc 19       		.uleb128 0x19
 4946 02fd 3C       		.uleb128 0x3c
 4947 02fe 19       		.uleb128 0x19
 4948 02ff 00       		.byte	0
 4949 0300 00       		.byte	0
 4950 0301 3C       		.uleb128 0x3c
 4951 0302 21       		.uleb128 0x21
 4952 0303 00       		.byte	0
 4953 0304 49       		.uleb128 0x49
 4954 0305 13       		.uleb128 0x13
 4955 0306 2F       		.uleb128 0x2f
 4956 0307 06       		.uleb128 0x6
 4957 0308 00       		.byte	0
 4958 0309 00       		.byte	0
 4959 030a 3D       		.uleb128 0x3d
 4960 030b 34       		.uleb128 0x34
 4961 030c 00       		.byte	0
 4962 030d 03       		.uleb128 0x3
 4963 030e 0E       		.uleb128 0xe
 4964 030f 3A       		.uleb128 0x3a
 4965 0310 0B       		.uleb128 0xb
 4966 0311 3B       		.uleb128 0x3b
 4967 0312 0B       		.uleb128 0xb
 4968 0313 49       		.uleb128 0x49
 4969 0314 13       		.uleb128 0x13
 4970 0315 3F       		.uleb128 0x3f
 4971 0316 19       		.uleb128 0x19
 4972 0317 02       		.uleb128 0x2
 4973 0318 18       		.uleb128 0x18
 4974 0319 00       		.byte	0
 4975 031a 00       		.byte	0
 4976 031b 3E       		.uleb128 0x3e
 4977 031c 2E       		.uleb128 0x2e
 4978 031d 00       		.byte	0
 4979 031e 3F       		.uleb128 0x3f
 4980 031f 19       		.uleb128 0x19
 4981 0320 3C       		.uleb128 0x3c
 4982 0321 19       		.uleb128 0x19
 4983 0322 6E       		.uleb128 0x6e
 4984 0323 0E       		.uleb128 0xe
 4985 0324 03       		.uleb128 0x3
 4986 0325 0E       		.uleb128 0xe
 4987 0326 3A       		.uleb128 0x3a
 4988 0327 0B       		.uleb128 0xb
 4989 0328 3B       		.uleb128 0x3b
 4990 0329 05       		.uleb128 0x5
 4991 032a 00       		.byte	0
 4992 032b 00       		.byte	0
 4993 032c 3F       		.uleb128 0x3f
 4994 032d 2E       		.uleb128 0x2e
 4995 032e 00       		.byte	0
 4996 032f 3F       		.uleb128 0x3f
 4997 0330 19       		.uleb128 0x19
 4998 0331 3C       		.uleb128 0x3c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 169


 4999 0332 19       		.uleb128 0x19
 5000 0333 6E       		.uleb128 0x6e
 5001 0334 0E       		.uleb128 0xe
 5002 0335 03       		.uleb128 0x3
 5003 0336 0E       		.uleb128 0xe
 5004 0337 3A       		.uleb128 0x3a
 5005 0338 0B       		.uleb128 0xb
 5006 0339 3B       		.uleb128 0x3b
 5007 033a 0B       		.uleb128 0xb
 5008 033b 00       		.byte	0
 5009 033c 00       		.byte	0
 5010 033d 40       		.uleb128 0x40
 5011 033e 2E       		.uleb128 0x2e
 5012 033f 00       		.byte	0
 5013 0340 3F       		.uleb128 0x3f
 5014 0341 19       		.uleb128 0x19
 5015 0342 3C       		.uleb128 0x3c
 5016 0343 19       		.uleb128 0x19
 5017 0344 6E       		.uleb128 0x6e
 5018 0345 0E       		.uleb128 0xe
 5019 0346 03       		.uleb128 0x3
 5020 0347 0E       		.uleb128 0xe
 5021 0348 3A       		.uleb128 0x3a
 5022 0349 0B       		.uleb128 0xb
 5023 034a 3B       		.uleb128 0x3b
 5024 034b 0B       		.uleb128 0xb
 5025 034c 6E       		.uleb128 0x6e
 5026 034d 0E       		.uleb128 0xe
 5027 034e 00       		.byte	0
 5028 034f 00       		.byte	0
 5029 0350 00       		.byte	0
 5030              		.section	.debug_loc,"",%progbits
 5031              	.Ldebug_loc0:
 5032              	.LLST0:
 5033 0000 02000000 		.4byte	.LVL0
 5034 0004 08000000 		.4byte	.LVL1
 5035 0008 0200     		.2byte	0x2
 5036 000a 30       		.byte	0x30
 5037 000b 9F       		.byte	0x9f
 5038 000c 00000000 		.4byte	0
 5039 0010 00000000 		.4byte	0
 5040              	.LLST1:
 5041 0014 02000000 		.4byte	.LVL0
 5042 0018 08000000 		.4byte	.LVL1
 5043 001c 0200     		.2byte	0x2
 5044 001e 31       		.byte	0x31
 5045 001f 9F       		.byte	0x9f
 5046 0020 00000000 		.4byte	0
 5047 0024 00000000 		.4byte	0
 5048              	.LLST2:
 5049 0028 02000000 		.4byte	.LVL0
 5050 002c 08000000 		.4byte	.LVL1
 5051 0030 0600     		.2byte	0x6
 5052 0032 0C       		.byte	0xc
 5053 0033 80053240 		.4byte	0x40320580
 5054 0037 9F       		.byte	0x9f
 5055 0038 00000000 		.4byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 170


 5056 003c 00000000 		.4byte	0
 5057              	.LLST3:
 5058 0040 16000000 		.4byte	.LVL4
 5059 0044 1A000000 		.4byte	.LVL5
 5060 0048 0200     		.2byte	0x2
 5061 004a 30       		.byte	0x30
 5062 004b 9F       		.byte	0x9f
 5063 004c 1A000000 		.4byte	.LVL5
 5064 0050 7C000000 		.4byte	.LVL13
 5065 0054 0100     		.2byte	0x1
 5066 0056 54       		.byte	0x54
 5067 0057 00000000 		.4byte	0
 5068 005b 00000000 		.4byte	0
 5069              	.LLST4:
 5070 005f 20000000 		.4byte	.LVL6
 5071 0063 46000000 		.4byte	.LVL9
 5072 0067 0200     		.2byte	0x2
 5073 0069 30       		.byte	0x30
 5074 006a 9F       		.byte	0x9f
 5075 006b 00000000 		.4byte	0
 5076 006f 00000000 		.4byte	0
 5077              	.LLST5:
 5078 0073 46000000 		.4byte	.LVL9
 5079 0077 6C000000 		.4byte	.LVL11
 5080 007b 0200     		.2byte	0x2
 5081 007d 30       		.byte	0x30
 5082 007e 9F       		.byte	0x9f
 5083 007f 00000000 		.4byte	0
 5084 0083 00000000 		.4byte	0
 5085              	.LLST6:
 5086 0087 82000000 		.4byte	.LVL14
 5087 008b 8A000000 		.4byte	.LVL15
 5088 008f 0600     		.2byte	0x6
 5089 0091 0C       		.byte	0xc
 5090 0092 00001D41 		.4byte	0x411d0000
 5091 0096 9F       		.byte	0x9f
 5092 0097 00000000 		.4byte	0
 5093 009b 00000000 		.4byte	0
 5094              	.LLST7:
 5095 009f 8A000000 		.4byte	.LVL15
 5096 00a3 90000000 		.4byte	.LVL16
 5097 00a7 0200     		.2byte	0x2
 5098 00a9 31       		.byte	0x31
 5099 00aa 9F       		.byte	0x9f
 5100 00ab 00000000 		.4byte	0
 5101 00af 00000000 		.4byte	0
 5102              	.LLST9:
 5103 00b3 8A000000 		.4byte	.LVL15
 5104 00b7 90000000 		.4byte	.LVL16
 5105 00bb 0600     		.2byte	0x6
 5106 00bd 0C       		.byte	0xc
 5107 00be 80053240 		.4byte	0x40320580
 5108 00c2 9F       		.byte	0x9f
 5109 00c3 00000000 		.4byte	0
 5110 00c7 00000000 		.4byte	0
 5111              	.LLST10:
 5112 00cb 02000000 		.4byte	.LVL18
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 171


 5113 00cf 08000000 		.4byte	.LVL19
 5114 00d3 0200     		.2byte	0x2
 5115 00d5 30       		.byte	0x30
 5116 00d6 9F       		.byte	0x9f
 5117 00d7 00000000 		.4byte	0
 5118 00db 00000000 		.4byte	0
 5119              	.LLST11:
 5120 00df 02000000 		.4byte	.LVL18
 5121 00e3 08000000 		.4byte	.LVL19
 5122 00e7 0200     		.2byte	0x2
 5123 00e9 33       		.byte	0x33
 5124 00ea 9F       		.byte	0x9f
 5125 00eb 00000000 		.4byte	0
 5126 00ef 00000000 		.4byte	0
 5127              	.LLST12:
 5128 00f3 02000000 		.4byte	.LVL18
 5129 00f7 08000000 		.4byte	.LVL19
 5130 00fb 0600     		.2byte	0x6
 5131 00fd 0C       		.byte	0xc
 5132 00fe 00003240 		.4byte	0x40320000
 5133 0102 9F       		.byte	0x9f
 5134 0103 00000000 		.4byte	0
 5135 0107 00000000 		.4byte	0
 5136              	.LLST13:
 5137 010b 12000000 		.4byte	.LVL21
 5138 010f 16000000 		.4byte	.LVL22
 5139 0113 0200     		.2byte	0x2
 5140 0115 30       		.byte	0x30
 5141 0116 9F       		.byte	0x9f
 5142 0117 16000000 		.4byte	.LVL22
 5143 011b 56000000 		.4byte	.LVL33
 5144 011f 0100     		.2byte	0x1
 5145 0121 54       		.byte	0x54
 5146 0122 00000000 		.4byte	0
 5147 0126 00000000 		.4byte	0
 5148              	.LLST14:
 5149 012a 24000000 		.4byte	.LVL23
 5150 012e 28000000 		.4byte	.LVL24
 5151 0132 0100     		.2byte	0x1
 5152 0134 53       		.byte	0x53
 5153 0135 28000000 		.4byte	.LVL24
 5154 0139 2A000000 		.4byte	.LVL25
 5155 013d 0800     		.2byte	0x8
 5156 013f 72       		.byte	0x72
 5157 0140 00       		.sleb128 0
 5158 0141 31       		.byte	0x31
 5159 0142 24       		.byte	0x24
 5160 0143 23       		.byte	0x23
 5161 0144 F20C     		.uleb128 0x672
 5162 0146 9F       		.byte	0x9f
 5163 0147 2A000000 		.4byte	.LVL25
 5164 014b 2E000000 		.4byte	.LVL26
 5165 014f 1600     		.2byte	0x16
 5166 0151 74       		.byte	0x74
 5167 0152 00       		.sleb128 0
 5168 0153 03       		.byte	0x3
 5169 0154 00000000 		.4byte	voice
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 172


 5170 0158 22       		.byte	0x22
 5171 0159 94       		.byte	0x94
 5172 015a 01       		.byte	0x1
 5173 015b 48       		.byte	0x48
 5174 015c 24       		.byte	0x24
 5175 015d 48       		.byte	0x48
 5176 015e 26       		.byte	0x26
 5177 015f 35       		.byte	0x35
 5178 0160 1E       		.byte	0x1e
 5179 0161 31       		.byte	0x31
 5180 0162 24       		.byte	0x24
 5181 0163 23       		.byte	0x23
 5182 0164 F20C     		.uleb128 0x672
 5183 0166 9F       		.byte	0x9f
 5184 0167 00000000 		.4byte	0
 5185 016b 00000000 		.4byte	0
 5186              	.LLST17:
 5187 016f 24000000 		.4byte	.LVL23
 5188 0173 2E000000 		.4byte	.LVL26
 5189 0177 0600     		.2byte	0x6
 5190 0179 0C       		.byte	0xc
 5191 017a 00001441 		.4byte	0x41140000
 5192 017e 9F       		.byte	0x9f
 5193 017f 00000000 		.4byte	0
 5194 0183 00000000 		.4byte	0
 5195              	.LLST18:
 5196 0187 3C000000 		.4byte	.LVL29
 5197 018b 46000000 		.4byte	.LVL30
 5198 018f 0600     		.2byte	0x6
 5199 0191 0C       		.byte	0xc
 5200 0192 00001441 		.4byte	0x41140000
 5201 0196 9F       		.byte	0x9f
 5202 0197 00000000 		.4byte	0
 5203 019b 00000000 		.4byte	0
 5204              	.LLST19:
 5205 019f 46000000 		.4byte	.LVL30
 5206 01a3 4C000000 		.4byte	.LVL31
 5207 01a7 0200     		.2byte	0x2
 5208 01a9 31       		.byte	0x31
 5209 01aa 9F       		.byte	0x9f
 5210 01ab 00000000 		.4byte	0
 5211 01af 00000000 		.4byte	0
 5212              	.LLST20:
 5213 01b3 46000000 		.4byte	.LVL30
 5214 01b7 4C000000 		.4byte	.LVL31
 5215 01bb 0200     		.2byte	0x2
 5216 01bd 33       		.byte	0x33
 5217 01be 9F       		.byte	0x9f
 5218 01bf 00000000 		.4byte	0
 5219 01c3 00000000 		.4byte	0
 5220              	.LLST21:
 5221 01c7 46000000 		.4byte	.LVL30
 5222 01cb 4C000000 		.4byte	.LVL31
 5223 01cf 0600     		.2byte	0x6
 5224 01d1 0C       		.byte	0xc
 5225 01d2 00003240 		.4byte	0x40320000
 5226 01d6 9F       		.byte	0x9f
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 173


 5227 01d7 00000000 		.4byte	0
 5228 01db 00000000 		.4byte	0
 5229              		.section	.debug_aranges,"",%progbits
 5230 0000 2C000000 		.4byte	0x2c
 5231 0004 0200     		.2byte	0x2
 5232 0006 00000000 		.4byte	.Ldebug_info0
 5233 000a 04       		.byte	0x4
 5234 000b 00       		.byte	0
 5235 000c 0000     		.2byte	0
 5236 000e 0000     		.2byte	0
 5237 0010 00000000 		.4byte	.LFB577
 5238 0014 C0000000 		.4byte	.LFE577-.LFB577
 5239 0018 00000000 		.4byte	.LFB578
 5240 001c 70000000 		.4byte	.LFE578-.LFB578
 5241 0020 00000000 		.4byte	.LFB576
 5242 0024 60000000 		.4byte	.LFE576-.LFB576
 5243 0028 00000000 		.4byte	0
 5244 002c 00000000 		.4byte	0
 5245              		.section	.debug_ranges,"",%progbits
 5246              	.Ldebug_ranges0:
 5247 0000 00000000 		.4byte	.LFB577
 5248 0004 C0000000 		.4byte	.LFE577
 5249 0008 00000000 		.4byte	.LFB578
 5250 000c 70000000 		.4byte	.LFE578
 5251 0010 00000000 		.4byte	.LFB576
 5252 0014 60000000 		.4byte	.LFE576
 5253 0018 00000000 		.4byte	0
 5254 001c 00000000 		.4byte	0
 5255              		.section	.debug_line,"",%progbits
 5256              	.Ldebug_line0:
 5257 0000 59060000 		.section	.debug_str,"MS",%progbits,1
 5257      02007805 
 5257      00000201 
 5257      FB0E0D00 
 5257      01010101 
 5258              	.LASF146:
 5259 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5259      6843746C 
 5259      4D61696E 
 5259      57733146 
 5259      72657100 
 5260              	.LASF33:
 5261 0014 52455345 		.ascii	"RESERVED\000"
 5261      52564544 
 5261      00
 5262              	.LASF41:
 5263 001d 5644445F 		.ascii	"VDD_ACTIVE\000"
 5263      41435449 
 5263      564500
 5264              	.LASF37:
 5265 0028 494E5452 		.ascii	"INTR_CAUSE0\000"
 5265      5F434155 
 5265      53453000 
 5266              	.LASF38:
 5267 0034 494E5452 		.ascii	"INTR_CAUSE1\000"
 5267      5F434155 
 5267      53453100 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 174


 5268              	.LASF39:
 5269 0040 494E5452 		.ascii	"INTR_CAUSE2\000"
 5269      5F434155 
 5269      53453200 
 5270              	.LASF40:
 5271 004c 494E5452 		.ascii	"INTR_CAUSE3\000"
 5271      5F434155 
 5271      53453300 
 5272              	.LASF67:
 5273 0058 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 5273      5F574F52 
 5273      4B5F5550 
 5273      44415445 
 5273      4400
 5274              	.LASF444:
 5275 006a 6D61696E 		.ascii	"main_cm4.c\000"
 5275      5F636D34 
 5275      2E6300
 5276              	.LASF419:
 5277 0075 63795F64 		.ascii	"cy_device\000"
 5277      65766963 
 5277      6500
 5278              	.LASF437:
 5279 007f 73657476 		.ascii	"setvbuf\000"
 5279      62756600 
 5280              	.LASF173:
 5281 0087 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 5281      73436D30 
 5281      436C6F63 
 5281      6B43746C 
 5281      4F666673 
 5282              	.LASF132:
 5283 009e 70657269 		.ascii	"periClockNr\000"
 5283      436C6F63 
 5283      6B4E7200 
 5284              	.LASF227:
 5285 00aa 43595F43 		.ascii	"CY_CTDAC_OUTPUT_BUFFERED\000"
 5285      54444143 
 5285      5F4F5554 
 5285      5055545F 
 5285      42554646 
 5286              	.LASF334:
 5287 00c3 5F636F6F 		.ascii	"_cookie\000"
 5287      6B696500 
 5288              	.LASF319:
 5289 00cb 5F6F6E5F 		.ascii	"_on_exit_args\000"
 5289      65786974 
 5289      5F617267 
 5289      7300
 5290              	.LASF48:
 5291 00d9 43544441 		.ascii	"CTDAC_SW\000"
 5291      435F5357 
 5291      00
 5292              	.LASF424:
 5293 00e2 5F696D70 		.ascii	"_impure_ptr\000"
 5293      7572655F 
 5293      70747200 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 175


 5294              	.LASF60:
 5295 00ee 4348414E 		.ascii	"CHAN_EN\000"
 5295      5F454E00 
 5296              	.LASF442:
 5297 00f6 43617053 		.ascii	"CapSense_IsWidgetActive\000"
 5297      656E7365 
 5297      5F497357 
 5297      69646765 
 5297      74416374 
 5298              	.LASF271:
 5299 010e 74785374 		.ascii	"txStatus\000"
 5299      61747573 
 5299      00
 5300              	.LASF105:
 5301 0117 70657269 		.ascii	"periBase\000"
 5301      42617365 
 5301      00
 5302              	.LASF386:
 5303 0120 5F776374 		.ascii	"_wctomb_state\000"
 5303      6F6D625F 
 5303      73746174 
 5303      6500
 5304              	.LASF370:
 5305 012e 5F676C75 		.ascii	"_glue\000"
 5305      6500
 5306              	.LASF262:
 5307 0134 696E7472 		.ascii	"intrMask\000"
 5307      4D61736B 
 5307      00
 5308              	.LASF383:
 5309 013d 5F723438 		.ascii	"_r48\000"
 5309      00
 5310              	.LASF407:
 5311 0142 56444143 		.ascii	"VDAC_1_SetValue\000"
 5311      5F315F53 
 5311      65745661 
 5311      6C756500 
 5312              	.LASF47:
 5313 0152 43544441 		.ascii	"CTDAC_CTRL\000"
 5313      435F4354 
 5313      524C00
 5314              	.LASF77:
 5315 015d 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 5315      455F494E 
 5315      54525F4D 
 5315      41534B00 
 5316              	.LASF411:
 5317 016d 61646343 		.ascii	"adcCounts\000"
 5317      6F756E74 
 5317      7300
 5318              	.LASF388:
 5319 0177 5F736967 		.ascii	"_signal_buf\000"
 5319      6E616C5F 
 5319      62756600 
 5320              	.LASF14:
 5321 0183 756E7369 		.ascii	"unsigned int\000"
 5321      676E6564 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 176


 5321      20696E74 
 5321      00
 5322              	.LASF180:
 5323 0190 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 5323      73537973 
 5323      5469636B 
 5323      43746C4F 
 5323      66667365 
 5324              	.LASF79:
 5325 01a6 494E5452 		.ascii	"INTR_CAUSE\000"
 5325      5F434155 
 5325      534500
 5326              	.LASF133:
 5327 01b1 736D6966 		.ascii	"smifDeviceNr\000"
 5327      44657669 
 5327      63654E72 
 5327      00
 5328              	.LASF252:
 5329 01be 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 5329      41525F52 
 5329      414E4745 
 5329      5F434F4E 
 5329      445F4F55 
 5330              	.LASF163:
 5331 01d8 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 5331      44697643 
 5331      6D645061 
 5331      54797065 
 5331      53656C50 
 5332              	.LASF329:
 5333 01ef 5F73697A 		.ascii	"_size\000"
 5333      6500
 5334              	.LASF223:
 5335 01f5 63795F65 		.ascii	"cy_en_ctdac_deglitch_t\000"
 5335      6E5F6374 
 5335      6461635F 
 5335      6465676C 
 5335      69746368 
 5336              	.LASF333:
 5337 020c 5F6C6266 		.ascii	"_lbfsize\000"
 5337      73697A65 
 5337      00
 5338              	.LASF32:
 5339 0215 4346475F 		.ascii	"CFG_SIO\000"
 5339      53494F00 
 5340              	.LASF417:
 5341 021d 706C6179 		.ascii	"play_voice\000"
 5341      5F766F69 
 5341      636500
 5342              	.LASF8:
 5343 0228 5F5F696E 		.ascii	"__int32_t\000"
 5343      7433325F 
 5343      7400
 5344              	.LASF348:
 5345 0232 5F657272 		.ascii	"_errno\000"
 5345      6E6F00
 5346              	.LASF69:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 177


 5347 0239 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 5347      5F574F52 
 5347      4B5F4E45 
 5347      5756414C 
 5347      554500
 5348              	.LASF293:
 5349 024c 5F6F6666 		.ascii	"_off_t\000"
 5349      5F7400
 5350              	.LASF103:
 5351 0253 63707573 		.ascii	"cpussBase\000"
 5351      73426173 
 5351      6500
 5352              	.LASF286:
 5353 025d 6368616E 		.ascii	"channelBase\000"
 5353      6E656C42 
 5353      61736500 
 5354              	.LASF436:
 5355 0269 43617053 		.ascii	"CapSense_Start\000"
 5355      656E7365 
 5355      5F537461 
 5355      727400
 5356              	.LASF288:
 5357 0278 6877436F 		.ascii	"hwConfigStc\000"
 5357      6E666967 
 5357      53746300 
 5358              	.LASF204:
 5359 0284 43595F43 		.ascii	"CY_CTDAC_UPDATE_STROBE_EDGE_IMMEDIATE\000"
 5359      54444143 
 5359      5F555044 
 5359      4154455F 
 5359      5354524F 
 5360              	.LASF128:
 5361 02aa 63707573 		.ascii	"cpussNotConnectedIrq\000"
 5361      734E6F74 
 5361      436F6E6E 
 5361      65637465 
 5361      64497271 
 5362              	.LASF0:
 5363 02bf 73686F72 		.ascii	"short int\000"
 5363      7420696E 
 5363      7400
 5364              	.LASF274:
 5365 02c9 72785269 		.ascii	"rxRingBufSize\000"
 5365      6E674275 
 5365      6653697A 
 5365      6500
 5366              	.LASF71:
 5367 02d7 53415455 		.ascii	"SATURATE_INTR\000"
 5367      52415445 
 5367      5F494E54 
 5367      5200
 5368              	.LASF241:
 5369 02e5 636F6E66 		.ascii	"configClock\000"
 5369      6967436C 
 5369      6F636B00 
 5370              	.LASF292:
 5371 02f1 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 178


 5371      4B5F5245 
 5371      43555253 
 5371      4956455F 
 5371      5400
 5372              	.LASF159:
 5373 0303 70657269 		.ascii	"periTrGrSize\000"
 5373      54724772 
 5373      53697A65 
 5373      00
 5374              	.LASF226:
 5375 0310 63795F65 		.ascii	"cy_en_ctdac_ref_source_t\000"
 5375      6E5F6374 
 5375      6461635F 
 5375      7265665F 
 5375      736F7572 
 5376              	.LASF83:
 5377 0329 494E4A5F 		.ascii	"INJ_RESULT\000"
 5377      52455355 
 5377      4C5400
 5378              	.LASF162:
 5379 0334 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 5379      44697643 
 5379      6D645061 
 5379      44697653 
 5379      656C506F 
 5380              	.LASF335:
 5381 034a 5F726561 		.ascii	"_read\000"
 5381      6400
 5382              	.LASF28:
 5383 0350 494E5452 		.ascii	"INTR_SET\000"
 5383      5F534554 
 5383      00
 5384              	.LASF139:
 5385 0359 63727970 		.ascii	"cryptoMemSize\000"
 5385      746F4D65 
 5385      6D53697A 
 5385      6500
 5386              	.LASF390:
 5387 0367 5F6D6272 		.ascii	"_mbrlen_state\000"
 5387      6C656E5F 
 5387      73746174 
 5387      6500
 5388              	.LASF185:
 5389 0375 63707573 		.ascii	"cpussRam1Ctl0\000"
 5389      7352616D 
 5389      3143746C 
 5389      3000
 5390              	.LASF440:
 5391 0383 43617053 		.ascii	"CapSense_IsBusy\000"
 5391      656E7365 
 5391      5F497342 
 5391      75737900 
 5392              	.LASF187:
 5393 0393 69706353 		.ascii	"ipcStructSize\000"
 5393      74727563 
 5393      7453697A 
 5393      6500
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 179


 5394              	.LASF237:
 5395 03a1 6465676C 		.ascii	"deglitchCycles\000"
 5395      69746368 
 5395      4379636C 
 5395      657300
 5396              	.LASF127:
 5397 03b0 63707573 		.ascii	"cpussFmIrq\000"
 5397      73466D49 
 5397      727100
 5398              	.LASF429:
 5399 03bb 4144435F 		.ascii	"ADC_IsEndConversion\000"
 5399      4973456E 
 5399      64436F6E 
 5399      76657273 
 5399      696F6E00 
 5400              	.LASF350:
 5401 03cf 5F737464 		.ascii	"_stdout\000"
 5401      6F757400 
 5402              	.LASF443:
 5403 03d7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5403      43313120 
 5403      352E342E 
 5403      31203230 
 5403      31363036 
 5404 040a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 5404      20726576 
 5404      6973696F 
 5404      6E203233 
 5404      37373135 
 5405 043d 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 5405      70202D6D 
 5405      6670753D 
 5405      66707634 
 5405      2D73702D 
 5406 0470 65637469 		.ascii	"ections -ffat-lto-objects\000"
 5406      6F6E7320 
 5406      2D666661 
 5406      742D6C74 
 5406      6F2D6F62 
 5407              	.LASF121:
 5408 048a 70726F74 		.ascii	"protVersion\000"
 5408      56657273 
 5408      696F6E00 
 5409              	.LASF249:
 5410 0496 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 5410      41525F52 
 5410      414E4745 
 5410      5F434F4E 
 5410      445F4245 
 5411              	.LASF294:
 5412 04ae 5F66706F 		.ascii	"_fpos_t\000"
 5412      735F7400 
 5413              	.LASF402:
 5414 04b6 43795F43 		.ascii	"Cy_CTDAC_SetValue\000"
 5414      54444143 
 5414      5F536574 
 5414      56616C75 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 180


 5414      6500
 5415              	.LASF230:
 5416 04c8 72656653 		.ascii	"refSource\000"
 5416      6F757263 
 5416      6500
 5417              	.LASF326:
 5418 04d2 5F666E73 		.ascii	"_fns\000"
 5418      00
 5419              	.LASF216:
 5420 04d7 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VSSA\000"
 5420      54444143 
 5420      5F4F5554 
 5420      5055545F 
 5420      56535341 
 5421              	.LASF409:
 5422 04ec 5F5F656E 		.ascii	"__enable_irq\000"
 5422      61626C65 
 5422      5F697271 
 5422      00
 5423              	.LASF161:
 5424 04f9 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 5424      44697643 
 5424      6D645479 
 5424      70655365 
 5424      6C506F73 
 5425              	.LASF178:
 5426 050e 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 5426      73547269 
 5426      6D52616D 
 5426      43746C4F 
 5426      66667365 
 5427              	.LASF245:
 5428 0524 64697669 		.ascii	"dividerFracValue\000"
 5428      64657246 
 5428      72616356 
 5428      616C7565 
 5428      00
 5429              	.LASF331:
 5430 0535 5F666C61 		.ascii	"_flags\000"
 5430      677300
 5431              	.LASF272:
 5432 053c 72785374 		.ascii	"rxStatus\000"
 5432      61747573 
 5432      00
 5433              	.LASF30:
 5434 0545 4346475F 		.ascii	"CFG_IN\000"
 5434      494E00
 5435              	.LASF304:
 5436 054c 5F426967 		.ascii	"_Bigint\000"
 5436      696E7400 
 5437              	.LASF194:
 5438 0554 75696E74 		.ascii	"uint8\000"
 5438      3800
 5439              	.LASF316:
 5440 055a 5F5F746D 		.ascii	"__tm_wday\000"
 5440      5F776461 
 5440      7900
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 181


 5441              	.LASF229:
 5442 0564 63795F65 		.ascii	"cy_en_ctdac_output_buffer_t\000"
 5442      6E5F6374 
 5442      6461635F 
 5442      6F757470 
 5442      75745F62 
 5443              	.LASF358:
 5444 0580 5F726573 		.ascii	"_result\000"
 5444      756C7400 
 5445              	.LASF20:
 5446 0588 75696E74 		.ascii	"uint32_t\000"
 5446      33325F74 
 5446      00
 5447              	.LASF15:
 5448 0591 696E7438 		.ascii	"int8_t\000"
 5448      5F7400
 5449              	.LASF312:
 5450 0598 5F5F746D 		.ascii	"__tm_hour\000"
 5450      5F686F75 
 5450      7200
 5451              	.LASF432:
 5452 05a2 4144435F 		.ascii	"ADC_StartConvert\000"
 5452      53746172 
 5452      74436F6E 
 5452      76657274 
 5452      00
 5453              	.LASF46:
 5454 05b3 4750494F 		.ascii	"GPIO_V1_Type\000"
 5454      5F56315F 
 5454      54797065 
 5454      00
 5455              	.LASF171:
 5456 05c0 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 5456      50727443 
 5456      66674F75 
 5456      744F6666 
 5456      73657400 
 5457              	.LASF215:
 5458 05d4 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VALUE_PLUS1\000"
 5458      54444143 
 5458      5F4F5554 
 5458      5055545F 
 5458      56414C55 
 5459              	.LASF298:
 5460 05f0 5F5F636F 		.ascii	"__count\000"
 5460      756E7400 
 5461              	.LASF239:
 5462 05f8 6E657874 		.ascii	"nextValue\000"
 5462      56616C75 
 5462      6500
 5463              	.LASF13:
 5464 0602 6C6F6E67 		.ascii	"long long unsigned int\000"
 5464      206C6F6E 
 5464      6720756E 
 5464      7369676E 
 5464      65642069 
 5465              	.LASF23:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 182


 5466 0619 4F55545F 		.ascii	"OUT_SET\000"
 5466      53455400 
 5467              	.LASF114:
 5468 0621 63727970 		.ascii	"cryptoVersion\000"
 5468      746F5665 
 5468      7273696F 
 5468      6E00
 5469              	.LASF311:
 5470 062f 5F5F746D 		.ascii	"__tm_min\000"
 5470      5F6D696E 
 5470      00
 5471              	.LASF285:
 5472 0638 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 5472      74635F73 
 5472      63625F75 
 5472      6172745F 
 5472      636F6E74 
 5473              	.LASF135:
 5474 0652 65704D6F 		.ascii	"epMonitorNr\000"
 5474      6E69746F 
 5474      724E7200 
 5475              	.LASF401:
 5476 065e 62617365 		.ascii	"base\000"
 5476      00
 5477              	.LASF396:
 5478 0663 5F6E6578 		.ascii	"_nextf\000"
 5478      746600
 5479              	.LASF303:
 5480 066a 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 5480      74635F73 
 5480      63625F75 
 5480      6172745F 
 5480      636F6E74 
 5481              	.LASF22:
 5482 0682 4F55545F 		.ascii	"OUT_CLR\000"
 5482      434C5200 
 5483              	.LASF234:
 5484 068a 6F757470 		.ascii	"outputMode\000"
 5484      75744D6F 
 5484      646500
 5485              	.LASF104:
 5486 0695 666C6173 		.ascii	"flashcBase\000"
 5486      68634261 
 5486      736500
 5487              	.LASF17:
 5488 06a0 696E7431 		.ascii	"int16_t\000"
 5488      365F7400 
 5489              	.LASF373:
 5490 06a8 5F72616E 		.ascii	"_rand48\000"
 5490      64343800 
 5491              	.LASF170:
 5492 06b0 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 5492      50727443 
 5492      6667496E 
 5492      4F666673 
 5492      657400
 5493              	.LASF287:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 183


 5494 06c3 6E756D43 		.ascii	"numChannels\000"
 5494      68616E6E 
 5494      656C7300 
 5495              	.LASF359:
 5496 06cf 5F726573 		.ascii	"_result_k\000"
 5496      756C745F 
 5496      6B00
 5497              	.LASF435:
 5498 06d9 55415254 		.ascii	"UART_Start\000"
 5498      5F537461 
 5498      727400
 5499              	.LASF445:
 5500 06e4 433A5C55 		.ascii	"C:\\Users\\zinch\\Documents\\PSoC Creator\\Workspac"
 5500      73657273 
 5500      5C7A696E 
 5500      63685C44 
 5500      6F63756D 
 5501 0712 6530315C 		.ascii	"e01\\VoiceRepeater_onPSoC6.cydsn\000"
 5501      566F6963 
 5501      65526570 
 5501      65617465 
 5501      725F6F6E 
 5502              	.LASF379:
 5503 0732 5F617363 		.ascii	"_asctime_buf\000"
 5503      74696D65 
 5503      5F627566 
 5503      00
 5504              	.LASF403:
 5505 073f 43795F47 		.ascii	"Cy_GPIO_Write\000"
 5505      50494F5F 
 5505      57726974 
 5505      6500
 5506              	.LASF330:
 5507 074d 5F5F7346 		.ascii	"__sFILE\000"
 5507      494C4500 
 5508              	.LASF308:
 5509 0755 5F776473 		.ascii	"_wds\000"
 5509      00
 5510              	.LASF196:
 5511 075a 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 5511      5953434C 
 5511      4B5F4449 
 5511      565F385F 
 5511      42495400 
 5512              	.LASF214:
 5513 076e 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VALUE\000"
 5513      54444143 
 5513      5F4F5554 
 5513      5055545F 
 5513      56414C55 
 5514              	.LASF243:
 5515 0784 64697669 		.ascii	"dividerNum\000"
 5515      6465724E 
 5515      756D00
 5516              	.LASF258:
 5517 078f 72616E67 		.ascii	"rangeThres\000"
 5517      65546872 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 184


 5517      657300
 5518              	.LASF106:
 5519 079a 75646242 		.ascii	"udbBase\000"
 5519      61736500 
 5520              	.LASF369:
 5521 07a2 5F5F4649 		.ascii	"__FILE\000"
 5521      4C4500
 5522              	.LASF250:
 5523 07a9 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 5523      41525F52 
 5523      414E4745 
 5523      5F434F4E 
 5523      445F494E 
 5524              	.LASF240:
 5525 07c2 656E6162 		.ascii	"enableInterrupt\000"
 5525      6C65496E 
 5525      74657272 
 5525      75707400 
 5526              	.LASF342:
 5527 07d2 5F6F6666 		.ascii	"_offset\000"
 5527      73657400 
 5528              	.LASF254:
 5529 07da 6374726C 		.ascii	"ctrl\000"
 5529      00
 5530              	.LASF211:
 5531 07df 43595F43 		.ascii	"CY_CTDAC_DEEPSLEEP_ENABLE\000"
 5531      54444143 
 5531      5F444545 
 5531      50534C45 
 5531      45505F45 
 5532              	.LASF160:
 5533 07f9 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 5533      44697643 
 5533      6D644469 
 5533      7653656C 
 5533      4D736B00 
 5534              	.LASF431:
 5535 080d 4144435F 		.ascii	"ADC_Start\000"
 5535      53746172 
 5535      7400
 5536              	.LASF238:
 5537 0817 76616C75 		.ascii	"value\000"
 5537      6500
 5538              	.LASF31:
 5539 081d 4346475F 		.ascii	"CFG_OUT\000"
 5539      4F555400 
 5540              	.LASF81:
 5541 0825 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 5541      4348414E 
 5541      5F434F4E 
 5541      46494700 
 5542              	.LASF353:
 5543 0835 5F656D65 		.ascii	"_emergency\000"
 5543      7267656E 
 5543      637900
 5544              	.LASF148:
 5545 0840 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 185


 5545      6843746C 
 5545      4D61696E 
 5545      57733346 
 5545      72657100 
 5546              	.LASF224:
 5547 0854 43595F43 		.ascii	"CY_CTDAC_REFSOURCE_EXTERNAL\000"
 5547      54444143 
 5547      5F524546 
 5547      534F5552 
 5547      43455F45 
 5548              	.LASF130:
 5549 0870 73727373 		.ascii	"srssNumPll\000"
 5549      4E756D50 
 5549      6C6C00
 5550              	.LASF101:
 5551 087b 5341525F 		.ascii	"SAR_Type\000"
 5551      54797065 
 5551      00
 5552              	.LASF447:
 5553 0884 70757473 		.ascii	"puts\000"
 5553      00
 5554              	.LASF208:
 5555 0889 43595F43 		.ascii	"CY_CTDAC_FORMAT_SIGNED\000"
 5555      54444143 
 5555      5F464F52 
 5555      4D41545F 
 5555      5349474E 
 5556              	.LASF141:
 5557 08a0 666C6173 		.ascii	"flashPipeRequired\000"
 5557      68506970 
 5557      65526571 
 5557      75697265 
 5557      6400
 5558              	.LASF310:
 5559 08b2 5F5F746D 		.ascii	"__tm_sec\000"
 5559      5F736563 
 5559      00
 5560              	.LASF412:
 5561 08bb 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 5561      436F756E 
 5561      7473546F 
 5561      5F6D566F 
 5561      6C747300 
 5562              	.LASF193:
 5563 08cf 646F7562 		.ascii	"double\000"
 5563      6C6500
 5564              	.LASF375:
 5565 08d6 5F6D756C 		.ascii	"_mult\000"
 5565      7400
 5566              	.LASF352:
 5567 08dc 5F696E63 		.ascii	"_inc\000"
 5567      00
 5568              	.LASF325:
 5569 08e1 5F696E64 		.ascii	"_ind\000"
 5569      00
 5570              	.LASF202:
 5571 08e6 43595F43 		.ascii	"CY_CTDAC_UPDATE_BUFFERED_WRITE\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 186


 5571      54444143 
 5571      5F555044 
 5571      4154455F 
 5571      42554646 
 5572              	.LASF97:
 5573 0905 5341525F 		.ascii	"SAR_V1_Type\000"
 5573      56315F54 
 5573      79706500 
 5574              	.LASF220:
 5575 0911 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_UNBUFFERED\000"
 5575      54444143 
 5575      5F444547 
 5575      4C495443 
 5575      484D4F44 
 5576              	.LASF59:
 5577 0932 52414E47 		.ascii	"RANGE_COND\000"
 5577      455F434F 
 5577      4E4400
 5578              	.LASF145:
 5579 093d 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 5579      6843746C 
 5579      4D61696E 
 5579      57733046 
 5579      72657100 
 5580              	.LASF155:
 5581 0951 64775374 		.ascii	"dwStatusChIdxMsk\000"
 5581      61747573 
 5581      43684964 
 5581      784D736B 
 5581      00
 5582              	.LASF42:
 5583 0962 5644445F 		.ascii	"VDD_INTR\000"
 5583      494E5452 
 5583      00
 5584              	.LASF109:
 5585 096b 6770696F 		.ascii	"gpioBase\000"
 5585      42617365 
 5585      00
 5586              	.LASF392:
 5587 0974 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5587      72746F77 
 5587      63735F73 
 5587      74617465 
 5587      00
 5588              	.LASF380:
 5589 0985 5F6C6F63 		.ascii	"_localtime_buf\000"
 5589      616C7469 
 5589      6D655F62 
 5589      756600
 5590              	.LASF428:
 5591 0994 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 5591      41525F43 
 5591      6F756E74 
 5591      73546F5F 
 5591      6D566F6C 
 5592              	.LASF203:
 5593 09ab 43595F43 		.ascii	"CY_CTDAC_UPDATE_STROBE_EDGE_SYNC\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 187


 5593      54444143 
 5593      5F555044 
 5593      4154455F 
 5593      5354524F 
 5594              	.LASF317:
 5595 09cc 5F5F746D 		.ascii	"__tm_yday\000"
 5595      5F796461 
 5595      7900
 5596              	.LASF115:
 5597 09d6 64775665 		.ascii	"dwVersion\000"
 5597      7273696F 
 5597      6E00
 5598              	.LASF192:
 5599 09e0 666C6F61 		.ascii	"float\000"
 5599      7400
 5600              	.LASF222:
 5601 09e6 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_BOTH\000"
 5601      54444143 
 5601      5F444547 
 5601      4C495443 
 5601      484D4F44 
 5602              	.LASF136:
 5603 0a01 75646250 		.ascii	"udbPresent\000"
 5603      72657365 
 5603      6E7400
 5604              	.LASF98:
 5605 0a0c 4750494F 		.ascii	"GPIO_PRT_Type\000"
 5605      5F505254 
 5605      5F547970 
 5605      6500
 5606              	.LASF299:
 5607 0a1a 5F5F7661 		.ascii	"__value\000"
 5607      6C756500 
 5608              	.LASF154:
 5609 0a22 64775374 		.ascii	"dwStatusChIdxPos\000"
 5609      61747573 
 5609      43684964 
 5609      78506F73 
 5609      00
 5610              	.LASF6:
 5611 0a33 5F5F7569 		.ascii	"__uint16_t\000"
 5611      6E743136 
 5611      5F7400
 5612              	.LASF122:
 5613 0a3e 63707573 		.ascii	"cpussIpcNr\000"
 5613      73497063 
 5613      4E7200
 5614              	.LASF360:
 5615 0a49 5F703573 		.ascii	"_p5s\000"
 5615      00
 5616              	.LASF268:
 5617 0a4e 76726566 		.ascii	"vrefMvValue\000"
 5617      4D765661 
 5617      6C756500 
 5618              	.LASF112:
 5619 0a5a 63727970 		.ascii	"cryptoBase\000"
 5619      746F4261 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 188


 5619      736500
 5620              	.LASF129:
 5621 0a65 73727373 		.ascii	"srssNumClkpath\000"
 5621      4E756D43 
 5621      6C6B7061 
 5621      746800
 5622              	.LASF283:
 5623 0a74 63624576 		.ascii	"cbEvents\000"
 5623      656E7473 
 5623      00
 5624              	.LASF36:
 5625 0a7d 4750494F 		.ascii	"GPIO_PRT_V1_Type\000"
 5625      5F505254 
 5625      5F56315F 
 5625      54797065 
 5625      00
 5626              	.LASF125:
 5627 0a8e 63707573 		.ascii	"cpussFlashPaSize\000"
 5627      73466C61 
 5627      73685061 
 5627      53697A65 
 5627      00
 5628              	.LASF384:
 5629 0a9f 5F6D626C 		.ascii	"_mblen_state\000"
 5629      656E5F73 
 5629      74617465 
 5629      00
 5630              	.LASF410:
 5631 0aac 6368616E 		.ascii	"chan\000"
 5631      00
 5632              	.LASF251:
 5633 0ab1 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 5633      41525F52 
 5633      414E4745 
 5633      5F434F4E 
 5633      445F4142 
 5634              	.LASF191:
 5635 0ac9 63686172 		.ascii	"char\000"
 5635      00
 5636              	.LASF426:
 5637 0ace 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 5637      79734C69 
 5637      625F4173 
 5637      73657274 
 5637      4661696C 
 5638              	.LASF313:
 5639 0ae5 5F5F746D 		.ascii	"__tm_mday\000"
 5639      5F6D6461 
 5639      7900
 5640              	.LASF366:
 5641 0aef 5F736967 		.ascii	"_sig_func\000"
 5641      5F66756E 
 5641      6300
 5642              	.LASF260:
 5643 0af9 6368616E 		.ascii	"chanEn\000"
 5643      456E00
 5644              	.LASF276:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 189


 5645 0b00 72785269 		.ascii	"rxRingBufTail\000"
 5645      6E674275 
 5645      66546169 
 5645      6C00
 5646              	.LASF242:
 5647 0b0e 64697669 		.ascii	"dividerType\000"
 5647      64657254 
 5647      79706500 
 5648              	.LASF137:
 5649 0b1a 73797350 		.ascii	"sysPmSimoPresent\000"
 5649      6D53696D 
 5649      6F507265 
 5649      73656E74 
 5649      00
 5650              	.LASF341:
 5651 0b2b 5F626C6B 		.ascii	"_blksize\000"
 5651      73697A65 
 5651      00
 5652              	.LASF70:
 5653 0b34 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 5653      5F524553 
 5653      554C545F 
 5653      4E455756 
 5653      414C5545 
 5654              	.LASF301:
 5655 0b49 5F666C6F 		.ascii	"_flock_t\000"
 5655      636B5F74 
 5655      00
 5656              	.LASF423:
 5657 0b52 56444143 		.ascii	"VDAC_1_ctdacConfig\000"
 5657      5F315F63 
 5657      74646163 
 5657      436F6E66 
 5657      696700
 5658              	.LASF279:
 5659 0b65 72784275 		.ascii	"rxBufIdx\000"
 5659      66496478 
 5659      00
 5660              	.LASF284:
 5661 0b6e 696E6974 		.ascii	"initKey\000"
 5661      4B657900 
 5662              	.LASF86:
 5663 0b76 4156475F 		.ascii	"AVG_STAT\000"
 5663      53544154 
 5663      00
 5664              	.LASF210:
 5665 0b7f 43595F43 		.ascii	"CY_CTDAC_DEEPSLEEP_DISABLE\000"
 5665      54444143 
 5665      5F444545 
 5665      50534C45 
 5665      45505F44 
 5666              	.LASF248:
 5667 0b9a 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 5667      41525F57 
 5667      4149545F 
 5667      464F525F 
 5667      52455355 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 190


 5668              	.LASF16:
 5669 0bb1 75696E74 		.ascii	"uint8_t\000"
 5669      385F7400 
 5670              	.LASF448:
 5671 0bb9 5F5F6275 		.ascii	"__builtin_puts\000"
 5671      696C7469 
 5671      6E5F7075 
 5671      747300
 5672              	.LASF207:
 5673 0bc8 43595F43 		.ascii	"CY_CTDAC_FORMAT_UNSIGNED\000"
 5673      54444143 
 5673      5F464F52 
 5673      4D41545F 
 5673      554E5349 
 5674              	.LASF338:
 5675 0be1 5F636C6F 		.ascii	"_close\000"
 5675      736500
 5676              	.LASF356:
 5677 0be8 5F5F7364 		.ascii	"__sdidinit\000"
 5677      6964696E 
 5677      697400
 5678              	.LASF126:
 5679 0bf3 63707573 		.ascii	"cpussIpc0Irq\000"
 5679      73497063 
 5679      30497271 
 5679      00
 5680              	.LASF416:
 5681 0c00 77726974 		.ascii	"write_voice\000"
 5681      655F766F 
 5681      69636500 
 5682              	.LASF76:
 5683 0c0c 52414E47 		.ascii	"RANGE_INTR_SET\000"
 5683      455F494E 
 5683      54525F53 
 5683      455400
 5684              	.LASF291:
 5685 0c1b 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 5685      434F4E46 
 5685      49475F53 
 5685      54525543 
 5685      5400
 5686              	.LASF266:
 5687 0c2d 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 5687      77697463 
 5687      68537143 
 5687      74726C00 
 5688              	.LASF269:
 5689 0c3d 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 5689      74635F73 
 5689      61725F63 
 5689      6F6E6669 
 5689      675F7400 
 5690              	.LASF270:
 5691 0c51 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 5691      625F7363 
 5691      625F7561 
 5691      72745F68 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 191


 5691      616E646C 
 5692              	.LASF400:
 5693 0c70 43795F43 		.ascii	"Cy_CTDAC_Disable\000"
 5693      54444143 
 5693      5F446973 
 5693      61626C65 
 5693      00
 5694              	.LASF264:
 5695 0c81 72616E67 		.ascii	"rangeIntrMask\000"
 5695      65496E74 
 5695      724D6173 
 5695      6B00
 5696              	.LASF349:
 5697 0c8f 5F737464 		.ascii	"_stdin\000"
 5697      696E00
 5698              	.LASF381:
 5699 0c96 5F67616D 		.ascii	"_gamma_signgam\000"
 5699      6D615F73 
 5699      69676E67 
 5699      616D00
 5700              	.LASF184:
 5701 0ca5 63707573 		.ascii	"cpussRam0Ctl0\000"
 5701      7352616D 
 5701      3043746C 
 5701      3000
 5702              	.LASF12:
 5703 0cb3 6C6F6E67 		.ascii	"long long int\000"
 5703      206C6F6E 
 5703      6720696E 
 5703      7400
 5704              	.LASF111:
 5705 0cc1 69706342 		.ascii	"ipcBase\000"
 5705      61736500 
 5706              	.LASF152:
 5707 0cc9 64774368 		.ascii	"dwChCtlPrioPos\000"
 5707      43746C50 
 5707      72696F50 
 5707      6F7300
 5708              	.LASF91:
 5709 0cd8 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 5709      53574954 
 5709      43485F44 
 5709      535F4354 
 5709      524C00
 5710              	.LASF438:
 5711 0ceb 7072696E 		.ascii	"printf\000"
 5711      746600
 5712              	.LASF328:
 5713 0cf2 5F626173 		.ascii	"_base\000"
 5713      6500
 5714              	.LASF361:
 5715 0cf8 5F667265 		.ascii	"_freelist\000"
 5715      656C6973 
 5715      7400
 5716              	.LASF78:
 5717 0d02 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 5717      455F494E 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 192


 5717      54525F4D 
 5717      41534B45 
 5717      4400
 5718              	.LASF376:
 5719 0d14 5F616464 		.ascii	"_add\000"
 5719      00
 5720              	.LASF142:
 5721 0d19 666C6173 		.ascii	"flashWriteDelay\000"
 5721      68577269 
 5721      74654465 
 5721      6C617900 
 5722              	.LASF393:
 5723 0d29 5F776372 		.ascii	"_wcrtomb_state\000"
 5723      746F6D62 
 5723      5F737461 
 5723      746500
 5724              	.LASF332:
 5725 0d38 5F66696C 		.ascii	"_file\000"
 5725      6500
 5726              	.LASF5:
 5727 0d3e 5F5F696E 		.ascii	"__int16_t\000"
 5727      7431365F 
 5727      7400
 5728              	.LASF108:
 5729 0d48 6873696F 		.ascii	"hsiomBase\000"
 5729      6D426173 
 5729      6500
 5730              	.LASF65:
 5731 0d52 4348414E 		.ascii	"CHAN_RESULT\000"
 5731      5F524553 
 5731      554C5400 
 5732              	.LASF100:
 5733 0d5e 43544441 		.ascii	"CTDAC_Type\000"
 5733      435F5479 
 5733      706500
 5734              	.LASF158:
 5735 0d69 70657269 		.ascii	"periTrGrOffset\000"
 5735      54724772 
 5735      4F666673 
 5735      657400
 5736              	.LASF357:
 5737 0d78 5F5F636C 		.ascii	"__cleanup\000"
 5737      65616E75 
 5737      7000
 5738              	.LASF25:
 5739 0d82 494E5452 		.ascii	"INTR\000"
 5739      00
 5740              	.LASF75:
 5741 0d87 52414E47 		.ascii	"RANGE_INTR\000"
 5741      455F494E 
 5741      545200
 5742              	.LASF300:
 5743 0d92 5F6D6273 		.ascii	"_mbstate_t\000"
 5743      74617465 
 5743      5F7400
 5744              	.LASF124:
 5745 0d9d 63707573 		.ascii	"cpussDwChNr\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 193


 5745      73447743 
 5745      684E7200 
 5746              	.LASF26:
 5747 0da9 494E5452 		.ascii	"INTR_MASK\000"
 5747      5F4D4153 
 5747      4B00
 5748              	.LASF55:
 5749 0db3 53414D50 		.ascii	"SAMPLE_CTRL\000"
 5749      4C455F43 
 5749      54524C00 
 5750              	.LASF261:
 5751 0dbf 6368616E 		.ascii	"chanConfig\000"
 5751      436F6E66 
 5751      696700
 5752              	.LASF415:
 5753 0dca 4D69635F 		.ascii	"Mic_mV\000"
 5753      6D5600
 5754              	.LASF281:
 5755 0dd1 74784275 		.ascii	"txBufSize\000"
 5755      6653697A 
 5755      6500
 5756              	.LASF391:
 5757 0ddb 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5757      746F7763 
 5757      5F737461 
 5757      746500
 5758              	.LASF318:
 5759 0dea 5F5F746D 		.ascii	"__tm_isdst\000"
 5759      5F697364 
 5759      737400
 5760              	.LASF172:
 5761 0df5 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5761      50727443 
 5761      66675369 
 5761      6F4F6666 
 5761      73657400 
 5762              	.LASF89:
 5763 0e09 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 5763      53574954 
 5763      43485F43 
 5763      4C454152 
 5763      3000
 5764              	.LASF394:
 5765 0e1b 5F776373 		.ascii	"_wcsrtombs_state\000"
 5765      72746F6D 
 5765      62735F73 
 5765      74617465 
 5765      00
 5766              	.LASF441:
 5767 0e2c 43617053 		.ascii	"CapSense_ProcessAllWidgets\000"
 5767      656E7365 
 5767      5F50726F 
 5767      63657373 
 5767      416C6C57 
 5768              	.LASF186:
 5769 0e47 63707573 		.ascii	"cpussRam2Ctl0\000"
 5769      7352616D 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 194


 5769      3243746C 
 5769      3000
 5770              	.LASF259:
 5771 0e55 72616E67 		.ascii	"rangeCond\000"
 5771      65436F6E 
 5771      6400
 5772              	.LASF395:
 5773 0e5f 5F685F65 		.ascii	"_h_errno\000"
 5773      72726E6F 
 5773      00
 5774              	.LASF206:
 5775 0e68 63795F65 		.ascii	"cy_en_ctdac_update_t\000"
 5775      6E5F6374 
 5775      6461635F 
 5775      75706461 
 5775      74655F74 
 5776              	.LASF430:
 5777 0e7d 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 5777      41525F53 
 5777      746F7043 
 5777      6F6E7665 
 5777      727400
 5778              	.LASF27:
 5779 0e90 494E5452 		.ascii	"INTR_MASKED\000"
 5779      5F4D4153 
 5779      4B454400 
 5780              	.LASF61:
 5781 0e9c 53544152 		.ascii	"START_CTRL\000"
 5781      545F4354 
 5781      524C00
 5782              	.LASF280:
 5783 0ea7 74784275 		.ascii	"txBuf\000"
 5783      6600
 5784              	.LASF198:
 5785 0ead 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 5785      5953434C 
 5785      4B5F4449 
 5785      565F3136 
 5785      5F355F42 
 5786              	.LASF232:
 5787 0ec4 75706461 		.ascii	"updateMode\000"
 5787      74654D6F 
 5787      646500
 5788              	.LASF44:
 5789 0ecf 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 5789      494E5452 
 5789      5F4D4153 
 5789      4B454400 
 5790              	.LASF143:
 5791 0edf 666C6173 		.ascii	"flashProgramDelay\000"
 5791      6850726F 
 5791      6772616D 
 5791      44656C61 
 5791      7900
 5792              	.LASF165:
 5793 0ef1 70657269 		.ascii	"periDiv16CtlOffset\000"
 5793      44697631 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 195


 5793      3643746C 
 5793      4F666673 
 5793      657400
 5794              	.LASF314:
 5795 0f04 5F5F746D 		.ascii	"__tm_mon\000"
 5795      5F6D6F6E 
 5795      00
 5796              	.LASF244:
 5797 0f0d 64697669 		.ascii	"dividerIntValue\000"
 5797      64657249 
 5797      6E745661 
 5797      6C756500 
 5798              	.LASF7:
 5799 0f1d 73686F72 		.ascii	"short unsigned int\000"
 5799      7420756E 
 5799      7369676E 
 5799      65642069 
 5799      6E7400
 5800              	.LASF273:
 5801 0f30 72785269 		.ascii	"rxRingBuf\000"
 5801      6E674275 
 5801      6600
 5802              	.LASF102:
 5803 0f3a 6C6F6E67 		.ascii	"long double\000"
 5803      20646F75 
 5803      626C6500 
 5804              	.LASF18:
 5805 0f46 75696E74 		.ascii	"uint16_t\000"
 5805      31365F74 
 5805      00
 5806              	.LASF107:
 5807 0f4f 70726F74 		.ascii	"protBase\000"
 5807      42617365 
 5807      00
 5808              	.LASF45:
 5809 0f58 5644445F 		.ascii	"VDD_INTR_SET\000"
 5809      494E5452 
 5809      5F534554 
 5809      00
 5810              	.LASF157:
 5811 0f65 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 5811      5472436D 
 5811      64477253 
 5811      656C4D73 
 5811      6B00
 5812              	.LASF365:
 5813 0f77 5F617465 		.ascii	"_atexit0\000"
 5813      78697430 
 5813      00
 5814              	.LASF256:
 5815 0f80 73616D70 		.ascii	"sampleTime01\000"
 5815      6C655469 
 5815      6D653031 
 5815      00
 5816              	.LASF131:
 5817 0f8d 73727373 		.ascii	"srssNumHfroot\000"
 5817      4E756D48 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 196


 5817      66726F6F 
 5817      7400
 5818              	.LASF197:
 5819 0f9b 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 5819      5953434C 
 5819      4B5F4449 
 5819      565F3136 
 5819      5F424954 
 5820              	.LASF265:
 5821 0fb0 6D757853 		.ascii	"muxSwitch\000"
 5821      77697463 
 5821      6800
 5822              	.LASF147:
 5823 0fba 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5823      6843746C 
 5823      4D61696E 
 5823      57733246 
 5823      72657100 
 5824              	.LASF156:
 5825 0fce 70657269 		.ascii	"periTrCmdOffset\000"
 5825      5472436D 
 5825      644F6666 
 5825      73657400 
 5826              	.LASF324:
 5827 0fde 5F617465 		.ascii	"_atexit\000"
 5827      78697400 
 5828              	.LASF345:
 5829 0fe6 5F6D6273 		.ascii	"_mbstate\000"
 5829      74617465 
 5829      00
 5830              	.LASF296:
 5831 0fef 5F5F7763 		.ascii	"__wch\000"
 5831      6800
 5832              	.LASF21:
 5833 0ff5 73697A65 		.ascii	"sizetype\000"
 5833      74797065 
 5833      00
 5834              	.LASF247:
 5835 0ffe 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 5835      41525F52 
 5835      45545552 
 5835      4E5F5354 
 5835      41545553 
 5836              	.LASF182:
 5837 1013 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 5837      73436D34 
 5837      4E6D6943 
 5837      746C4F66 
 5837      66736574 
 5838              	.LASF177:
 5839 1028 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5839      73436D34 
 5839      50777243 
 5839      746C4F66 
 5839      66736574 
 5840              	.LASF164:
 5841 103d 70657269 		.ascii	"periDiv8CtlOffset\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 197


 5841      44697638 
 5841      43746C4F 
 5841      66667365 
 5841      7400
 5842              	.LASF50:
 5843 104f 52455345 		.ascii	"RESERVED2\000"
 5843      52564544 
 5843      3200
 5844              	.LASF64:
 5845 1059 52455345 		.ascii	"RESERVED3\000"
 5845      52564544 
 5845      3300
 5846              	.LASF66:
 5847 1063 52455345 		.ascii	"RESERVED4\000"
 5847      52564544 
 5847      3400
 5848              	.LASF80:
 5849 106d 52455345 		.ascii	"RESERVED5\000"
 5849      52564544 
 5849      3500
 5850              	.LASF82:
 5851 1077 52455345 		.ascii	"RESERVED6\000"
 5851      52564544 
 5851      3600
 5852              	.LASF399:
 5853 1081 43795F53 		.ascii	"Cy_SAR_Disable\000"
 5853      41525F44 
 5853      69736162 
 5853      6C6500
 5854              	.LASF87:
 5855 1090 52455345 		.ascii	"RESERVED8\000"
 5855      52564544 
 5855      3800
 5856              	.LASF90:
 5857 109a 52455345 		.ascii	"RESERVED9\000"
 5857      52564544 
 5857      3900
 5858              	.LASF421:
 5859 10a4 4144435F 		.ascii	"ADC_allConfigs\000"
 5859      616C6C43 
 5859      6F6E6669 
 5859      677300
 5860              	.LASF221:
 5861 10b3 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_BUFFERED\000"
 5861      54444143 
 5861      5F444547 
 5861      4C495443 
 5861      484D4F44 
 5862              	.LASF228:
 5863 10d2 43595F43 		.ascii	"CY_CTDAC_OUTPUT_UNBUFFERED\000"
 5863      54444143 
 5863      5F4F5554 
 5863      5055545F 
 5863      554E4255 
 5864              	.LASF74:
 5865 10ed 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 5865      52415445 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 198


 5865      5F494E54 
 5865      525F4D41 
 5865      534B4544 
 5866              	.LASF92:
 5867 1102 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 5867      53574954 
 5867      43485F53 
 5867      515F4354 
 5867      524C00
 5868              	.LASF9:
 5869 1115 6C6F6E67 		.ascii	"long int\000"
 5869      20696E74 
 5869      00
 5870              	.LASF113:
 5871 111e 63707573 		.ascii	"cpussVersion\000"
 5871      73566572 
 5871      73696F6E 
 5871      00
 5872              	.LASF418:
 5873 112b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5873      52784275 
 5873      66666572 
 5873      00
 5874              	.LASF117:
 5875 1138 6770696F 		.ascii	"gpioVersion\000"
 5875      56657273 
 5875      696F6E00 
 5876              	.LASF116:
 5877 1144 666C6173 		.ascii	"flashcVersion\000"
 5877      68635665 
 5877      7273696F 
 5877      6E00
 5878              	.LASF138:
 5879 1152 70726F74 		.ascii	"protBusMasterMask\000"
 5879      4275734D 
 5879      61737465 
 5879      724D6173 
 5879      6B00
 5880              	.LASF368:
 5881 1164 5F5F7366 		.ascii	"__sf\000"
 5881      00
 5882              	.LASF307:
 5883 1169 5F736967 		.ascii	"_sign\000"
 5883      6E00
 5884              	.LASF236:
 5885 116f 64656570 		.ascii	"deepSleep\000"
 5885      536C6565 
 5885      7000
 5886              	.LASF58:
 5887 1179 52414E47 		.ascii	"RANGE_THRES\000"
 5887      455F5448 
 5887      52455300 
 5888              	.LASF355:
 5889 1185 5F637572 		.ascii	"_current_locale\000"
 5889      72656E74 
 5889      5F6C6F63 
 5889      616C6500 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 199


 5890              	.LASF434:
 5891 1195 56444143 		.ascii	"VDAC_1_Start\000"
 5891      5F315F53 
 5891      74617274 
 5891      00
 5892              	.LASF190:
 5893 11a2 63686172 		.ascii	"char_t\000"
 5893      5F7400
 5894              	.LASF343:
 5895 11a9 5F646174 		.ascii	"_data\000"
 5895      6100
 5896              	.LASF63:
 5897 11af 4348414E 		.ascii	"CHAN_WORK\000"
 5897      5F574F52 
 5897      4B00
 5898              	.LASF297:
 5899 11b9 5F5F7763 		.ascii	"__wchb\000"
 5899      686200
 5900              	.LASF34:
 5901 11c0 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5901      494E5F47 
 5901      50494F35 
 5901      5600
 5902              	.LASF315:
 5903 11ce 5F5F746D 		.ascii	"__tm_year\000"
 5903      5F796561 
 5903      7200
 5904              	.LASF282:
 5905 11d8 74784C65 		.ascii	"txLeftToTransmit\000"
 5905      6674546F 
 5905      5472616E 
 5905      736D6974 
 5905      00
 5906              	.LASF336:
 5907 11e9 5F777269 		.ascii	"_write\000"
 5907      746500
 5908              	.LASF24:
 5909 11f0 4F55545F 		.ascii	"OUT_INV\000"
 5909      494E5600 
 5910              	.LASF398:
 5911 11f8 5F756E75 		.ascii	"_unused\000"
 5911      73656400 
 5912              	.LASF3:
 5913 1200 5F5F7569 		.ascii	"__uint8_t\000"
 5913      6E74385F 
 5913      7400
 5914              	.LASF364:
 5915 120a 5F6E6577 		.ascii	"_new\000"
 5915      00
 5916              	.LASF289:
 5917 120f 6D697363 		.ascii	"miscConfig\000"
 5917      436F6E66 
 5917      696700
 5918              	.LASF306:
 5919 121a 5F6D6178 		.ascii	"_maxwds\000"
 5919      77647300 
 5920              	.LASF387:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 200


 5921 1222 5F6C3634 		.ascii	"_l64a_buf\000"
 5921      615F6275 
 5921      6600
 5922              	.LASF354:
 5923 122c 5F637572 		.ascii	"_current_category\000"
 5923      72656E74 
 5923      5F636174 
 5923      65676F72 
 5923      7900
 5924              	.LASF168:
 5925 123e 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5925      50727449 
 5925      6E747243 
 5925      66674F66 
 5925      66736574 
 5926              	.LASF134:
 5927 1253 70617373 		.ascii	"passSarChannels\000"
 5927      53617243 
 5927      68616E6E 
 5927      656C7300 
 5928              	.LASF167:
 5929 1263 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 5929      44697632 
 5929      345F3543 
 5929      746C4F66 
 5929      66736574 
 5930              	.LASF181:
 5931 1278 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 5931      73436D30 
 5931      4E6D6943 
 5931      746C4F66 
 5931      66736574 
 5932              	.LASF218:
 5933 128d 63795F65 		.ascii	"cy_en_ctdac_output_mode_t\000"
 5933      6E5F6374 
 5933      6461635F 
 5933      6F757470 
 5933      75745F6D 
 5934              	.LASF2:
 5935 12a7 5F5F696E 		.ascii	"__int8_t\000"
 5935      74385F74 
 5935      00
 5936              	.LASF174:
 5937 12b0 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5937      73436D34 
 5937      436C6F63 
 5937      6B43746C 
 5937      4F666673 
 5938              	.LASF302:
 5939 12c7 5F5F554C 		.ascii	"__ULong\000"
 5939      6F6E6700 
 5940              	.LASF179:
 5941 12cf 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5941      73547269 
 5941      6D526F6D 
 5941      43746C4F 
 5941      66667365 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 201


 5942              	.LASF257:
 5943 12e5 73616D70 		.ascii	"sampleTime23\000"
 5943      6C655469 
 5943      6D653233 
 5943      00
 5944              	.LASF309:
 5945 12f2 5F5F746D 		.ascii	"__tm\000"
 5945      00
 5946              	.LASF275:
 5947 12f7 72785269 		.ascii	"rxRingBufHead\000"
 5947      6E674275 
 5947      66486561 
 5947      6400
 5948              	.LASF344:
 5949 1305 5F6C6F63 		.ascii	"_lock\000"
 5949      6B00
 5950              	.LASF362:
 5951 130b 5F637674 		.ascii	"_cvtlen\000"
 5951      6C656E00 
 5952              	.LASF118:
 5953 1313 6873696F 		.ascii	"hsiomVersion\000"
 5953      6D566572 
 5953      73696F6E 
 5953      00
 5954              	.LASF205:
 5955 1320 43595F43 		.ascii	"CY_CTDAC_UPDATE_STROBE_LEVEL\000"
 5955      54444143 
 5955      5F555044 
 5955      4154455F 
 5955      5354524F 
 5956              	.LASF11:
 5957 133d 6C6F6E67 		.ascii	"long unsigned int\000"
 5957      20756E73 
 5957      69676E65 
 5957      6420696E 
 5957      7400
 5958              	.LASF183:
 5959 134f 63707573 		.ascii	"cpussRomCtl\000"
 5959      73526F6D 
 5959      43746C00 
 5960              	.LASF371:
 5961 135b 5F6E696F 		.ascii	"_niobs\000"
 5961      627300
 5962              	.LASF295:
 5963 1362 77696E74 		.ascii	"wint_t\000"
 5963      5F7400
 5964              	.LASF427:
 5965 1369 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 5965      41525F47 
 5965      65745265 
 5965      73756C74 
 5965      313600
 5966              	.LASF405:
 5967 137c 4144435F 		.ascii	"ADC_Stop\000"
 5967      53746F70 
 5967      00
 5968              	.LASF19:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 202


 5969 1385 696E7433 		.ascii	"int32_t\000"
 5969      325F7400 
 5970              	.LASF88:
 5971 138d 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5971      53574954 
 5971      43483000 
 5972              	.LASF233:
 5973 1399 6465676C 		.ascii	"deglitchMode\000"
 5973      69746368 
 5973      4D6F6465 
 5973      00
 5974              	.LASF68:
 5975 13a6 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5975      5F524553 
 5975      554C545F 
 5975      55504441 
 5975      54454400 
 5976              	.LASF413:
 5977 13ba 4144435F 		.ascii	"ADC_GetResult16\000"
 5977      47657452 
 5977      6573756C 
 5977      74313600 
 5978              	.LASF321:
 5979 13ca 5F64736F 		.ascii	"_dso_handle\000"
 5979      5F68616E 
 5979      646C6500 
 5980              	.LASF49:
 5981 13d6 43544441 		.ascii	"CTDAC_SW_CLEAR\000"
 5981      435F5357 
 5981      5F434C45 
 5981      415200
 5982              	.LASF433:
 5983 13e5 43795F53 		.ascii	"Cy_SysLib_DelayUs\000"
 5983      79734C69 
 5983      625F4465 
 5983      6C617955 
 5983      7300
 5984              	.LASF176:
 5985 13f7 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5985      73436D30 
 5985      53746174 
 5985      75734F66 
 5985      66736574 
 5986              	.LASF255:
 5987 140c 73616D70 		.ascii	"sampleCtrl\000"
 5987      6C654374 
 5987      726C00
 5988              	.LASF151:
 5989 1417 64774368 		.ascii	"dwChSize\000"
 5989      53697A65 
 5989      00
 5990              	.LASF363:
 5991 1420 5F637674 		.ascii	"_cvtbuf\000"
 5991      62756600 
 5992              	.LASF4:
 5993 1428 756E7369 		.ascii	"unsigned char\000"
 5993      676E6564 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 203


 5993      20636861 
 5993      7200
 5994              	.LASF95:
 5995 1436 414E415F 		.ascii	"ANA_TRIM0\000"
 5995      5452494D 
 5995      3000
 5996              	.LASF96:
 5997 1440 414E415F 		.ascii	"ANA_TRIM1\000"
 5997      5452494D 
 5997      3100
 5998              	.LASF10:
 5999 144a 5F5F7569 		.ascii	"__uint32_t\000"
 5999      6E743332 
 5999      5F7400
 6000              	.LASF99:
 6001 1455 4750494F 		.ascii	"GPIO_Type\000"
 6001      5F547970 
 6001      6500
 6002              	.LASF188:
 6003 145f 6970634C 		.ascii	"ipcLockStatusOffset\000"
 6003      6F636B53 
 6003      74617475 
 6003      734F6666 
 6003      73657400 
 6004              	.LASF29:
 6005 1473 494E5452 		.ascii	"INTR_CFG\000"
 6005      5F434647 
 6005      00
 6006              	.LASF389:
 6007 147c 5F676574 		.ascii	"_getdate_err\000"
 6007      64617465 
 6007      5F657272 
 6007      00
 6008              	.LASF199:
 6009 1489 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 6009      5953434C 
 6009      4B5F4449 
 6009      565F3234 
 6009      5F355F42 
 6010              	.LASF73:
 6011 14a0 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 6011      52415445 
 6011      5F494E54 
 6011      525F4D41 
 6011      534B00
 6012              	.LASF201:
 6013 14b3 43595F43 		.ascii	"CY_CTDAC_UPDATE_DIRECT_WRITE\000"
 6013      54444143 
 6013      5F555044 
 6013      4154455F 
 6013      44495245 
 6014              	.LASF94:
 6015 14d0 52455345 		.ascii	"RESERVED10\000"
 6015      52564544 
 6015      313000
 6016              	.LASF217:
 6017 14db 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VREF\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 204


 6017      54444143 
 6017      5F4F5554 
 6017      5055545F 
 6017      56524546 
 6018              	.LASF144:
 6019 14f0 666C6173 		.ascii	"flashEraseDelay\000"
 6019      68457261 
 6019      73654465 
 6019      6C617900 
 6020              	.LASF195:
 6021 1500 5F426F6F 		.ascii	"_Bool\000"
 6021      6C00
 6022              	.LASF290:
 6023 1506 636C6B44 		.ascii	"clkDivider\000"
 6023      69766964 
 6023      657200
 6024              	.LASF53:
 6025 1511 43544441 		.ascii	"CTDAC_V1_Type\000"
 6025      435F5631 
 6025      5F547970 
 6025      6500
 6026              	.LASF200:
 6027 151f 63795F65 		.ascii	"cy_en_divider_types_t\000"
 6027      6E5F6469 
 6027      76696465 
 6027      725F7479 
 6027      7065735F 
 6028              	.LASF327:
 6029 1535 5F5F7362 		.ascii	"__sbuf\000"
 6029      756600
 6030              	.LASF72:
 6031 153c 53415455 		.ascii	"SATURATE_INTR_SET\000"
 6031      52415445 
 6031      5F494E54 
 6031      525F5345 
 6031      5400
 6032              	.LASF406:
 6033 154e 4144435F 		.ascii	"ADC_StopConvert\000"
 6033      53746F70 
 6033      436F6E76 
 6033      65727400 
 6034              	.LASF420:
 6035 155e 4144435F 		.ascii	"ADC_currentConfig\000"
 6035      63757272 
 6035      656E7443 
 6035      6F6E6669 
 6035      6700
 6036              	.LASF52:
 6037 1570 43544441 		.ascii	"CTDAC_VAL_NXT\000"
 6037      435F5641 
 6037      4C5F4E58 
 6037      5400
 6038              	.LASF439:
 6039 157e 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6039      656E7365 
 6039      5F536361 
 6039      6E416C6C 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 205


 6039      57696467 
 6040              	.LASF231:
 6041 1596 666F726D 		.ascii	"formatMode\000"
 6041      61744D6F 
 6041      646500
 6042              	.LASF367:
 6043 15a1 5F5F7367 		.ascii	"__sglue\000"
 6043      6C756500 
 6044              	.LASF408:
 6045 15a9 56444143 		.ascii	"VDAC_1_Stop\000"
 6045      5F315F53 
 6045      746F7000 
 6046              	.LASF140:
 6047 15b5 666C6173 		.ascii	"flashRwwRequired\000"
 6047      68527777 
 6047      52657175 
 6047      69726564 
 6047      00
 6048              	.LASF378:
 6049 15c6 5F737472 		.ascii	"_strtok_last\000"
 6049      746F6B5F 
 6049      6C617374 
 6049      00
 6050              	.LASF385:
 6051 15d3 5F6D6274 		.ascii	"_mbtowc_state\000"
 6051      6F77635F 
 6051      73746174 
 6051      6500
 6052              	.LASF169:
 6053 15e1 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 6053      50727443 
 6053      66674F66 
 6053      66736574 
 6053      00
 6054              	.LASF246:
 6055 15f2 63795F73 		.ascii	"cy_stc_ctdac_config_t\000"
 6055      74635F63 
 6055      74646163 
 6055      5F636F6E 
 6055      6669675F 
 6056              	.LASF404:
 6057 1608 70696E4E 		.ascii	"pinNum\000"
 6057      756D00
 6058              	.LASF422:
 6059 160f 55415254 		.ascii	"UART_context\000"
 6059      5F636F6E 
 6059      74657874 
 6059      00
 6060              	.LASF219:
 6061 161c 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_NONE\000"
 6061      54444143 
 6061      5F444547 
 6061      4C495443 
 6061      484D4F44 
 6062              	.LASF43:
 6063 1637 5644445F 		.ascii	"VDD_INTR_MASK\000"
 6063      494E5452 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 206


 6063      5F4D4153 
 6063      4B00
 6064              	.LASF320:
 6065 1645 5F666E61 		.ascii	"_fnargs\000"
 6065      72677300 
 6066              	.LASF1:
 6067 164d 7369676E 		.ascii	"signed char\000"
 6067      65642063 
 6067      68617200 
 6068              	.LASF372:
 6069 1659 5F696F62 		.ascii	"_iobs\000"
 6069      7300
 6070              	.LASF150:
 6071 165f 64774368 		.ascii	"dwChOffset\000"
 6071      4F666673 
 6071      657400
 6072              	.LASF347:
 6073 166a 5F726565 		.ascii	"_reent\000"
 6073      6E7400
 6074              	.LASF123:
 6075 1671 63707573 		.ascii	"cpussIpcIrqNr\000"
 6075      73497063 
 6075      4972714E 
 6075      7200
 6076              	.LASF153:
 6077 167f 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 6077      43746C50 
 6077      7265656D 
 6077      70746162 
 6077      6C65506F 
 6078              	.LASF235:
 6079 1695 6F757470 		.ascii	"outputBuffer\000"
 6079      75744275 
 6079      66666572 
 6079      00
 6080              	.LASF446:
 6081 16a2 6D61696E 		.ascii	"main\000"
 6081      00
 6082              	.LASF175:
 6083 16a7 63707573 		.ascii	"cpussCm4StatusOffset\000"
 6083      73436D34 
 6083      53746174 
 6083      75734F66 
 6083      66736574 
 6084              	.LASF189:
 6085 16bc 63795F73 		.ascii	"cy_stc_device_t\000"
 6085      74635F64 
 6085      65766963 
 6085      655F7400 
 6086              	.LASF263:
 6087 16cc 73617449 		.ascii	"satIntrMask\000"
 6087      6E74724D 
 6087      61736B00 
 6088              	.LASF209:
 6089 16d8 63795F65 		.ascii	"cy_en_ctdac_format_t\000"
 6089      6E5F6374 
 6089      6461635F 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 207


 6089      666F726D 
 6089      61745F74 
 6090              	.LASF93:
 6091 16ed 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 6091      53574954 
 6091      43485F53 
 6091      54415455 
 6091      5300
 6092              	.LASF213:
 6093 16ff 43595F43 		.ascii	"CY_CTDAC_OUTPUT_HIGHZ\000"
 6093      54444143 
 6093      5F4F5554 
 6093      5055545F 
 6093      48494748 
 6094              	.LASF322:
 6095 1715 5F666E74 		.ascii	"_fntypes\000"
 6095      79706573 
 6095      00
 6096              	.LASF120:
 6097 171e 70657269 		.ascii	"periVersion\000"
 6097      56657273 
 6097      696F6E00 
 6098              	.LASF225:
 6099 172a 43595F43 		.ascii	"CY_CTDAC_REFSOURCE_VDDA\000"
 6099      54444143 
 6099      5F524546 
 6099      534F5552 
 6099      43455F56 
 6100              	.LASF212:
 6101 1742 63795F65 		.ascii	"cy_en_ctdac_deep_sleep_t\000"
 6101      6E5F6374 
 6101      6461635F 
 6101      64656570 
 6101      5F736C65 
 6102              	.LASF267:
 6103 175b 636F6E66 		.ascii	"configRouting\000"
 6103      6967526F 
 6103      7574696E 
 6103      6700
 6104              	.LASF110:
 6105 1769 70617373 		.ascii	"passBase\000"
 6105      42617365 
 6105      00
 6106              	.LASF57:
 6107 1772 53414D50 		.ascii	"SAMPLE_TIME23\000"
 6107      4C455F54 
 6107      494D4532 
 6107      3300
 6108              	.LASF414:
 6109 1780 4144435F 		.ascii	"ADC_Result\000"
 6109      52657375 
 6109      6C7400
 6110              	.LASF35:
 6111 178b 52455345 		.ascii	"RESERVED1\000"
 6111      52564544 
 6111      3100
 6112              	.LASF166:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 208


 6113 1795 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 6113      44697631 
 6113      365F3543 
 6113      746C4F66 
 6113      66736574 
 6114              	.LASF85:
 6115 17aa 53544154 		.ascii	"STATUS\000"
 6115      555300
 6116              	.LASF340:
 6117 17b1 5F6E6275 		.ascii	"_nbuf\000"
 6117      6600
 6118              	.LASF377:
 6119 17b7 5F756E75 		.ascii	"_unused_rand\000"
 6119      7365645F 
 6119      72616E64 
 6119      00
 6120              	.LASF149:
 6121 17c4 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 6121      6843746C 
 6121      4D61696E 
 6121      57733446 
 6121      72657100 
 6122              	.LASF62:
 6123 17d8 4348414E 		.ascii	"CHAN_CONFIG\000"
 6123      5F434F4E 
 6123      46494700 
 6124              	.LASF84:
 6125 17e4 52455345 		.ascii	"RESERVED7\000"
 6125      52564544 
 6125      3700
 6126              	.LASF253:
 6127 17ee 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 6127      6E5F7361 
 6127      725F7261 
 6127      6E67655F 
 6127      64657465 
 6128              	.LASF346:
 6129 1811 5F666C61 		.ascii	"_flags2\000"
 6129      67733200 
 6130              	.LASF51:
 6131 1819 43544441 		.ascii	"CTDAC_VAL\000"
 6131      435F5641 
 6131      4C00
 6132              	.LASF323:
 6133 1823 5F69735F 		.ascii	"_is_cxa\000"
 6133      63786100 
 6134              	.LASF277:
 6135 182b 72784275 		.ascii	"rxBuf\000"
 6135      6600
 6136              	.LASF374:
 6137 1831 5F736565 		.ascii	"_seed\000"
 6137      6400
 6138              	.LASF382:
 6139 1837 5F72616E 		.ascii	"_rand_next\000"
 6139      645F6E65 
 6139      787400
 6140              	.LASF337:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccRcQgKK.s 			page 209


 6141 1842 5F736565 		.ascii	"_seek\000"
 6141      6B00
 6142              	.LASF305:
 6143 1848 5F6E6578 		.ascii	"_next\000"
 6143      7400
 6144              	.LASF56:
 6145 184e 53414D50 		.ascii	"SAMPLE_TIME01\000"
 6145      4C455F54 
 6145      494D4530 
 6145      3100
 6146              	.LASF119:
 6147 185c 69706356 		.ascii	"ipcVersion\000"
 6147      65727369 
 6147      6F6E00
 6148              	.LASF351:
 6149 1867 5F737464 		.ascii	"_stderr\000"
 6149      65727200 
 6150              	.LASF397:
 6151 186f 5F6E6D61 		.ascii	"_nmalloc\000"
 6151      6C6C6F63 
 6151      00
 6152              	.LASF339:
 6153 1878 5F756275 		.ascii	"_ubuf\000"
 6153      6600
 6154              	.LASF278:
 6155 187e 72784275 		.ascii	"rxBufSize\000"
 6155      6653697A 
 6155      6500
 6156              	.LASF54:
 6157 1888 4354524C 		.ascii	"CTRL\000"
 6157      00
 6158              	.LASF425:
 6159 188d 766F6963 		.ascii	"voice\000"
 6159      6500
 6160              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
