ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"main_cm4.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.write_voice,"ax",%progbits
  21              		.align	2
  22              		.global	write_voice
  23              		.thumb
  24              		.thumb_func
  25              		.type	write_voice, %function
  26              	write_voice:
  27              	.LFB536:
  28              		.file 1 "main_cm4.c"
   1:main_cm4.c    **** /* ========================================
   2:main_cm4.c    ****  *
   3:main_cm4.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:main_cm4.c    ****  * All Rights Reserved
   5:main_cm4.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main_cm4.c    ****  *
   7:main_cm4.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main_cm4.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:main_cm4.c    ****  *
  10:main_cm4.c    ****  * ========================================
  11:main_cm4.c    **** */
  12:main_cm4.c    **** #include "project.h"
  13:main_cm4.c    **** #include <stdio.h>
  14:main_cm4.c    **** 
  15:main_cm4.c    **** #define UART_HW ((CySCB_Type *) UART_SCB__HW)
  16:main_cm4.c    **** 
  17:main_cm4.c    **** #define FREQ 12000
  18:main_cm4.c    **** #define TIME 10
  19:main_cm4.c    **** #define SAMPLES FREQ*TIME
  20:main_cm4.c    **** 
  21:main_cm4.c    **** int write_voice();
  22:main_cm4.c    **** int play_voice();
  23:main_cm4.c    **** 
  24:main_cm4.c    **** int8_t voice[SAMPLES];
  25:main_cm4.c    **** 
  26:main_cm4.c    **** int main(void)
  27:main_cm4.c    **** {
  28:main_cm4.c    ****     __enable_irq(); /* Enable global interrupts. */
  29:main_cm4.c    ****     
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 2


  30:main_cm4.c    ****     UART_Start();
  31:main_cm4.c    ****     CapSense_Start();
  32:main_cm4.c    ****     setvbuf(stdin, NULL, _IONBF, 0);
  33:main_cm4.c    ****     
  34:main_cm4.c    ****     printf("\x1b[2J\x1b[H");
  35:main_cm4.c    ****     printf("------------------- CapSense VoiceRepeater log -------------------\r\n\n");
  36:main_cm4.c    **** 
  37:main_cm4.c    ****     for(;;)
  38:main_cm4.c    ****     {
  39:main_cm4.c    ****         CapSense_ScanAllWidgets();
  40:main_cm4.c    ****         if (!CapSense_IsBusy()) {
  41:main_cm4.c    ****             CapSense_ProcessAllWidgets();
  42:main_cm4.c    ****             if (CapSense_IsWidgetActive(CapSense_BUTTON0_WDGT_ID)) {
  43:main_cm4.c    ****                 write_voice();
  44:main_cm4.c    ****             }
  45:main_cm4.c    ****             if (CapSense_IsWidgetActive(CapSense_BUTTON1_WDGT_ID)) {
  46:main_cm4.c    ****                 play_voice();
  47:main_cm4.c    ****             }
  48:main_cm4.c    ****         }
  49:main_cm4.c    ****     }
  50:main_cm4.c    **** }
  51:main_cm4.c    **** 
  52:main_cm4.c    **** int write_voice()
  53:main_cm4.c    **** {
  29              		.loc 1 53 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
  40              	.LBB39:
  41              	.LBB40:
  42              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \file cy_gpio.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Provides an API declaration of the GPIO driver
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver provides an API to configure and access device Input/Output pins.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 3


  20:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The functions and other declarations used in this driver are in cy_gpio.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * and declarations in the PDL.
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * IO pins include all general purpose types such as GPIO, SIO, HSIO, AUXIO, and
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * their variants.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Initialization can be performed either at the port level or by configuring the
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * individual pins. For efficient use of code space, port
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuration should be used in the field. Refer to the product device header files 
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * for the list of supported ports and pins.
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Single pin configuration is performed by using \ref Cy_GPIO_Pin_FastInit 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   (provide specific values) or \ref Cy_GPIO_Pin_Init (provide a filled
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_pin_config_t structure).
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - An entire port can be configured using \ref Cy_GPIO_Port_Init. Provide a filled 
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_prt_config_t structure. The values in the structure are 
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   bitfields representing the desired value for each pin in the port.
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Pin configuration and management is based on the port address and pin number.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \ref Cy_GPIO_PortToAddr function can optionally be used to calculate the port
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   address from the port number at run-time.
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Once the pin/port initialization is complete, each pin can be accessed by 
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * specifying the port (GPIO_PRT_Type) and the pin (0-7) in the provided API 
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * functions.
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_configuration Configuration Considerations
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 1. Pin multiplexing is controlled through the High-Speed IO Matrix (HSIOM) selection.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    This allows the pin to connect to signal sources/sinks throughout the device,
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    as defined by the pin HSIOM selection options (en_hsiom_sel_t).
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 2. All pins are initialized to High-Z drive mode with HSIOM connected to CPU (SW
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    control digital pin only) at Power-On-Reset(POR).
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 3. Some API functions perform read-modify-write operations on shared port
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    registers. These functions are not thread safe and care must be taken when
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    called by the application.
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 4. Digital input buffer provides a high-impedance buffer for the external 
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    digital input. The input buffer is connected to the HSIOM for routing to 
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    the CPU port registers and selected peripheral. Enabling the input 
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    buffer provides possibility to read the pin state via the CPU.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    If pin is connected to an analog signal, the input buffer should be 
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    disabled to avoid crowbar currents. For more information refer to device 
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    TRM and the device datasheet.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Multiple pins on a port can be updated using direct port register writes with an
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * appropriate port mask. An example is shown below, highlighting the different ways of 
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuring Port 1 pins using:
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data register
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data set register
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data clear register
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c Cy_GPIO_Snippet
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_more_information More Information
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 4


  77:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_MISRA MISRA-C Compliance
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver has the following specific deviations:
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>MISRA Rule</th>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Class (Required/Advisory)</th>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Description</th>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Description of Deviation(s)</th>
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>11.4</td>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A cast should not be performed between a pointer to object type and
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         a different pointer to object type.</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td> This code is safe because the elements of both GPIO_PRT_V1_Type and GPIO_PRT_V2_Type 
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *          types have identical alignment.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>16.7</td>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A pointer parameter in a function prototype should be declared as pointer 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         to const if the pointer is not used to modify the addressed object.</td>
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>The objects pointed to by the base addresses of the GPIO port are not always modified.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         While a const qualifier can be used in select scenarios, it brings little benefit
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         in adding this to the affected functions. </td>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_changelog Changelog
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td rowspan="3">1.20</td>
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Driver library directory-structure simplification.</td>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added the functions for configuring the AMux bus splitter switch cells:
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     - \ref Cy_GPIO_SetAmuxSplit
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     - \ref Cy_GPIO_GetAmuxSplit
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added a new functionality related to AMux bus.</td>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added register access layer. Use register access macros instead
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         of direct register access using dereferenced pointers.</td>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Makes register access device-independent, so that the PDL does 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         not need to be recompiled for each supported part number.</td>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10.1</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Updated description for the functions: \ref Cy_GPIO_GetInterruptStatus, 
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         \ref Cy_GPIO_GetInterruptMask, \ref Cy_GPIO_GetInterruptStatusMasked.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         Minor documentation edits.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 5


 134:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Documentation update and clarification</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10</td>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added input parameter validation to the API functions</td>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.0</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Initial version</td>
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_macros Macros
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_functions Functions
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_init       Initialization Functions
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_gpio       GPIO Functions
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_sio        SIO Functions
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_interrupt  Port Interrupt Functions
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \}
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_data_structures Data Structures
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_enums Enumerated Types
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if !defined(CY_GPIO_H)
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_H
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include <stddef.h>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device.h"
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device_headers.h"
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_syslib.h"
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if defined(__cplusplus)
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** extern "C" {
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \addtogroup group_gpio_macros
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver major version */
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MAJOR       1
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver minor version */
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MINOR       20
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO driver ID */
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_ID CY_PDL_DRV_ID(0x16U)
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Enumerations
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 6


 191:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_enums
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO Driver error codes */
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum 
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_SUCCESS   = 0x00U,                                    /**< Returned successful */
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_BAD_PARAM = CY_GPIO_ID | CY_PDL_STATUS_ERROR | 0x01U, /**< Bad parameter was passed */
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_en_gpio_status_t;
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** AMux switch open/close config */
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_OPENALL,   /**< Open ground switch. Open right switch. Open left switch */
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_L,         /**< Open ground switch. Open right switch. Close left switch */
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_R,         /**< Open ground switch. Close right switch. Open left switch */
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_LR,        /**< Open ground switch. Close right switch. Close left switch */
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_G,         /**< Close ground switch. Open right switch. Open left switch */
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_GL,        /**< Close ground switch. Open right switch. Close left switch */
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_GR,        /**< Close ground switch. Close right switch. Open left switch */
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUX_GLR,       /**< Close ground switch. Close right switch. Close left switch */
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }cy_en_gpio_amuxconnect_t;
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * AMux Bus selection
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUXBUSA,       /**< AMuxBus A */
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_AMUXBUSB        /**< AMuxBus B */
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }cy_en_gpio_amuxselect_t;
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_enums */
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Configuration Structures
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_data_structures
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a port of GPIO pins */
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t out;           /**< Initial output data for the IO pins in the port */
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrMask;      /**< Interrupt enable mask for the port interrupt */
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrCfg;       /**< Port pin interrupt edge detection configuration */
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfg;           /**< Port pin drive modes and input buffer enable configuration */
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgIn;         /**< Port pin input buffer configuration */
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgOut;        /**< Port pin output buffer configuration */
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgSIO;        /**< Port SIO pins configuration */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 7


 248:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel0Active;    /**< HSIOM selection for port pins 0,1,2,3 */
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel1Active;    /**< HSIOM selection for port pins 4,5,6,7 */
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_prt_config_t;
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a single GPIO pin */
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t outVal;         /**< Pin output state */
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveMode;      /**< Drive mode */
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     en_hsiom_sel_t hsiom;    /**< HSIOM selection */
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intEdge;        /**< Interrupt Edge type */
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intMask;        /**< Interrupt enable mask */
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtrip;          /**< Input buffer voltage trip type */
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t slewRate;       /**< Output buffer slew rate */
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveSel;       /**< Drive strength */
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vregEn;         /**< SIO pair output buffer mode */
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t ibufMode;       /**< SIO pair input buffer mode */
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtripSel;       /**< SIO pair input buffer trip point */
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vrefSel;        /**< SIO pair reference voltage for input buffer trip point */
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vohSel;         /**< SIO pair regulated voltage output level */
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_pin_config_t;
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_data_structures */
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Constants
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \cond INTERNAL */
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* General Constants */
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_HALF                       (4UL)      /**< Half-way point of a GPIO port */
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_DEINIT                     (0UL)      /**< De-init value for port registers */
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* GPIO Masks */
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_MASK                     (0x1FUL)   /**< HSIOM selection mask */
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_OUT_MASK                       (0x01UL)   /**< Single pin mask for OUT register */
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IN_MASK                        (0x01UL)   /**< Single pin mask for IN register */
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_DM_MASK                    (0x0FUL)   /**< Single pin mask for drive mode in CF
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_IN_VTRIP_SEL_MASK          (0x01UL)   /**< Single pin mask for VTRIP selection 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_SLOW_MASK              (0x01UL)   /**< Single pin mask for slew rate in CFG
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_SEL_MASK         (0x03UL)   /**< Single pin mask for drive strength i
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_STATUS_MASK               (0x01UL)   /**< Single pin mask for interrupt status
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EN_MASK                   (0x01UL)   /**< Single pin mask for interrupt status
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_MASKED_MASK               (0x01UL)   /**< Single pin mask for masked interrupt
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_SET_MASK                  (0x01UL)   /**< Single pin mask for setting the inte
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EDGE_MASK                 (0x03UL)   /**< Single pin mask for interrupt edge t
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FLT_EDGE_MASK             (0x07UL)   /**< Single pin mask for setting filtered
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* SIO Masks */
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREG_EN_MASK                   (0x01UL)   /**< Single SIO pin mask for voltage regu
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_MASK                      (0x01UL)   /**< Single SIO pin mask for input buffer
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_SHIFT                     (0x01UL)   /**< Single SIO pin shift for input buffe
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_MASK                 (0x01UL)   /**< Single SIO pin mask for the input bu
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_SHIFT                (0x02UL)   /**< Single SIO pin shift for the input b
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_MASK                  (0x03UL)   /**< Single SIO pin mask for voltage refe
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_SHIFT                 (0x03UL)   /**< Single SIO pin shift for voltage ref
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 8


 305:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_MASK                   (0x07UL)   /**< Single SIO pin mask for VOH */
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_SHIFT                  (0x05UL)   /**< Single SIO pin shift for VOH */
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Special mask for SIO pin pair setting */
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_ODD_PIN_MASK               (0x00FEUL) /**< SIO pin pair selection mask */
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_PIN_MASK                   (0x00FFUL) /**< SIO pin pair mask */
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Offsets */
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_OFFSET                   (3UL)      /**< Offset for HSIOM */
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_MODE_OFFSET              (2UL)      /**< Offset for Drive mode */
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INBUF_OFFSET                   (3UL)      /**< Offset for input buffer */
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_OFFSET           (16UL)     /**< Offset for drive strength */
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_CFG_OFFSET                (1UL)      /**< Offset for interrupt config */
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FILT_OFFSET               (18UL)     /**< Offset for filtered interrupt config
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_SIO_OFFSET                 (2UL)      /**< Offset for SIO config */
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation constants */
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PINS_MAX                       (8UL)      /**< Number of pins in the port */
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_PINS_MASK                  (0x0000000FFUL)
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK     (GPIO_PRT_INTR_CFG_EDGE0_SEL_Msk | \
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE1_SEL_Msk | \
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE2_SEL_Msk | \
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE3_SEL_Msk | \
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE4_SEL_Msk | \
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE5_SEL_Msk | \
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE6_SEL_Msk | \
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE7_SEL_Msk)
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_RANGE_MASK        (CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK | \
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_EDGE_SEL_Msk | \
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_SEL_Msk)
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INT_MASK_MASK              (0x0000001FFUL)
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_SEL_ACTIVE_MASK            (0x1FFFFFFFUL)
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define GPIO_MAX_SPLIT_CELL_SEGMENTS           (9U)
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation macros */
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_VALID(pinNum)           (CY_GPIO_PINS_MAX > (pinNum))
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_FILTER_PIN_VALID(pinNum)    (CY_GPIO_PINS_MAX >= (pinNum))
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VALUE_VALID(outVal)         (1UL >= (outVal))
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DM_VALID(driveMode)         (0U == ((driveMode) & (uint32_t)~CY_GPIO_CFG_DM_MASK
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_HSIOM_VALID(hsiom)          (0U == ((hsiom) & (uint32_t)~CY_GPIO_HSIOM_MASK))
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INT_EDGE_VALID(intEdge)     ((CY_GPIO_INTR_DISABLE  == (intEdge)) || \
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_RISING   == (intEdge)) || \
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_FALLING  == (intEdge)) || \
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_BOTH     == (intEdge)))
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DRIVE_SEL_VALID(driveSel)   ((CY_GPIO_DRIVE_FULL    == (driveSel)) || \
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_2     == (driveSel)) || \
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_4     == (driveSel)) || \
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_8     == (driveSel)))
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VREF_SEL_VALID(vrefSel)     ((CY_SIO_VREF_PINREF    == (vrefSel)) || \
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_1_2V      == (vrefSel)) || \
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_A    == (vrefSel)) || \
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_B    == (vrefSel)))
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 9


 362:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VOH_SEL_VALID(vrefSel)      ((CY_SIO_VOH_1_00       == (vrefSel)) || \
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_25       == (vrefSel)) || \
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_49       == (vrefSel)) || \
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_67       == (vrefSel)) || \
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_08       == (vrefSel)) || \
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_50       == (vrefSel)) || \
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_78       == (vrefSel)) || \
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_4_16       == (vrefSel)))
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                    
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_BIT_VALID(pinBit)       (0U == ((pinBit) & (uint32_t)~CY_GPIO_PRT_PINS_MASK)
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_CFG_VALID(intrCfg)     (0U == ((intrCfg) & (uint32_t)~CY_GPIO_PRT_INTR_CFG_
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_MASK_VALID(intrMask)   (0U == ((intrMask) & (uint32_t)~CY_GPIO_PRT_INT_MASK
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_SEL_ACT_VALID(selActive)    (0U == ((selActive) & (uint32_t)~CY_GPIO_PRT_SEL_ACT
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_AMUX_SPLIT_VALID(switchCtrl)       (((uint32_t) (switchCtrl)) < GPIO_MAX_SPLIT_C
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_AMUX_CONNECT_VALID(amuxConnect)    ((CY_GPIO_AMUX_OPENALL == (amuxConnect)) || \
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_L       == (amuxConnect)) || \
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_R       == (amuxConnect)) || \
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_LR      == (amuxConnect)) || \
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_G       == (amuxConnect)) || \
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_GL      == (amuxConnect)) || \
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_GR      == (amuxConnect)) || \
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                        (CY_GPIO_AMUX_GLR     == (amuxConnect)))
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_AMUX_SELECT_VALID(amuxBus)       ((CY_GPIO_AMUXBUSA       == (amuxBus)) || \
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                      (CY_GPIO_AMUXBUSB       == (amuxBus)))
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \endcond */
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Constants
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_macros
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveModes Pin drive mode
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive mode of the pin.
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_ANALOG                      (0x00UL) /**< Analog High-Z. Input buffer off */
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_IN_OFF               (0x02UL) /**< Resistive Pull-Up. Input buffer off */
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN_IN_OFF             (0x03UL) /**< Resistive Pull-Down. Input buffer off 
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW_IN_OFF         (0x04UL) /**< Open Drain, Drives Low. Input buffer o
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF        (0x05UL) /**< Open Drain, Drives High. Input buffer 
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG_IN_OFF               (0x06UL) /**< Strong Drive. Input buffer off */
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN_IN_OFF          (0x07UL) /**< Resistive Pull-Up/Down. Input buffer o
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_HIGHZ                       (0x08UL) /**< Digital High-Z. Input buffer on */
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP                      (0x0AUL) /**< Resistive Pull-Up. Input buffer on */
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN                    (0x0BUL) /**< Resistive Pull-Down. Input buffer on *
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW                (0x0CUL) /**< Open Drain, Drives Low. Input buffer o
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH               (0x0DUL) /**< Open Drain, Drives High. Input buffer 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 10


 419:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG                      (0x0EUL) /**< Strong Drive. Input buffer on */
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN                 (0x0FUL) /**< Resistive Pull-Up/Down. Input buffer o
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_vtrip Voltage trip mode
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the voltage trip type on the pin.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_CMOS                     (0x00UL) /**< Input buffer compatible with CMOS and 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_TTL                      (0x01UL) /**< Input buffer compatible with TTL and M
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_slewRate Slew Rate Mode
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the slew rate of the pin.
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_FAST                      (0x00UL) /**< Fast slew rate */
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_SLOW                      (0x01UL) /**< Slow slew rate */
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveStrength Pin drive strength
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive strength of the pin.
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_FULL                     (0x00UL) /**< Full drive strength: Max drive current
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_2                      (0x01UL) /**< 1/2 drive strength: 1/2 drive current 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_4                      (0x02UL) /**< 1/4 drive strength: 1/4 drive current 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_8                      (0x03UL) /**< 1/8 drive strength: 1/8 drive current 
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_interruptTrigger Interrupt trigger type
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the interrupt trigger type on the pin.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_DISABLE                   (0x00UL) /**< Disable the pin interrupt generation *
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_RISING                    (0x01UL) /**< Rising-Edge interrupt */
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FALLING                   (0x02UL) /**< Falling-Edge interrupt */
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_BOTH                      (0x03UL) /**< Both-Edge interrupt */
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVreg SIO output buffer mode
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO output buffer mode on the pin.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_UNREGULATED                (0x00UL) /**< Unregulated output buffer */
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_REGULATED                  (0x01UL) /**< Regulated output buffer */
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioIbuf SIO input buffer mode
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer mode on the pin.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 11


 476:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_SINGLEENDED                (0x00UL) /**< Single ended input buffer */
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_DIFFERENTIAL               (0x01UL) /**< Differential input buffer */
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVtrip SIO input buffer trip-point
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer trip-point of the pin.
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_CMOS                      (0x00UL) /**< CMOS input buffer (single-ended) */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_TTL                       (0x01UL) /**< TTL input buffer (single-ended) */
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_5VDDIO_0_5VOH           (0x00UL) /**< 0.5xVddio or 0.5xVoh (differential) */
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_4VDDIO_1_0VREF          (0x01UL) /**< 0.4xVddio or 0.4xVoh (differential) */
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVref SIO reference voltage for input buffer trip-point
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the reference voltage of SIO input buffer trip-point.
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_PINREF                     (0x00UL) /**< Vref from analog pin */
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_1_2V                       (0x01UL) /**< Vref from internal 1.2V reference */
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_A                     (0x02UL) /**< Vref from AMUXBUS_A */
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_B                     (0x03UL) /**< Vref from AMUXBUS_B */
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVoh Regulated output voltage level (Voh) and input buffer trip-point of a
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the Voh and input buffer trip-point of an SIO pair
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_00                        (0x00UL) /**< Voh = 1 x Reference */
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_25                        (0x01UL) /**< Voh = 1.25 x Reference */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_49                        (0x02UL) /**< Voh = 1.49 x Reference */
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_67                        (0x03UL) /**< Voh = 1.67 x Reference */
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_08                        (0x04UL) /**< Voh = 2.08 x Reference */
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_50                        (0x05UL) /**< Voh = 2.50 x Reference */
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_78                        (0x06UL) /**< Voh = 2.78 x Reference */
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_4_16                        (0x07UL) /**< Voh = 4.16 x Reference */
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Prototypes
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 12


 533:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Pin_Init(GPIO_PRT_Type* base, uint32_t pinNum, const cy_stc_gpio_pin_co
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Port_Init(GPIO_PRT_Type* base, const cy_stc_gpio_prt_config_t *config);
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Pin_FastInit(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t driveMode, uint32_t outVal
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Port_Deinit(GPIO_PRT_Type* base);
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value);
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum);
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum);
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_SetAmuxSplit(cy_en_amux_split_t switchCtrl, cy_en_gpio_amuxconnect_t amuxConnect, cy_e
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_amuxconnect_t Cy_GPIO_GetAmuxSplit(cy_en_amux_split_t switchCtrl, cy_en_gpio_amuxselect_
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum);
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum);
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum);
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum);
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Inv(GPIO_PRT_Type* base, uint32_t pinNum);
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum);
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtrip(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtrip(GPIO_PRT_Type* base, uint32_t pinNum);
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum);
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum);
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_gpio */
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_sio
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVregEn(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVregEn(GPIO_PRT_Type* base, uint32_t pinNum);
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum);
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum);
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum);
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVohSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVohSel(GPIO_PRT_Type* base, uint32_t pinNum);
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_sio */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_interrupt
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 13


 590:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatus(GPIO_PRT_Type* base, uint32_t pinNum);
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_ClearInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum);
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT_Type* base, uint32_t pinNum);
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSwInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum);
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetFilter(GPIO_PRT_Type* base, uint32_t value);
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetFilter(GPIO_PRT_Type* base);
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause0(void);
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause1(void);
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause2(void);
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause3(void);
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_interrupt */
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_SetHSIOM
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Configures the HSIOM connection to the pin.
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Connects the specified High-Speed Input Output Multiplexer (HSIOM) selection
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * to the pin.
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \note 
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function modifies a port register in a read-modify-write operation. It is
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * not thread safe as the resource is shared among multiple pins on a port.
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value)
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t tempReg;
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_V1_Type* portAddrHSIOM;
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 14


 647:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_HSIOM_VALID(value));
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - CY_GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_V1_Type*)(CY_HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = HSIOM_PRT_PORT_SEL0(portAddrHSIOM) & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_H
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         HSIOM_PRT_PORT_SEL0(portAddrHSIOM) = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << 
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = HSIOM_PRT_PORT_SEL1(portAddrHSIOM) & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_H
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         HSIOM_PRT_PORT_SEL1(portAddrHSIOM) = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << 
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_GetHSIOM
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Returns the current HSIOM multiplexer connection to the pin.
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum)
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t returnValue;
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_V1_Type* portAddrHSIOM;
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - CY_GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_V1_Type*)(CY_HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (HSIOM_PRT_PORT_SEL0(portAddrHSIOM) >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 15


 704:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (HSIOM_PRT_PORT_SEL1(portAddrHSIOM) >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (en_hsiom_sel_t)returnValue;
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_PortToAddr
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Retrieves the port address based on the given port number.
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This is a helper function to calculate the port base address when given a port
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * number. It is to be used when pin access needs to be calculated at runtime.
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param portNum
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Port number
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Base address of the port register structure
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_PortToAddr
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum)
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     GPIO_PRT_Type* portBase;
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(portNum < (uint32_t)IOSS_GPIO_GPIO_PORT_NR)
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portBase = (GPIO_PRT_Type *)(CY_GPIO_BASE + (GPIO_PRT_SECTION_SIZE * portNum));
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         /* Error: Return default base address */
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portBase = (GPIO_PRT_Type *)(CY_GPIO_BASE);
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (portBase);
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Read
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Reads the current logic level on the input buffer of the pin.
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 16


 761:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Bit position 8 is the routed pin through the port glitch filter.
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level present on the pin
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Read
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum)
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_FILTER_PIN_VALID(pinNum));
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (GPIO_PRT_IN(base) >> (pinNum)) & CY_GPIO_IN_MASK;
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Write
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Write a logic 0 or logic 1 state to the output driver.
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level to drive out on the pin
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Write
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_VALUE_VALID(value));
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     /* Thread-safe: Directly access the pin registers instead of base->OUT */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(0UL == value)
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         GPIO_PRT_OUT_CLR(base) = CY_GPIO_OUT_MASK << pinNum;
  43              		.loc 2 813 0
  44 0002 0222     		movs	r2, #2
  45 0004 244B     		ldr	r3, .L7
  46 0006 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 17


  47              	.LVL1:
  48              	.LBE40:
  49              	.LBE39:
  54:main_cm4.c    ****     Cy_GPIO_Write(BLUE_PORT, BLUE_NUM, 0);
  55:main_cm4.c    ****     printf("Started voice recording...\r\n");
  50              		.loc 1 55 0
  51 0008 2448     		ldr	r0, .L7+4
  52 000a FFF7FEFF 		bl	puts
  53              	.LVL2:
  56:main_cm4.c    ****     
  57:main_cm4.c    ****     ADC_Start();
  54              		.loc 1 57 0
  55 000e FFF7FEFF 		bl	ADC_Start
  56              	.LVL3:
  58:main_cm4.c    ****     ADC_StartConvert();
  57              		.loc 1 58 0
  58 0012 FFF7FEFF 		bl	ADC_StartConvert
  59              	.LVL4:
  60              	.LBB41:
  59:main_cm4.c    ****     
  60:main_cm4.c    ****     for(int idx = 0; idx < SAMPLES; ++idx){
  61              		.loc 1 60 0
  62 0016 0024     		movs	r4, #0
  63 0018 2CE0     		b	.L2
  64              	.LVL5:
  65              	.L5:
  66              	.LBB42:
  61:main_cm4.c    ****         ADC_IsEndConversion(CY_SAR_WAIT_FOR_RESULT);
  67              		.loc 1 61 0 discriminator 3
  68 001a 0120     		movs	r0, #1
  69 001c FFF7FEFF 		bl	ADC_IsEndConversion
  70              	.LVL6:
  71              	.LBB43:
  72              	.LBB44:
  73              		.file 3 "Generated_Source\\PSoC6/ADC.h"
   1:Generated_Source\PSoC6/ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.h **** * \file     ADC.h
   3:Generated_Source\PSoC6/ADC.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC.h **** *
   5:Generated_Source\PSoC6/ADC.h **** * \brief
   6:Generated_Source\PSoC6/ADC.h **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.h **** *
   8:Generated_Source\PSoC6/ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.h **** * \copyright
  10:Generated_Source\PSoC6/ADC.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC.h **** * compilation, or representation of this Software except as specified
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 18


  23:Generated_Source\PSoC6/ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.h **** #if !defined(CY_ADC_H)
  40:Generated_Source\PSoC6/ADC.h **** #define CY_ADC_H
  41:Generated_Source\PSoC6/ADC.h **** 
  42:Generated_Source\PSoC6/ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC.h **** 
  45:Generated_Source\PSoC6/ADC.h **** #define ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC.h **** #if (ADC_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC.h **** #include "ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC.h **** #endif
  49:Generated_Source\PSoC6/ADC.h **** 
  50:Generated_Source\PSoC6/ADC.h **** #define ADC_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC.h **** #include "ADC_intSarClock.h"
  53:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC.h **** 
  55:Generated_Source\PSoC6/ADC.h **** /**
  56:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC.h **** *
  58:Generated_Source\PSoC6/ADC.h **** */
  59:Generated_Source\PSoC6/ADC.h **** typedef struct
  60:Generated_Source\PSoC6/ADC.h **** {
  61:Generated_Source\PSoC6/ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC.h ****                                             */
  68:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC.h **** 
  72:Generated_Source\PSoC6/ADC.h **** } ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC.h **** 
  75:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC.h **** void ADC_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC.h **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config);
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 19


  80:Generated_Source\PSoC6/ADC.h **** void ADC_Init(void);
  81:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void);
  82:Generated_Source\PSoC6/ADC.h **** 
  83:Generated_Source\PSoC6/ADC.h **** /**
  84:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC.h **** * @{
  86:Generated_Source\PSoC6/ADC.h **** */
  87:Generated_Source\PSoC6/ADC.h **** void ADC_Start(void);
  88:Generated_Source\PSoC6/ADC.h **** void ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void);
  90:Generated_Source\PSoC6/ADC.h **** void ADC_StartConvert(void);
  91:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void);
  92:Generated_Source\PSoC6/ADC.h **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC.h **** void ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC.h **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC.h **** 
 107:Generated_Source\PSoC6/ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC.h **** 
 109:Generated_Source\PSoC6/ADC.h **** void ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC.h **** 
 111:Generated_Source\PSoC6/ADC.h **** /**
 112:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC.h **** * @{
 114:Generated_Source\PSoC6/ADC.h **** */
 115:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void);
 116:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void);
 117:Generated_Source\PSoC6/ADC.h **** 
 118:Generated_Source\PSoC6/ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC.h **** 
 120:Generated_Source\PSoC6/ADC.h **** /**
 121:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC.h **** * @{
 123:Generated_Source\PSoC6/ADC.h **** */
 124:Generated_Source\PSoC6/ADC.h **** void ADC_ISR(void);
 125:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC.h **** 
 128:Generated_Source\PSoC6/ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC.h **** 
 130:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC.h **** 
 135:Generated_Source\PSoC6/ADC.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CONFIGS                (1ul)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 20


 137:Generated_Source\PSoC6/ADC.h **** 
 138:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC.h **** 
 142:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_RATE             (12000)
 143:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_NOMINAL_CLOCK_FREQ      (6250000u)
 147:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC.h **** 
 149:Generated_Source\PSoC6/ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_ENDED_FORMAT     (1uL)
 151:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLES_AVERAGED        (0uL)
 153:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VNEG_INPUT_SEL          (0)
 156:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME0          (507uL)
 159:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_FREERUNNING             (1u)
 163:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_LOW_LIMIT               (1792u)
 165:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR                (4uL)
 170:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC.h **** 
 172:Generated_Source\PSoC6/ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG0_NOMINAL_CLOCK_FREQ))
 175:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC.h **** 
 177:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC.h **** 
 181:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC.h **** 
 185:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC.h **** 
 193:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 21


 194:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC.h **** 
 216:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG1_NOMINAL_CLOCK_FR
 219:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC.h **** #endif /* #if(ADC_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC.h **** 
 222:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC.h **** 
 226:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC.h **** 
 230:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC.h **** 
 238:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME3          (uL)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 22


 251:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC.h **** 
 261:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG2_NOMINAL_CLOCK_FR
 264:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC.h **** 
 267:Generated_Source\PSoC6/ADC.h **** 
 268:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC.h **** 
 272:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC.h **** 
 283:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC.h **** 
 306:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 23


 308:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG3_NOMINAL_CLOCK_FR
 309:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC.h **** 
 312:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC.h **** 
 316:Generated_Source\PSoC6/ADC.h **** #define ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC.h **** #define ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC.h **** #define ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC.h **** #define ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC.h **** 
 323:Generated_Source\PSoC6/ADC.h **** /** ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC.h **** */
 326:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC.h **** 
 328:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC.h **** /**
 332:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC.h **** * @{
 337:Generated_Source\PSoC6/ADC.h **** */
 338:Generated_Source\PSoC6/ADC.h **** 
 339:Generated_Source\PSoC6/ADC.h **** /** ADC_initVar
 340:Generated_Source\PSoC6/ADC.h **** * The ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC.h **** * set to 1 the first time ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC.h **** * ADC_Start() routine.
 345:Generated_Source\PSoC6/ADC.h **** *
 346:Generated_Source\PSoC6/ADC.h **** * If reinitialization of the component is required, then the ADC_Init() function
 347:Generated_Source\PSoC6/ADC.h **** * can be called before the ADC_Start() or ADC_Enable()
 348:Generated_Source\PSoC6/ADC.h **** * functions.
 349:Generated_Source\PSoC6/ADC.h **** */
 350:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_initVar;
 351:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_selected;
 352:Generated_Source\PSoC6/ADC.h **** extern uint32_t ADC_currentConfig;
 353:Generated_Source\PSoC6/ADC.h **** 
 354:Generated_Source\PSoC6/ADC.h **** #define ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC.h **** 
 356:Generated_Source\PSoC6/ADC.h **** extern const ADC_CONFIG_STRUCT ADC_allConfigs[ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC.h **** 
 358:Generated_Source\PSoC6/ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC.h **** */
 362:Generated_Source\PSoC6/ADC.h **** extern cy_stc_syspm_callback_t ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC.h **** 
 364:Generated_Source\PSoC6/ADC.h **** /** @} globals */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 24


 365:Generated_Source\PSoC6/ADC.h **** 
 366:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC.h ****     #if((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC.h ****     #endif /* ((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC.h **** #else
 377:Generated_Source\PSoC6/ADC.h ****     #define ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC.h **** 
 380:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC.h **** 
 389:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC.h **** 
 395:Generated_Source\PSoC6/ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC.h **** 
 400:Generated_Source\PSoC6/ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_FREERUNNING == ADC_FREERUNNING)
 402:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC.h **** #endif /* End ADC_CFG0_FREERUNNING == ADC_FREERUNNING */
 406:Generated_Source\PSoC6/ADC.h **** 
 407:Generated_Source\PSoC6/ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC.h **** #elif(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC.h **** 
 414:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC.h ****     #if((ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_CHANNELS_MODE != 0u) */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 25


 422:Generated_Source\PSoC6/ADC.h **** #elif (ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC.h **** #else
 425:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC.h **** 
 428:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG0 << SAR_CTRL_NEG_S
 430:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC.h **** 
 436:Generated_Source\PSoC6/ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC.h **** #else
 440:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC.h **** 
 443:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC.h **** 
 445:Generated_Source\PSoC6/ADC.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC.h **** 
 450:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC.h **** 
 454:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC.h **** 
 458:Generated_Source\PSoC6/ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC.h **** 
 463:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC.h **** 
 466:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC.h **** 
 470:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC.h **** 
 474:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC.h **** 
 478:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CTRL_INIT  \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 26


 479:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC.h **** 
 489:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC.h **** )
 501:Generated_Source\PSoC6/ADC.h **** 
 502:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC.h ****         | (uint32)((uint32)ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC.h **** 
 507:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC.h **** 
 509:Generated_Source\PSoC6/ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC.h **** */
 512:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC.h **** 
 515:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC.h **** 
 519:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC.h **** 
 529:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC.h **** 
 535:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 27


 536:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC.h **** 
 540:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_FREERUNNING == ADC_FREERUNNING)
 542:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG1_FREERUNNING == ADC_FREERUNNING */
 546:Generated_Source\PSoC6/ADC.h **** 
 547:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC.h ****     #else
 558:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC.h **** 
 561:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG1 << SAR_CTRL_NEG_S
 562:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC.h **** 
 564:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC.h **** 
 567:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC.h **** 
 569:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC.h **** 
 574:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC.h **** 
 578:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC.h **** 
 582:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC.h **** 
 587:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC.h **** 
 590:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 28


 593:Generated_Source\PSoC6/ADC.h **** 
 594:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC.h **** 
 598:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC.h **** 
 602:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC.h **** 
 613:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC.h ****     )
 625:Generated_Source\PSoC6/ADC.h **** 
 626:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC.h **** 
 631:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC.h **** 
 633:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC.h ****     */
 636:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC.h **** 
 640:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC.h **** 
 644:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME0 \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 29


 650:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC.h **** 
 654:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC.h **** 
 660:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC.h **** 
 665:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_FREERUNNING == ADC_FREERUNNING)
 667:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG2_FREERUNNING == ADC_FREERUNNING */
 671:Generated_Source\PSoC6/ADC.h **** 
 672:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC.h ****     #else
 683:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC.h **** 
 686:Generated_Source\PSoC6/ADC.h ****    #define ADC_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG2 << SAR_CTRL_NEG_SE
 687:Generated_Source\PSoC6/ADC.h **** 
 688:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC.h **** 
 690:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC.h **** 
 693:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC.h **** 
 695:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC.h **** 
 700:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC.h **** 
 704:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 30


 707:Generated_Source\PSoC6/ADC.h **** 
 708:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC.h **** 
 713:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC.h **** 
 716:Generated_Source\PSoC6/ADC.h **** 
 717:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC.h **** 
 721:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC.h **** 
 725:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC.h **** 
 729:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC.h **** 
 740:Generated_Source\PSoC6/ADC.h **** 
 741:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC.h ****     )
 753:Generated_Source\PSoC6/ADC.h **** 
 754:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC.h **** 
 759:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC.h **** 
 761:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC.h ****     */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 31


 764:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC.h **** 
 768:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC.h **** 
 772:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC.h **** 
 782:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC.h **** 
 788:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC.h **** 
 793:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_FREERUNNING == ADC_FREERUNNING)
 795:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG3_FREERUNNING == ADC_FREERUNNING */
 799:Generated_Source\PSoC6/ADC.h **** 
 800:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC.h ****     #else
 811:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC.h **** 
 814:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG3 << SAR_CTRL_NEG_S
 815:Generated_Source\PSoC6/ADC.h **** 
 816:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC.h **** 
 818:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 32


 821:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC.h **** 
 823:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC.h **** 
 828:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC.h **** 
 832:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC.h **** 
 836:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC.h **** 
 841:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC.h **** 
 844:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC.h **** 
 848:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC.h **** 
 852:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC.h **** 
 856:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC.h **** 
 867:Generated_Source\PSoC6/ADC.h **** 
 868:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_TRIGGER_OUT_INIT \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 33


 878:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC.h ****     )
 880:Generated_Source\PSoC6/ADC.h **** 
 881:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC.h **** 
 886:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC.h **** 
 888:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC.h ****     */
 891:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC.h **** 
 894:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC.h **** 
 896:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC.h **** 
 900:Generated_Source\PSoC6/ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Enable
 902:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC.h **** *
 904:Generated_Source\PSoC6/ADC.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC.h **** *
 906:Generated_Source\PSoC6/ADC.h **** * \param None
 907:Generated_Source\PSoC6/ADC.h **** *
 908:Generated_Source\PSoC6/ADC.h **** * \return None
 909:Generated_Source\PSoC6/ADC.h **** *
 910:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC.h **** *  None
 912:Generated_Source\PSoC6/ADC.h **** *
 913:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void)
 915:Generated_Source\PSoC6/ADC.h **** {
 916:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Enable(ADC_SAR__HW);
 917:Generated_Source\PSoC6/ADC.h **** }
 918:Generated_Source\PSoC6/ADC.h **** 
 919:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Stop
 921:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC.h **** *
 923:Generated_Source\PSoC6/ADC.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC.h **** * power mode.
 925:Generated_Source\PSoC6/ADC.h **** *
 926:Generated_Source\PSoC6/ADC.h **** * \param None
 927:Generated_Source\PSoC6/ADC.h **** *
 928:Generated_Source\PSoC6/ADC.h **** * \return None
 929:Generated_Source\PSoC6/ADC.h **** *
 930:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC.h **** * Do not use the ADC_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC.h **** * ADC_StopConvert() API. If you use the ADC_Stop() API
 933:Generated_Source\PSoC6/ADC.h **** * to halt conversions then later use the ADC_Start() and
 934:Generated_Source\PSoC6/ADC.h **** * ADC_StartConvert() APIs to resume conversions, the first channel
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 34


 935:Generated_Source\PSoC6/ADC.h **** * of the scan may be corrupt. The ADC_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC.h **** * the ADC to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC.h **** * channel scan is complete, the ADC will stop all conversions, which
 938:Generated_Source\PSoC6/ADC.h **** * can be detected by the use of an ISR or the ADC_IsEndConversion()
 939:Generated_Source\PSoC6/ADC.h **** * function.
 940:Generated_Source\PSoC6/ADC.h **** *
 941:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void)
 943:Generated_Source\PSoC6/ADC.h **** {
 944:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Disable(ADC_SAR__HW);
 945:Generated_Source\PSoC6/ADC.h **** }
 946:Generated_Source\PSoC6/ADC.h **** 
 947:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 948:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_StopConvert
 949:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 950:Generated_Source\PSoC6/ADC.h **** *
 951:Generated_Source\PSoC6/ADC.h **** * \brief Forces the ADC to stop conversions. If a conversion is
 952:Generated_Source\PSoC6/ADC.h **** * currently executing, that conversion will complete, but no further conversions
 953:Generated_Source\PSoC6/ADC.h **** * will occur.
 954:Generated_Source\PSoC6/ADC.h **** *
 955:Generated_Source\PSoC6/ADC.h **** * \param None
 956:Generated_Source\PSoC6/ADC.h **** *
 957:Generated_Source\PSoC6/ADC.h **** * \return None
 958:Generated_Source\PSoC6/ADC.h **** *
 959:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 960:Generated_Source\PSoC6/ADC.h **** *
 961:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 962:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void)
 963:Generated_Source\PSoC6/ADC.h **** {
 964:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_StopConvert(ADC_SAR__HW);
 965:Generated_Source\PSoC6/ADC.h **** }
 966:Generated_Source\PSoC6/ADC.h **** 
 967:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 968:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult16
 969:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 970:Generated_Source\PSoC6/ADC.h **** *
 971:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register
 972:Generated_Source\PSoC6/ADC.h **** *
 973:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 974:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 975:Generated_Source\PSoC6/ADC.h **** *
 976:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 16-bit integer.
 977:Generated_Source\PSoC6/ADC.h **** *
 978:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 979:Generated_Source\PSoC6/ADC.h **** *
 980:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 981:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan)
 982:Generated_Source\PSoC6/ADC.h **** {
 983:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
 984:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
  74              		.loc 3 984 0 discriminator 3
  75 0020 1F4B     		ldr	r3, .L7+8
  76 0022 1B68     		ldr	r3, [r3]
  77 0024 03EB8303 		add	r3, r3, r3, lsl #2
  78 0028 9A00     		lsls	r2, r3, #2
  79 002a 1E4B     		ldr	r3, .L7+12
  80 002c 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 35


  81 002e 5368     		ldr	r3, [r2, #4]
  82 0030 23B9     		cbnz	r3, .L3
  83              		.loc 3 984 0 is_stmt 0
  84 0032 4FF47671 		mov	r1, #984
  85 0036 1C48     		ldr	r0, .L7+16
  86 0038 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  87              	.LVL7:
  88              	.L3:
 985:Generated_Source\PSoC6/ADC.h **** 
 986:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_GetResult16(ADC_SAR__HW, chan);
  89              		.loc 3 986 0 is_stmt 1
  90 003c 0021     		movs	r1, #0
  91 003e 1B48     		ldr	r0, .L7+20
  92 0040 FFF7FEFF 		bl	Cy_SAR_GetResult16
  93              	.LVL8:
  94 0044 0546     		mov	r5, r0
  95              	.LVL9:
  96              	.LBE44:
  97              	.LBE43:
  98              	.LBB45:
  99              	.LBB46:
 987:Generated_Source\PSoC6/ADC.h **** }
 988:Generated_Source\PSoC6/ADC.h **** 
 989:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 990:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult32
 991:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6/ADC.h **** *
 993:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register.
 994:Generated_Source\PSoC6/ADC.h **** *
 995:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 996:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 997:Generated_Source\PSoC6/ADC.h **** *
 998:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 32-bit integer.
 999:Generated_Source\PSoC6/ADC.h **** *
1000:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1001:Generated_Source\PSoC6/ADC.h **** *
1002:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1003:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan)
1004:Generated_Source\PSoC6/ADC.h **** {
1005:Generated_Source\PSoC6/ADC.h ****     int32_t finalResult;
1006:Generated_Source\PSoC6/ADC.h **** 
1007:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1008:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1009:Generated_Source\PSoC6/ADC.h **** 
1010:Generated_Source\PSoC6/ADC.h ****     finalResult = Cy_SAR_GetResult32(ADC_SAR__HW, chan);
1011:Generated_Source\PSoC6/ADC.h **** 
1012:Generated_Source\PSoC6/ADC.h ****     return finalResult;
1013:Generated_Source\PSoC6/ADC.h **** }
1014:Generated_Source\PSoC6/ADC.h **** 
1015:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1016:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLowLimit
1017:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1018:Generated_Source\PSoC6/ADC.h **** *
1019:Generated_Source\PSoC6/ADC.h **** * \brief Sets the low limit parameter for a limit condition.
1020:Generated_Source\PSoC6/ADC.h **** *
1021:Generated_Source\PSoC6/ADC.h **** * \param lowLimit The low limit for a limit condition.
1022:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 36


1023:Generated_Source\PSoC6/ADC.h **** * \return None
1024:Generated_Source\PSoC6/ADC.h **** *
1025:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1026:Generated_Source\PSoC6/ADC.h **** *
1027:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1028:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit)
1029:Generated_Source\PSoC6/ADC.h **** {
1030:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetLowLimit(ADC_SAR__HW, lowLimit);
1031:Generated_Source\PSoC6/ADC.h **** }
1032:Generated_Source\PSoC6/ADC.h **** 
1033:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1034:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetHighLimit
1035:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1036:Generated_Source\PSoC6/ADC.h **** *
1037:Generated_Source\PSoC6/ADC.h **** * \brief Sets the high limit parameter for a limit condition.
1038:Generated_Source\PSoC6/ADC.h **** *
1039:Generated_Source\PSoC6/ADC.h **** * \param highLimit The high limit for a limit condition.
1040:Generated_Source\PSoC6/ADC.h **** *
1041:Generated_Source\PSoC6/ADC.h **** * \return None
1042:Generated_Source\PSoC6/ADC.h **** *
1043:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1044:Generated_Source\PSoC6/ADC.h **** *
1045:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1046:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit)
1047:Generated_Source\PSoC6/ADC.h **** {
1048:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetHighLimit(ADC_SAR__HW, highLimit);
1049:Generated_Source\PSoC6/ADC.h **** }
1050:Generated_Source\PSoC6/ADC.h **** 
1051:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1052:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLimitMask
1053:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1054:Generated_Source\PSoC6/ADC.h **** *
1055:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel limit condition mask.
1056:Generated_Source\PSoC6/ADC.h **** *
1057:Generated_Source\PSoC6/ADC.h **** *
1058:Generated_Source\PSoC6/ADC.h **** * \param limitMask
1059:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a limit condition interrupt.
1060:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the limit condition interrupt for channel N.
1061:Generated_Source\PSoC6/ADC.h **** * The limitMask cannot be larger than the number of channels.
1062:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1063:Generated_Source\PSoC6/ADC.h **** *
1064:Generated_Source\PSoC6/ADC.h **** * \return None
1065:Generated_Source\PSoC6/ADC.h **** *
1066:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1067:Generated_Source\PSoC6/ADC.h **** *
1068:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1069:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask)
1070:Generated_Source\PSoC6/ADC.h **** {
1071:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetRangeInterruptMask(ADC_SAR__HW, limitMask);
1072:Generated_Source\PSoC6/ADC.h **** }
1073:Generated_Source\PSoC6/ADC.h **** 
1074:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1075:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetSatMask
1076:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1077:Generated_Source\PSoC6/ADC.h **** *
1078:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel saturation event mask.
1079:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 37


1080:Generated_Source\PSoC6/ADC.h **** * \param satMask
1081:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a saturation event interrupt.
1082:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the saturation event interrupt for channel N.
1083:Generated_Source\PSoC6/ADC.h **** * The satMask cannot be larger than the number of channels.
1084:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1085:Generated_Source\PSoC6/ADC.h **** *
1086:Generated_Source\PSoC6/ADC.h **** * \return None
1087:Generated_Source\PSoC6/ADC.h **** *
1088:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1089:Generated_Source\PSoC6/ADC.h **** *
1090:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1091:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask)
1092:Generated_Source\PSoC6/ADC.h **** {
1093:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetSatInterruptMask(ADC_SAR__HW, satMask);
1094:Generated_Source\PSoC6/ADC.h **** }
1095:Generated_Source\PSoC6/ADC.h **** 
1096:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1097:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetOffset
1098:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1099:Generated_Source\PSoC6/ADC.h **** *
1100:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts,
1101:Generated_Source\PSoC6/ADC.h **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1102:Generated_Source\PSoC6/ADC.h **** *
1103:Generated_Source\PSoC6/ADC.h **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1104:Generated_Source\PSoC6/ADC.h **** * functions use the following equation:
1105:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1106:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1107:Generated_Source\PSoC6/ADC.h **** *
1108:Generated_Source\PSoC6/ADC.h **** * To set channel 0's offset based on known V_offset_mV, use:
1109:Generated_Source\PSoC6/ADC.h **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1110:Generated_Source\PSoC6/ADC.h **** *
1111:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1112:Generated_Source\PSoC6/ADC.h **** *
1113:Generated_Source\PSoC6/ADC.h **** * \param offset This value is a measured value when the inputs are shorted or
1114:Generated_Source\PSoC6/ADC.h **** * connected to the same input voltage.
1115:Generated_Source\PSoC6/ADC.h **** *
1116:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1117:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1118:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: offset was set successfully
1119:Generated_Source\PSoC6/ADC.h **** *
1120:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1121:Generated_Source\PSoC6/ADC.h **** *
1122:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1123:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset)
1124:Generated_Source\PSoC6/ADC.h **** {
1125:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1126:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1127:Generated_Source\PSoC6/ADC.h **** 
1128:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetOffset(chan, offset);
1129:Generated_Source\PSoC6/ADC.h **** }
1130:Generated_Source\PSoC6/ADC.h **** 
1131:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1132:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetGain
1133:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1134:Generated_Source\PSoC6/ADC.h **** *
1135:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC gain in counts per 10 volt for the voltage
1136:Generated_Source\PSoC6/ADC.h **** * conversion functions. This value is set by default by the reference and
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 38


1137:Generated_Source\PSoC6/ADC.h **** * input range settings. Gain is applied after offset and unit scaling.  All
1138:Generated_Source\PSoC6/ADC.h **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1139:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1140:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1141:Generated_Source\PSoC6/ADC.h **** *
1142:Generated_Source\PSoC6/ADC.h **** * To set channel 0's gain based on known V_ref_mV, use:
1143:Generated_Source\PSoC6/ADC.h **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1144:Generated_Source\PSoC6/ADC.h **** *
1145:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1146:Generated_Source\PSoC6/ADC.h **** *
1147:Generated_Source\PSoC6/ADC.h **** * \param adcGain ADC gain in counts per 10 volt.
1148:Generated_Source\PSoC6/ADC.h **** *
1149:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1150:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1151:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: gain was set successfully
1152:Generated_Source\PSoC6/ADC.h **** *
1153:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1154:Generated_Source\PSoC6/ADC.h **** *
1155:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1156:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain)
1157:Generated_Source\PSoC6/ADC.h **** {
1158:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1159:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1160:Generated_Source\PSoC6/ADC.h **** 
1161:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetGain(chan, adcGain);
1162:Generated_Source\PSoC6/ADC.h **** }
1163:Generated_Source\PSoC6/ADC.h **** 
1164:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1165:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_Volts
1166:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1167:Generated_Source\PSoC6/ADC.h **** *
1168:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1169:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 0.534.
1170:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1171:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1172:Generated_Source\PSoC6/ADC.h **** *
1173:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1174:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1175:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1176:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1177:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1178:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1179:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1180:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1181:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1182:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1183:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1184:Generated_Source\PSoC6/ADC.h **** *
1185:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1186:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1187:Generated_Source\PSoC6/ADC.h **** *
1188:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1189:Generated_Source\PSoC6/ADC.h **** *
1190:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1191:Generated_Source\PSoC6/ADC.h **** *
1192:Generated_Source\PSoC6/ADC.h **** * \return Result in Volts.
1193:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 39


1194:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1195:Generated_Source\PSoC6/ADC.h **** *
1196:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1197:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts)
1198:Generated_Source\PSoC6/ADC.h **** {
1199:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1200:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1201:Generated_Source\PSoC6/ADC.h **** 
1202:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_Volts(ADC_SAR__HW, chan, adcCounts);
1203:Generated_Source\PSoC6/ADC.h **** }
1204:Generated_Source\PSoC6/ADC.h **** 
1205:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1206:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_mVolts
1207:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1208:Generated_Source\PSoC6/ADC.h **** *
1209:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1210:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534.
1211:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1212:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1213:Generated_Source\PSoC6/ADC.h **** *
1214:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1215:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1216:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1217:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1218:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1219:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1220:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1221:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1222:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1223:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1224:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1225:Generated_Source\PSoC6/ADC.h **** *
1226:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1227:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1228:Generated_Source\PSoC6/ADC.h **** *
1229:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1230:Generated_Source\PSoC6/ADC.h **** *
1231:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1232:Generated_Source\PSoC6/ADC.h **** *
1233:Generated_Source\PSoC6/ADC.h **** * \return Result in mV.
1234:Generated_Source\PSoC6/ADC.h **** *
1235:Generated_Source\PSoC6/ADC.h **** * \sideeffect None.
1236:Generated_Source\PSoC6/ADC.h **** *
1237:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1238:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts)
1239:Generated_Source\PSoC6/ADC.h **** {
1240:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1241:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 100              		.loc 3 1241 0
 101 0046 164B     		ldr	r3, .L7+8
 102 0048 1B68     		ldr	r3, [r3]
 103 004a 03EB8303 		add	r3, r3, r3, lsl #2
 104 004e 9A00     		lsls	r2, r3, #2
 105 0050 144B     		ldr	r3, .L7+12
 106 0052 1A44     		add	r2, r2, r3
 107 0054 5368     		ldr	r3, [r2, #4]
 108 0056 23B9     		cbnz	r3, .L4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 40


 109 0058 40F2D941 		movw	r1, #1241
 110 005c 1248     		ldr	r0, .L7+16
 111 005e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 112              	.LVL10:
 113              	.L4:
1242:Generated_Source\PSoC6/ADC.h **** 
1243:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_mVolts(ADC_SAR__HW, chan, adcCounts);
 114              		.loc 3 1243 0
 115 0062 2A46     		mov	r2, r5
 116 0064 0021     		movs	r1, #0
 117 0066 1148     		ldr	r0, .L7+20
 118 0068 FFF7FEFF 		bl	Cy_SAR_CountsTo_mVolts
 119              	.LVL11:
 120              	.LBE46:
 121              	.LBE45:
  62:main_cm4.c    ****         int16_t ADC_Result = ADC_GetResult16(0);
  63:main_cm4.c    ****         int16_t Mic_mV = ADC_CountsTo_mVolts(0, ADC_Result);
  64:main_cm4.c    ****         voice[idx] = (int8_t) Mic_mV - 1611;
 122              		.loc 1 64 0
 123 006c 4B38     		subs	r0, r0, #75
 124 006e 104B     		ldr	r3, .L7+24
 125 0070 1855     		strb	r0, [r3, r4]
 126              	.LBE42:
  60:main_cm4.c    ****         ADC_IsEndConversion(CY_SAR_WAIT_FOR_RESULT);
 127              		.loc 1 60 0
 128 0072 0134     		adds	r4, r4, #1
 129              	.LVL12:
 130              	.L2:
  60:main_cm4.c    ****         ADC_IsEndConversion(CY_SAR_WAIT_FOR_RESULT);
 131              		.loc 1 60 0 is_stmt 0 discriminator 1
 132 0074 0F4B     		ldr	r3, .L7+28
 133 0076 9C42     		cmp	r4, r3
 134 0078 CFDD     		ble	.L5
 135              	.LVL13:
 136              	.LBE41:
 137              	.LBB47:
 138              	.LBB48:
 139              	.LBB49:
 140              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 41


  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 42


  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 43


 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 44


 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 45


 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 46


 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 47


 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 48


 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 49


 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 50


 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 51


 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 52


 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 53


 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 54


 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 55


 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 56


 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 57


 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 58


 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 59


1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 60


1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 61


1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 62


1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 63


1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 64


1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 65


1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 141              		.loc 4 1440 0 is_stmt 1
 142 007a 0C48     		ldr	r0, .L7+20
 143 007c 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 66


 144 007e 23F00043 		bic	r3, r3, #-2147483648
 145 0082 0360     		str	r3, [r0]
 146              	.LVL14:
 147              	.LBE49:
 148              	.LBE48:
 149              	.LBE47:
 150              	.LBB50:
 151              	.LBB51:
 964:Generated_Source\PSoC6/ADC.h **** }
 152              		.loc 3 964 0
 153 0084 FFF7FEFF 		bl	Cy_SAR_StopConvert
 154              	.LVL15:
 155              	.LBE51:
 156              	.LBE50:
 157              	.LBB52:
 158              	.LBB53:
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         GPIO_PRT_OUT_SET(base) = CY_GPIO_OUT_MASK << pinNum;
 159              		.loc 2 817 0
 160 0088 0222     		movs	r2, #2
 161 008a 034B     		ldr	r3, .L7
 162 008c 9A60     		str	r2, [r3, #8]
 163              	.LVL16:
 164              	.LBE53:
 165              	.LBE52:
  65:main_cm4.c    ****     }
  66:main_cm4.c    ****     
  67:main_cm4.c    ****     ADC_Stop();
  68:main_cm4.c    ****     ADC_StopConvert();
  69:main_cm4.c    ****     
  70:main_cm4.c    ****     Cy_GPIO_Write(BLUE_PORT, BLUE_NUM, 1);
  71:main_cm4.c    ****     printf("Finished voice recording.\r\n\n");
 166              		.loc 1 71 0
 167 008e 0A48     		ldr	r0, .L7+32
 168 0090 FFF7FEFF 		bl	puts
 169              	.LVL17:
  72:main_cm4.c    ****     
  73:main_cm4.c    ****     return 0;
  74:main_cm4.c    **** }
 170              		.loc 1 74 0
 171 0094 0020     		movs	r0, #0
 172 0096 38BD     		pop	{r3, r4, r5, pc}
 173              	.LVL18:
 174              	.L8:
 175              		.align	2
 176              	.L7:
 177 0098 80053240 		.word	1077020032
 178 009c 00000000 		.word	.LC0
 179 00a0 00000000 		.word	ADC_currentConfig
 180 00a4 00000000 		.word	ADC_allConfigs
 181 00a8 1C000000 		.word	.LC1
 182 00ac 00001D41 		.word	1092419584
 183 00b0 00000000 		.word	voice
 184 00b4 BFD40100 		.word	119999
 185 00b8 3C000000 		.word	.LC2
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 67


 186              		.cfi_endproc
 187              	.LFE536:
 188              		.size	write_voice, .-write_voice
 189              		.section	.text.play_voice,"ax",%progbits
 190              		.align	2
 191              		.global	play_voice
 192              		.thumb
 193              		.thumb_func
 194              		.type	play_voice, %function
 195              	play_voice:
 196              	.LFB537:
  75:main_cm4.c    **** 
  76:main_cm4.c    **** int play_voice()
  77:main_cm4.c    **** {
 197              		.loc 1 77 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 10B5     		push	{r4, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205 0002 82B0     		sub	sp, sp, #8
 206              		.cfi_def_cfa_offset 16
 207              	.LVL19:
 208              	.LBB54:
 209              	.LBB55:
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 210              		.loc 2 813 0
 211 0004 0822     		movs	r2, #8
 212 0006 0F4B     		ldr	r3, .L13
 213 0008 5A60     		str	r2, [r3, #4]
 214              	.LVL20:
 215              	.LBE55:
 216              	.LBE54:
  78:main_cm4.c    ****     Cy_GPIO_Write(RED_PORT, RED_NUM, 0);
  79:main_cm4.c    ****     printf("Started voice playing...\r\n");
 217              		.loc 1 79 0
 218 000a 0F48     		ldr	r0, .L13+4
 219 000c FFF7FEFF 		bl	puts
 220              	.LVL21:
 221              	.LBB56:
  80:main_cm4.c    **** 
  81:main_cm4.c    ****     for(int idx = 0; idx < SAMPLES; idx++) {
 222              		.loc 1 81 0
 223 0010 0024     		movs	r4, #0
 224 0012 0AE0     		b	.L10
 225              	.LVL22:
 226              	.L11:
 227              	.LBB57:
  82:main_cm4.c    ****         char8 text[8];
  83:main_cm4.c    ****         sprintf(text, "%d", voice[idx]);
 228              		.loc 1 83 0 discriminator 3
 229 0014 0D4B     		ldr	r3, .L13+8
 230 0016 1A57     		ldrsb	r2, [r3, r4]
 231 0018 0D49     		ldr	r1, .L13+12
 232 001a 6846     		mov	r0, sp
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 68


 233 001c FFF7FEFF 		bl	sprintf
 234              	.LVL23:
  84:main_cm4.c    ****         printf("%s\r\n", text);
 235              		.loc 1 84 0 discriminator 3
 236 0020 6946     		mov	r1, sp
 237 0022 0C48     		ldr	r0, .L13+16
 238 0024 FFF7FEFF 		bl	printf
 239              	.LVL24:
 240              	.LBE57:
  81:main_cm4.c    ****         char8 text[8];
 241              		.loc 1 81 0 discriminator 3
 242 0028 0134     		adds	r4, r4, #1
 243              	.LVL25:
 244              	.L10:
  81:main_cm4.c    ****         char8 text[8];
 245              		.loc 1 81 0 is_stmt 0 discriminator 1
 246 002a 0B4B     		ldr	r3, .L13+20
 247 002c 9C42     		cmp	r4, r3
 248 002e F1DD     		ble	.L11
 249              	.LVL26:
 250              	.LBE56:
 251              	.LBB58:
 252              	.LBB59:
 253              		.loc 2 817 0 is_stmt 1
 254 0030 0822     		movs	r2, #8
 255 0032 0A4B     		ldr	r3, .L13+24
 256 0034 9A60     		str	r2, [r3, #8]
 257              	.LVL27:
 258              	.LBE59:
 259              	.LBE58:
  85:main_cm4.c    ****     }
  86:main_cm4.c    ****     
  87:main_cm4.c    ****     Cy_GPIO_Write(BLUE_PORT, RED_NUM, 1);
  88:main_cm4.c    ****     printf("Finished voice playing.\r\n\n");
 260              		.loc 1 88 0
 261 0036 0A48     		ldr	r0, .L13+28
 262 0038 FFF7FEFF 		bl	puts
 263              	.LVL28:
  89:main_cm4.c    **** 
  90:main_cm4.c    ****     return 0;
  91:main_cm4.c    **** }
 264              		.loc 1 91 0
 265 003c 0020     		movs	r0, #0
 266 003e 02B0     		add	sp, sp, #8
 267              		.cfi_def_cfa_offset 8
 268              		@ sp needed
 269 0040 10BD     		pop	{r4, pc}
 270              	.LVL29:
 271              	.L14:
 272 0042 00BF     		.align	2
 273              	.L13:
 274 0044 00003240 		.word	1077018624
 275 0048 58000000 		.word	.LC3
 276 004c 00000000 		.word	voice
 277 0050 74000000 		.word	.LC4
 278 0054 78000000 		.word	.LC5
 279 0058 BFD40100 		.word	119999
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 69


 280 005c 80053240 		.word	1077020032
 281 0060 80000000 		.word	.LC6
 282              		.cfi_endproc
 283              	.LFE537:
 284              		.size	play_voice, .-play_voice
 285              		.section	.text.main,"ax",%progbits
 286              		.align	2
 287              		.global	main
 288              		.thumb
 289              		.thumb_func
 290              		.type	main, %function
 291              	main:
 292              	.LFB535:
  27:main_cm4.c    ****     __enable_irq(); /* Enable global interrupts. */
 293              		.loc 1 27 0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 3, -8
 301              		.cfi_offset 14, -4
 302              	.LBB60:
 303              	.LBB61:
 304              		.file 5 "Generated_Source\\PSoC6\\pdl\\cmsis/include/cmsis_gcc.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @version  V5.0.3
   5:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @date     16. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  28:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 70


  32:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  39:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ASM
  41:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  43:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  46:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  49:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif                                           
  52:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  55:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __USED
  56:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  58:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  61:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  64:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  67:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  70:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  78:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  86:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 71


  89:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  94:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 305              		.loc 5 131 0
 306              		.syntax unified
 307              	@ 131 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 308 0002 62B6     		cpsie i
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
 312              	.LBE61:
 313              	.LBE60:
  30:main_cm4.c    ****     CapSense_Start();
 314              		.loc 1 30 0
 315 0004 FFF7FEFF 		bl	UART_Start
 316              	.LVL30:
  31:main_cm4.c    ****     setvbuf(stdin, NULL, _IONBF, 0);
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 72


 317              		.loc 1 31 0
 318 0008 FFF7FEFF 		bl	CapSense_Start
 319              	.LVL31:
  32:main_cm4.c    ****     
 320              		.loc 1 32 0
 321 000c 114B     		ldr	r3, .L21
 322 000e 1868     		ldr	r0, [r3]
 323 0010 0023     		movs	r3, #0
 324 0012 0222     		movs	r2, #2
 325 0014 1946     		mov	r1, r3
 326 0016 4068     		ldr	r0, [r0, #4]
 327 0018 FFF7FEFF 		bl	setvbuf
 328              	.LVL32:
  34:main_cm4.c    ****     printf("------------------- CapSense VoiceRepeater log -------------------\r\n\n");
 329              		.loc 1 34 0
 330 001c 0E48     		ldr	r0, .L21+4
 331 001e FFF7FEFF 		bl	printf
 332              	.LVL33:
  35:main_cm4.c    **** 
 333              		.loc 1 35 0
 334 0022 0E48     		ldr	r0, .L21+8
 335 0024 FFF7FEFF 		bl	puts
 336              	.LVL34:
 337              	.L16:
  39:main_cm4.c    ****         if (!CapSense_IsBusy()) {
 338              		.loc 1 39 0
 339 0028 FFF7FEFF 		bl	CapSense_ScanAllWidgets
 340              	.LVL35:
  40:main_cm4.c    ****             CapSense_ProcessAllWidgets();
 341              		.loc 1 40 0
 342 002c FFF7FEFF 		bl	CapSense_IsBusy
 343              	.LVL36:
 344 0030 0028     		cmp	r0, #0
 345 0032 F9D1     		bne	.L16
  41:main_cm4.c    ****             if (CapSense_IsWidgetActive(CapSense_BUTTON0_WDGT_ID)) {
 346              		.loc 1 41 0
 347 0034 FFF7FEFF 		bl	CapSense_ProcessAllWidgets
 348              	.LVL37:
  42:main_cm4.c    ****                 write_voice();
 349              		.loc 1 42 0
 350 0038 0020     		movs	r0, #0
 351 003a FFF7FEFF 		bl	CapSense_IsWidgetActive
 352              	.LVL38:
 353 003e 08B1     		cbz	r0, .L17
  43:main_cm4.c    ****             }
 354              		.loc 1 43 0
 355 0040 FFF7FEFF 		bl	write_voice
 356              	.LVL39:
 357              	.L17:
  45:main_cm4.c    ****                 play_voice();
 358              		.loc 1 45 0
 359 0044 0120     		movs	r0, #1
 360 0046 FFF7FEFF 		bl	CapSense_IsWidgetActive
 361              	.LVL40:
 362 004a 0028     		cmp	r0, #0
 363 004c ECD0     		beq	.L16
  46:main_cm4.c    ****             }
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 73


 364              		.loc 1 46 0
 365 004e FFF7FEFF 		bl	play_voice
 366              	.LVL41:
 367 0052 E9E7     		b	.L16
 368              	.L22:
 369              		.align	2
 370              	.L21:
 371 0054 00000000 		.word	_impure_ptr
 372 0058 9C000000 		.word	.LC7
 373 005c A4000000 		.word	.LC8
 374              		.cfi_endproc
 375              	.LFE535:
 376              		.size	main, .-main
 377              		.comm	voice,120000,4
 378              		.section	.rodata.str1.4,"aMS",%progbits,1
 379              		.align	2
 380              	.LC0:
 381 0000 53746172 		.ascii	"Started voice recording...\015\000"
 381      74656420 
 381      766F6963 
 381      65207265 
 381      636F7264 
 382              	.LC1:
 383 001c 47656E65 		.ascii	"Generated_Source\\PSoC6/ADC.h\000"
 383      72617465 
 383      645F536F 
 383      75726365 
 383      5C50536F 
 384 0039 000000   		.space	3
 385              	.LC2:
 386 003c 46696E69 		.ascii	"Finished voice recording.\015\012\000"
 386      73686564 
 386      20766F69 
 386      63652072 
 386      65636F72 
 387              	.LC3:
 388 0058 53746172 		.ascii	"Started voice playing...\015\000"
 388      74656420 
 388      766F6963 
 388      6520706C 
 388      6179696E 
 389 0072 0000     		.space	2
 390              	.LC4:
 391 0074 256400   		.ascii	"%d\000"
 392 0077 00       		.space	1
 393              	.LC5:
 394 0078 25730D0A 		.ascii	"%s\015\012\000"
 394      00
 395 007d 000000   		.space	3
 396              	.LC6:
 397 0080 46696E69 		.ascii	"Finished voice playing.\015\012\000"
 397      73686564 
 397      20766F69 
 397      63652070 
 397      6C617969 
 398 009a 0000     		.space	2
 399              	.LC7:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 74


 400 009c 1B5B324A 		.ascii	"\033[2J\033[H\000"
 400      1B5B4800 
 401              	.LC8:
 402 00a4 2D2D2D2D 		.ascii	"------------------- CapSense VoiceRepeater log ----"
 402      2D2D2D2D 
 402      2D2D2D2D 
 402      2D2D2D2D 
 402      2D2D2D20 
 403 00d7 2D2D2D2D 		.ascii	"---------------\015\012\000"
 403      2D2D2D2D 
 403      2D2D2D2D 
 403      2D2D2D0D 
 403      0A00
 404              		.text
 405              	.Letext0:
 406              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 407              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 408              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_gpio.h"
 409              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 410              		.file 10 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 411              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 412              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 413              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
 414              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 415              		.file 15 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 416              		.file 16 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 417              		.file 17 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 418              		.file 18 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 419              		.file 19 "Generated_Source\\PSoC6/UART.h"
 420              		.file 20 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 421              		.file 21 "Generated_Source\\PSoC6/CapSense_Control.h"
 422              		.file 22 "Generated_Source\\PSoC6/CapSense_Sensing.h"
 423              		.file 23 "Generated_Source\\PSoC6/CapSense_Structure.h"
 424              		.file 24 "<built-in>"
 425              		.section	.debug_info,"",%progbits
 426              	.Ldebug_info0:
 427 0000 211B0000 		.4byte	0x1b21
 428 0004 0400     		.2byte	0x4
 429 0006 00000000 		.4byte	.Ldebug_abbrev0
 430 000a 04       		.byte	0x4
 431 000b 01       		.uleb128 0x1
 432 000c 1A030000 		.4byte	.LASF382
 433 0010 0C       		.byte	0xc
 434 0011 6A000000 		.4byte	.LASF383
 435 0015 9F050000 		.4byte	.LASF384
 436 0019 00000000 		.4byte	.Ldebug_ranges0+0
 437 001d 00000000 		.4byte	0
 438 0021 00000000 		.4byte	.Ldebug_line0
 439 0025 02       		.uleb128 0x2
 440 0026 02       		.byte	0x2
 441 0027 05       		.byte	0x5
 442 0028 1F020000 		.4byte	.LASF0
 443 002c 03       		.uleb128 0x3
 444 002d 140F0000 		.4byte	.LASF2
 445 0031 06       		.byte	0x6
 446 0032 1B       		.byte	0x1b
 447 0033 37000000 		.4byte	0x37
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 75


 448 0037 02       		.uleb128 0x2
 449 0038 01       		.byte	0x1
 450 0039 06       		.byte	0x6
 451 003a CC110000 		.4byte	.LASF1
 452 003e 03       		.uleb128 0x3
 453 003f 870E0000 		.4byte	.LASF3
 454 0043 06       		.byte	0x6
 455 0044 1D       		.byte	0x1d
 456 0045 49000000 		.4byte	0x49
 457 0049 02       		.uleb128 0x2
 458 004a 01       		.byte	0x1
 459 004b 08       		.byte	0x8
 460 004c 55100000 		.4byte	.LASF4
 461 0050 03       		.uleb128 0x3
 462 0051 750A0000 		.4byte	.LASF5
 463 0055 06       		.byte	0x6
 464 0056 29       		.byte	0x29
 465 0057 25000000 		.4byte	0x25
 466 005b 03       		.uleb128 0x3
 467 005c D0070000 		.4byte	.LASF6
 468 0060 06       		.byte	0x6
 469 0061 2B       		.byte	0x2b
 470 0062 66000000 		.4byte	0x66
 471 0066 02       		.uleb128 0x2
 472 0067 02       		.byte	0x2
 473 0068 07       		.byte	0x7
 474 0069 E90B0000 		.4byte	.LASF7
 475 006d 03       		.uleb128 0x3
 476 006e AE010000 		.4byte	.LASF8
 477 0072 06       		.byte	0x6
 478 0073 3F       		.byte	0x3f
 479 0074 78000000 		.4byte	0x78
 480 0078 02       		.uleb128 0x2
 481 0079 04       		.byte	0x4
 482 007a 05       		.byte	0x5
 483 007b 9A0D0000 		.4byte	.LASF9
 484 007f 03       		.uleb128 0x3
 485 0080 77100000 		.4byte	.LASF10
 486 0084 06       		.byte	0x6
 487 0085 41       		.byte	0x41
 488 0086 8A000000 		.4byte	0x8a
 489 008a 02       		.uleb128 0x2
 490 008b 04       		.byte	0x4
 491 008c 07       		.byte	0x7
 492 008d 8D0F0000 		.4byte	.LASF11
 493 0091 02       		.uleb128 0x2
 494 0092 08       		.byte	0x8
 495 0093 05       		.byte	0x5
 496 0094 EA090000 		.4byte	.LASF12
 497 0098 02       		.uleb128 0x2
 498 0099 08       		.byte	0x8
 499 009a 07       		.byte	0x7
 500 009b C8040000 		.4byte	.LASF13
 501 009f 04       		.uleb128 0x4
 502 00a0 04       		.byte	0x4
 503 00a1 05       		.byte	0x5
 504 00a2 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 76


 505 00a6 02       		.uleb128 0x2
 506 00a7 04       		.byte	0x4
 507 00a8 07       		.byte	0x7
 508 00a9 3C010000 		.4byte	.LASF14
 509 00ad 03       		.uleb128 0x3
 510 00ae 7D040000 		.4byte	.LASF15
 511 00b2 07       		.byte	0x7
 512 00b3 14       		.byte	0x14
 513 00b4 2C000000 		.4byte	0x2c
 514 00b8 03       		.uleb128 0x3
 515 00b9 02090000 		.4byte	.LASF16
 516 00bd 07       		.byte	0x7
 517 00be 18       		.byte	0x18
 518 00bf 3E000000 		.4byte	0x3e
 519 00c3 03       		.uleb128 0x3
 520 00c4 5B050000 		.4byte	.LASF17
 521 00c8 07       		.byte	0x7
 522 00c9 20       		.byte	0x20
 523 00ca 50000000 		.4byte	0x50
 524 00ce 03       		.uleb128 0x3
 525 00cf 1A0C0000 		.4byte	.LASF18
 526 00d3 07       		.byte	0x7
 527 00d4 24       		.byte	0x24
 528 00d5 5B000000 		.4byte	0x5b
 529 00d9 03       		.uleb128 0x3
 530 00da D50F0000 		.4byte	.LASF19
 531 00de 07       		.byte	0x7
 532 00df 2C       		.byte	0x2c
 533 00e0 6D000000 		.4byte	0x6d
 534 00e4 03       		.uleb128 0x3
 535 00e5 74040000 		.4byte	.LASF20
 536 00e9 07       		.byte	0x7
 537 00ea 30       		.byte	0x30
 538 00eb 7F000000 		.4byte	0x7f
 539 00ef 02       		.uleb128 0x2
 540 00f0 04       		.byte	0x4
 541 00f1 07       		.byte	0x7
 542 00f2 B40C0000 		.4byte	.LASF21
 543 00f6 05       		.uleb128 0x5
 544 00f7 E4000000 		.4byte	0xe4
 545 00fb 06       		.uleb128 0x6
 546 00fc F6000000 		.4byte	0xf6
 547 0100 07       		.uleb128 0x7
 548 0101 FB000000 		.4byte	0xfb
 549 0105 10010000 		.4byte	0x110
 550 0109 08       		.uleb128 0x8
 551 010a EF000000 		.4byte	0xef
 552 010e 01       		.byte	0x1
 553 010f 00       		.byte	0
 554 0110 07       		.uleb128 0x7
 555 0111 F6000000 		.4byte	0xf6
 556 0115 20010000 		.4byte	0x120
 557 0119 08       		.uleb128 0x8
 558 011a EF000000 		.4byte	0xef
 559 011e 0F       		.byte	0xf
 560 011f 00       		.byte	0
 561 0120 07       		.uleb128 0x7
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 77


 562 0121 FB000000 		.4byte	0xfb
 563 0125 30010000 		.4byte	0x130
 564 0129 08       		.uleb128 0x8
 565 012a EF000000 		.4byte	0xef
 566 012e 0F       		.byte	0xf
 567 012f 00       		.byte	0
 568 0130 07       		.uleb128 0x7
 569 0131 FB000000 		.4byte	0xfb
 570 0135 40010000 		.4byte	0x140
 571 0139 08       		.uleb128 0x8
 572 013a EF000000 		.4byte	0xef
 573 013e 02       		.byte	0x2
 574 013f 00       		.byte	0
 575 0140 07       		.uleb128 0x7
 576 0141 FB000000 		.4byte	0xfb
 577 0145 50010000 		.4byte	0x150
 578 0149 08       		.uleb128 0x8
 579 014a EF000000 		.4byte	0xef
 580 014e 0E       		.byte	0xe
 581 014f 00       		.byte	0
 582 0150 09       		.uleb128 0x9
 583 0151 80       		.byte	0x80
 584 0152 08       		.byte	0x8
 585 0153 22       		.byte	0x22
 586 0154 24020000 		.4byte	0x224
 587 0158 0A       		.uleb128 0xa
 588 0159 4F555400 		.ascii	"OUT\000"
 589 015d 08       		.byte	0x8
 590 015e 23       		.byte	0x23
 591 015f F6000000 		.4byte	0xf6
 592 0163 00       		.byte	0
 593 0164 0B       		.uleb128 0xb
 594 0165 48050000 		.4byte	.LASF22
 595 0169 08       		.byte	0x8
 596 016a 24       		.byte	0x24
 597 016b F6000000 		.4byte	0xf6
 598 016f 04       		.byte	0x4
 599 0170 0B       		.uleb128 0xb
 600 0171 DF040000 		.4byte	.LASF23
 601 0175 08       		.byte	0x8
 602 0176 25       		.byte	0x25
 603 0177 F6000000 		.4byte	0xf6
 604 017b 08       		.byte	0x8
 605 017c 0B       		.uleb128 0xb
 606 017d 770E0000 		.4byte	.LASF24
 607 0181 08       		.byte	0x8
 608 0182 26       		.byte	0x26
 609 0183 F6000000 		.4byte	0xf6
 610 0187 0C       		.byte	0xc
 611 0188 0A       		.uleb128 0xa
 612 0189 494E00   		.ascii	"IN\000"
 613 018c 08       		.byte	0x8
 614 018d 27       		.byte	0x27
 615 018e FB000000 		.4byte	0xfb
 616 0192 10       		.byte	0x10
 617 0193 0B       		.uleb128 0xb
 618 0194 AE0A0000 		.4byte	.LASF25
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 78


 619 0198 08       		.byte	0x8
 620 0199 28       		.byte	0x28
 621 019a F6000000 		.4byte	0xf6
 622 019e 14       		.byte	0x14
 623 019f 0B       		.uleb128 0xb
 624 01a0 D50A0000 		.4byte	.LASF26
 625 01a4 08       		.byte	0x8
 626 01a5 29       		.byte	0x29
 627 01a6 F6000000 		.4byte	0xf6
 628 01aa 18       		.byte	0x18
 629 01ab 0B       		.uleb128 0xb
 630 01ac 8E0B0000 		.4byte	.LASF27
 631 01b0 08       		.byte	0x8
 632 01b1 2A       		.byte	0x2a
 633 01b2 FB000000 		.4byte	0xfb
 634 01b6 1C       		.byte	0x1c
 635 01b7 0B       		.uleb128 0xb
 636 01b8 A2020000 		.4byte	.LASF28
 637 01bc 08       		.byte	0x8
 638 01bd 2B       		.byte	0x2b
 639 01be F6000000 		.4byte	0xf6
 640 01c2 20       		.byte	0x20
 641 01c3 0B       		.uleb128 0xb
 642 01c4 A0100000 		.4byte	.LASF29
 643 01c8 08       		.byte	0x8
 644 01c9 2C       		.byte	0x2c
 645 01ca F6000000 		.4byte	0xf6
 646 01ce 24       		.byte	0x24
 647 01cf 0A       		.uleb128 0xa
 648 01d0 43464700 		.ascii	"CFG\000"
 649 01d4 08       		.byte	0x8
 650 01d5 2D       		.byte	0x2d
 651 01d6 F6000000 		.4byte	0xf6
 652 01da 28       		.byte	0x28
 653 01db 0B       		.uleb128 0xb
 654 01dc 4D040000 		.4byte	.LASF30
 655 01e0 08       		.byte	0x8
 656 01e1 2E       		.byte	0x2e
 657 01e2 F6000000 		.4byte	0xf6
 658 01e6 2C       		.byte	0x2c
 659 01e7 0B       		.uleb128 0xb
 660 01e8 87060000 		.4byte	.LASF31
 661 01ec 08       		.byte	0x8
 662 01ed 2F       		.byte	0x2f
 663 01ee F6000000 		.4byte	0xf6
 664 01f2 30       		.byte	0x30
 665 01f3 0B       		.uleb128 0xb
 666 01f4 9B010000 		.4byte	.LASF32
 667 01f8 08       		.byte	0x8
 668 01f9 30       		.byte	0x30
 669 01fa F6000000 		.4byte	0xf6
 670 01fe 34       		.byte	0x34
 671 01ff 0B       		.uleb128 0xb
 672 0200 14000000 		.4byte	.LASF33
 673 0204 08       		.byte	0x8
 674 0205 31       		.byte	0x31
 675 0206 FB000000 		.4byte	0xfb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 79


 676 020a 38       		.byte	0x38
 677 020b 0B       		.uleb128 0xb
 678 020c 3F0E0000 		.4byte	.LASF34
 679 0210 08       		.byte	0x8
 680 0211 32       		.byte	0x32
 681 0212 F6000000 		.4byte	0xf6
 682 0216 3C       		.byte	0x3c
 683 0217 0B       		.uleb128 0xb
 684 0218 A6120000 		.4byte	.LASF35
 685 021c 08       		.byte	0x8
 686 021d 33       		.byte	0x33
 687 021e 29020000 		.4byte	0x229
 688 0222 40       		.byte	0x40
 689 0223 00       		.byte	0
 690 0224 05       		.uleb128 0x5
 691 0225 20010000 		.4byte	0x120
 692 0229 06       		.uleb128 0x6
 693 022a 24020000 		.4byte	0x224
 694 022e 03       		.uleb128 0x3
 695 022f F40D0000 		.4byte	.LASF36
 696 0233 08       		.byte	0x8
 697 0234 34       		.byte	0x34
 698 0235 50010000 		.4byte	0x150
 699 0239 0C       		.uleb128 0xc
 700 023a 2440     		.2byte	0x4024
 701 023c 08       		.byte	0x8
 702 023d 39       		.byte	0x39
 703 023e C4020000 		.4byte	0x2c4
 704 0242 0A       		.uleb128 0xa
 705 0243 50525400 		.ascii	"PRT\000"
 706 0247 08       		.byte	0x8
 707 0248 3A       		.byte	0x3a
 708 0249 C4020000 		.4byte	0x2c4
 709 024d 00       		.byte	0
 710 024e 0D       		.uleb128 0xd
 711 024f 28000000 		.4byte	.LASF37
 712 0253 08       		.byte	0x8
 713 0254 3B       		.byte	0x3b
 714 0255 FB000000 		.4byte	0xfb
 715 0259 0040     		.2byte	0x4000
 716 025b 0D       		.uleb128 0xd
 717 025c 34000000 		.4byte	.LASF38
 718 0260 08       		.byte	0x8
 719 0261 3C       		.byte	0x3c
 720 0262 FB000000 		.4byte	0xfb
 721 0266 0440     		.2byte	0x4004
 722 0268 0D       		.uleb128 0xd
 723 0269 40000000 		.4byte	.LASF39
 724 026d 08       		.byte	0x8
 725 026e 3D       		.byte	0x3d
 726 026f FB000000 		.4byte	0xfb
 727 0273 0840     		.2byte	0x4008
 728 0275 0D       		.uleb128 0xd
 729 0276 4C000000 		.4byte	.LASF40
 730 027a 08       		.byte	0x8
 731 027b 3E       		.byte	0x3e
 732 027c FB000000 		.4byte	0xfb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 80


 733 0280 0C40     		.2byte	0x400c
 734 0282 0D       		.uleb128 0xd
 735 0283 1D000000 		.4byte	.LASF41
 736 0287 08       		.byte	0x8
 737 0288 3F       		.byte	0x3f
 738 0289 FB000000 		.4byte	0xfb
 739 028d 1040     		.2byte	0x4010
 740 028f 0D       		.uleb128 0xd
 741 0290 34070000 		.4byte	.LASF42
 742 0294 08       		.byte	0x8
 743 0295 40       		.byte	0x40
 744 0296 F6000000 		.4byte	0xf6
 745 029a 1440     		.2byte	0x4014
 746 029c 0D       		.uleb128 0xd
 747 029d B6110000 		.4byte	.LASF43
 748 02a1 08       		.byte	0x8
 749 02a2 41       		.byte	0x41
 750 02a3 F6000000 		.4byte	0xf6
 751 02a7 1840     		.2byte	0x4018
 752 02a9 0D       		.uleb128 0xd
 753 02aa AB0B0000 		.4byte	.LASF44
 754 02ae 08       		.byte	0x8
 755 02af 42       		.byte	0x42
 756 02b0 FB000000 		.4byte	0xfb
 757 02b4 1C40     		.2byte	0x401c
 758 02b6 0D       		.uleb128 0xd
 759 02b7 2C0C0000 		.4byte	.LASF45
 760 02bb 08       		.byte	0x8
 761 02bc 43       		.byte	0x43
 762 02bd F6000000 		.4byte	0xf6
 763 02c1 2040     		.2byte	0x4020
 764 02c3 00       		.byte	0
 765 02c4 07       		.uleb128 0x7
 766 02c5 2E020000 		.4byte	0x22e
 767 02c9 D4020000 		.4byte	0x2d4
 768 02cd 08       		.uleb128 0x8
 769 02ce EF000000 		.4byte	0xef
 770 02d2 7F       		.byte	0x7f
 771 02d3 00       		.byte	0
 772 02d4 03       		.uleb128 0x3
 773 02d5 9F040000 		.4byte	.LASF46
 774 02d9 08       		.byte	0x8
 775 02da 44       		.byte	0x44
 776 02db 39020000 		.4byte	0x239
 777 02df 0C       		.uleb128 0xc
 778 02e0 080F     		.2byte	0xf08
 779 02e2 09       		.byte	0x9
 780 02e3 21       		.byte	0x21
 781 02e4 67050000 		.4byte	0x567
 782 02e8 0B       		.uleb128 0xb
 783 02e9 99130000 		.4byte	.LASF47
 784 02ed 09       		.byte	0x9
 785 02ee 22       		.byte	0x22
 786 02ef F6000000 		.4byte	0xf6
 787 02f3 00       		.byte	0
 788 02f4 0B       		.uleb128 0xb
 789 02f5 DF0A0000 		.4byte	.LASF48
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 81


 790 02f9 09       		.byte	0x9
 791 02fa 23       		.byte	0x23
 792 02fb F6000000 		.4byte	0xf6
 793 02ff 04       		.byte	0x4
 794 0300 0B       		.uleb128 0xb
 795 0301 14000000 		.4byte	.LASF33
 796 0305 09       		.byte	0x9
 797 0306 24       		.byte	0x24
 798 0307 6C050000 		.4byte	0x56c
 799 030b 08       		.byte	0x8
 800 030c 0B       		.uleb128 0xb
 801 030d 5F130000 		.4byte	.LASF49
 802 0311 09       		.byte	0x9
 803 0312 25       		.byte	0x25
 804 0313 F6000000 		.4byte	0xf6
 805 0317 10       		.byte	0x10
 806 0318 0B       		.uleb128 0xb
 807 0319 15060000 		.4byte	.LASF50
 808 031d 09       		.byte	0x9
 809 031e 26       		.byte	0x26
 810 031f F6000000 		.4byte	0xf6
 811 0323 14       		.byte	0x14
 812 0324 0B       		.uleb128 0xb
 813 0325 050E0000 		.4byte	.LASF51
 814 0329 09       		.byte	0x9
 815 032a 27       		.byte	0x27
 816 032b F6000000 		.4byte	0xf6
 817 032f 18       		.byte	0x18
 818 0330 0B       		.uleb128 0xb
 819 0331 15070000 		.4byte	.LASF52
 820 0335 09       		.byte	0x9
 821 0336 28       		.byte	0x28
 822 0337 F6000000 		.4byte	0xf6
 823 033b 1C       		.byte	0x1c
 824 033c 0B       		.uleb128 0xb
 825 033d C8000000 		.4byte	.LASF53
 826 0341 09       		.byte	0x9
 827 0342 29       		.byte	0x29
 828 0343 F6000000 		.4byte	0xf6
 829 0347 20       		.byte	0x20
 830 0348 0B       		.uleb128 0xb
 831 0349 9A0B0000 		.4byte	.LASF54
 832 034d 09       		.byte	0x9
 833 034e 2A       		.byte	0x2a
 834 034f F6000000 		.4byte	0xf6
 835 0353 24       		.byte	0x24
 836 0354 0B       		.uleb128 0xb
 837 0355 A6120000 		.4byte	.LASF35
 838 0359 09       		.byte	0x9
 839 035a 2B       		.byte	0x2b
 840 035b 86050000 		.4byte	0x586
 841 035f 28       		.byte	0x28
 842 0360 0B       		.uleb128 0xb
 843 0361 F3120000 		.4byte	.LASF55
 844 0365 09       		.byte	0x9
 845 0366 2C       		.byte	0x2c
 846 0367 8B050000 		.4byte	0x58b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 82


 847 036b 80       		.byte	0x80
 848 036c 0B       		.uleb128 0xb
 849 036d 0E0D0000 		.4byte	.LASF56
 850 0371 09       		.byte	0x9
 851 0372 2D       		.byte	0x2d
 852 0373 95050000 		.4byte	0x595
 853 0377 C0       		.byte	0xc0
 854 0378 0D       		.uleb128 0xd
 855 0379 2E0E0000 		.4byte	.LASF57
 856 037d 09       		.byte	0x9
 857 037e 2E       		.byte	0x2e
 858 037f 9F050000 		.4byte	0x59f
 859 0383 0001     		.2byte	0x100
 860 0385 0D       		.uleb128 0xd
 861 0386 180D0000 		.4byte	.LASF58
 862 038a 09       		.byte	0x9
 863 038b 2F       		.byte	0x2f
 864 038c A9050000 		.4byte	0x5a9
 865 0390 4001     		.2byte	0x140
 866 0392 0D       		.uleb128 0xd
 867 0393 890A0000 		.4byte	.LASF59
 868 0397 09       		.byte	0x9
 869 0398 30       		.byte	0x30
 870 0399 B3050000 		.4byte	0x5b3
 871 039d 8001     		.2byte	0x180
 872 039f 0D       		.uleb128 0xd
 873 03a0 220D0000 		.4byte	.LASF60
 874 03a4 09       		.byte	0x9
 875 03a5 31       		.byte	0x31
 876 03a6 BD050000 		.4byte	0x5bd
 877 03aa C001     		.2byte	0x1c0
 878 03ac 0D       		.uleb128 0xd
 879 03ad 58000000 		.4byte	.LASF61
 880 03b1 09       		.byte	0x9
 881 03b2 32       		.byte	0x32
 882 03b3 FB000000 		.4byte	0xfb
 883 03b7 0002     		.2byte	0x200
 884 03b9 0D       		.uleb128 0xd
 885 03ba E90F0000 		.4byte	.LASF62
 886 03be 09       		.byte	0x9
 887 03bf 33       		.byte	0x33
 888 03c0 FB000000 		.4byte	0xfb
 889 03c4 0402     		.2byte	0x204
 890 03c6 0D       		.uleb128 0xd
 891 03c7 BF010000 		.4byte	.LASF63
 892 03cb 09       		.byte	0x9
 893 03cc 34       		.byte	0x34
 894 03cd FB000000 		.4byte	0xfb
 895 03d1 0802     		.2byte	0x208
 896 03d3 0D       		.uleb128 0xd
 897 03d4 B9080000 		.4byte	.LASF64
 898 03d8 09       		.byte	0x9
 899 03d9 35       		.byte	0x35
 900 03da FB000000 		.4byte	0xfb
 901 03de 0C02     		.2byte	0x20c
 902 03e0 0D       		.uleb128 0xd
 903 03e1 AE0A0000 		.4byte	.LASF25
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 83


 904 03e5 09       		.byte	0x9
 905 03e6 36       		.byte	0x36
 906 03e7 F6000000 		.4byte	0xf6
 907 03eb 1002     		.2byte	0x210
 908 03ed 0D       		.uleb128 0xd
 909 03ee A2020000 		.4byte	.LASF28
 910 03f2 09       		.byte	0x9
 911 03f3 37       		.byte	0x37
 912 03f4 F6000000 		.4byte	0xf6
 913 03f8 1402     		.2byte	0x214
 914 03fa 0D       		.uleb128 0xd
 915 03fb D50A0000 		.4byte	.LASF26
 916 03ff 09       		.byte	0x9
 917 0400 38       		.byte	0x38
 918 0401 F6000000 		.4byte	0xf6
 919 0405 1802     		.2byte	0x218
 920 0407 0D       		.uleb128 0xd
 921 0408 8E0B0000 		.4byte	.LASF27
 922 040c 09       		.byte	0x9
 923 040d 39       		.byte	0x39
 924 040e FB000000 		.4byte	0xfb
 925 0412 1C02     		.2byte	0x21c
 926 0414 0D       		.uleb128 0xd
 927 0415 37020000 		.4byte	.LASF65
 928 0419 09       		.byte	0x9
 929 041a 3A       		.byte	0x3a
 930 041b F6000000 		.4byte	0xf6
 931 041f 2002     		.2byte	0x220
 932 0421 0D       		.uleb128 0xd
 933 0422 0B110000 		.4byte	.LASF66
 934 0426 09       		.byte	0x9
 935 0427 3B       		.byte	0x3b
 936 0428 F6000000 		.4byte	0xf6
 937 042c 2402     		.2byte	0x224
 938 042e 0D       		.uleb128 0xd
 939 042f C5100000 		.4byte	.LASF67
 940 0433 09       		.byte	0x9
 941 0434 3C       		.byte	0x3c
 942 0435 F6000000 		.4byte	0xf6
 943 0439 2802     		.2byte	0x228
 944 043b 0D       		.uleb128 0xd
 945 043c 720D0000 		.4byte	.LASF68
 946 0440 09       		.byte	0x9
 947 0441 3D       		.byte	0x3d
 948 0442 FB000000 		.4byte	0xfb
 949 0446 2C02     		.2byte	0x22c
 950 0448 0D       		.uleb128 0xd
 951 0449 B30A0000 		.4byte	.LASF69
 952 044d 09       		.byte	0x9
 953 044e 3E       		.byte	0x3e
 954 044f F6000000 		.4byte	0xf6
 955 0453 3002     		.2byte	0x230
 956 0455 0D       		.uleb128 0xd
 957 0456 4A090000 		.4byte	.LASF70
 958 045a 09       		.byte	0x9
 959 045b 3F       		.byte	0x3f
 960 045c F6000000 		.4byte	0xf6
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 84


 961 0460 3402     		.2byte	0x234
 962 0462 0D       		.uleb128 0xd
 963 0463 16010000 		.4byte	.LASF71
 964 0467 09       		.byte	0x9
 965 0468 40       		.byte	0x40
 966 0469 F6000000 		.4byte	0xf6
 967 046d 3802     		.2byte	0x238
 968 046f 0D       		.uleb128 0xd
 969 0470 390A0000 		.4byte	.LASF72
 970 0474 09       		.byte	0x9
 971 0475 41       		.byte	0x41
 972 0476 FB000000 		.4byte	0xfb
 973 047a 3C02     		.2byte	0x23c
 974 047c 0D       		.uleb128 0xd
 975 047d 49010000 		.4byte	.LASF73
 976 0481 09       		.byte	0x9
 977 0482 42       		.byte	0x42
 978 0483 FB000000 		.4byte	0xfb
 979 0487 4002     		.2byte	0x240
 980 0489 0D       		.uleb128 0xd
 981 048a 2C0D0000 		.4byte	.LASF74
 982 048e 09       		.byte	0x9
 983 048f 43       		.byte	0x43
 984 0490 C7050000 		.4byte	0x5c7
 985 0494 4402     		.2byte	0x244
 986 0496 0D       		.uleb128 0xd
 987 0497 8F060000 		.4byte	.LASF75
 988 049b 09       		.byte	0x9
 989 049c 44       		.byte	0x44
 990 049d F6000000 		.4byte	0xf6
 991 04a1 8002     		.2byte	0x280
 992 04a3 0D       		.uleb128 0xd
 993 04a4 360D0000 		.4byte	.LASF76
 994 04a8 09       		.byte	0x9
 995 04a9 45       		.byte	0x45
 996 04aa D1050000 		.4byte	0x5d1
 997 04ae 8402     		.2byte	0x284
 998 04b0 0D       		.uleb128 0xd
 999 04b1 7B020000 		.4byte	.LASF77
 1000 04b5 09       		.byte	0x9
 1001 04b6 46       		.byte	0x46
 1002 04b7 FB000000 		.4byte	0xfb
 1003 04bb 9002     		.2byte	0x290
 1004 04bd 0D       		.uleb128 0xd
 1005 04be FF120000 		.4byte	.LASF78
 1006 04c2 09       		.byte	0x9
 1007 04c3 47       		.byte	0x47
 1008 04c4 DB050000 		.4byte	0x5db
 1009 04c8 9402     		.2byte	0x294
 1010 04ca 0D       		.uleb128 0xd
 1011 04cb C5120000 		.4byte	.LASF79
 1012 04cf 09       		.byte	0x9
 1013 04d0 48       		.byte	0x48
 1014 04d1 FB000000 		.4byte	0xfb
 1015 04d5 A002     		.2byte	0x2a0
 1016 04d7 0D       		.uleb128 0xd
 1017 04d8 E8080000 		.4byte	.LASF80
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 85


 1018 04dc 09       		.byte	0x9
 1019 04dd 49       		.byte	0x49
 1020 04de FB000000 		.4byte	0xfb
 1021 04e2 A402     		.2byte	0x2a4
 1022 04e4 0D       		.uleb128 0xd
 1023 04e5 4F0D0000 		.4byte	.LASF81
 1024 04e9 09       		.byte	0x9
 1025 04ea 4A       		.byte	0x4a
 1026 04eb E5050000 		.4byte	0x5e5
 1027 04ef A802     		.2byte	0x2a8
 1028 04f1 0D       		.uleb128 0xd
 1029 04f2 DD0F0000 		.4byte	.LASF82
 1030 04f6 09       		.byte	0x9
 1031 04f7 4B       		.byte	0x4b
 1032 04f8 F6000000 		.4byte	0xf6
 1033 04fc 0003     		.2byte	0x300
 1034 04fe 0D       		.uleb128 0xd
 1035 04ff 260B0000 		.4byte	.LASF83
 1036 0503 09       		.byte	0x9
 1037 0504 4C       		.byte	0x4c
 1038 0505 F6000000 		.4byte	0xf6
 1039 0509 0403     		.2byte	0x304
 1040 050b 0D       		.uleb128 0xd
 1041 050c 590D0000 		.4byte	.LASF84
 1042 0510 09       		.byte	0x9
 1043 0511 4D       		.byte	0x4d
 1044 0512 FF050000 		.4byte	0x5ff
 1045 0516 0803     		.2byte	0x308
 1046 0518 0D       		.uleb128 0xd
 1047 0519 0F0A0000 		.4byte	.LASF85
 1048 051d 09       		.byte	0x9
 1049 051e 4E       		.byte	0x4e
 1050 051f F6000000 		.4byte	0xf6
 1051 0523 4003     		.2byte	0x340
 1052 0525 0D       		.uleb128 0xd
 1053 0526 870D0000 		.4byte	.LASF86
 1054 052a 09       		.byte	0x9
 1055 052b 4F       		.byte	0x4f
 1056 052c F6000000 		.4byte	0xf6
 1057 0530 4403     		.2byte	0x344
 1058 0532 0D       		.uleb128 0xd
 1059 0533 57120000 		.4byte	.LASF87
 1060 0537 09       		.byte	0x9
 1061 0538 50       		.byte	0x50
 1062 0539 FB000000 		.4byte	0xfb
 1063 053d 4803     		.2byte	0x348
 1064 053f 0D       		.uleb128 0xd
 1065 0540 D8100000 		.4byte	.LASF88
 1066 0544 09       		.byte	0x9
 1067 0545 51       		.byte	0x51
 1068 0546 1A060000 		.4byte	0x61a
 1069 054a 4C03     		.2byte	0x34c
 1070 054c 0D       		.uleb128 0xd
 1071 054d 63100000 		.4byte	.LASF89
 1072 0551 09       		.byte	0x9
 1073 0552 52       		.byte	0x52
 1074 0553 F6000000 		.4byte	0xf6
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 86


 1075 0557 000F     		.2byte	0xf00
 1076 0559 0D       		.uleb128 0xd
 1077 055a 6D100000 		.4byte	.LASF90
 1078 055e 09       		.byte	0x9
 1079 055f 53       		.byte	0x53
 1080 0560 F6000000 		.4byte	0xf6
 1081 0564 040F     		.2byte	0xf04
 1082 0566 00       		.byte	0
 1083 0567 05       		.uleb128 0x5
 1084 0568 00010000 		.4byte	0x100
 1085 056c 06       		.uleb128 0x6
 1086 056d 67050000 		.4byte	0x567
 1087 0571 07       		.uleb128 0x7
 1088 0572 FB000000 		.4byte	0xfb
 1089 0576 81050000 		.4byte	0x581
 1090 057a 08       		.uleb128 0x8
 1091 057b EF000000 		.4byte	0xef
 1092 057f 15       		.byte	0x15
 1093 0580 00       		.byte	0
 1094 0581 05       		.uleb128 0x5
 1095 0582 71050000 		.4byte	0x571
 1096 0586 06       		.uleb128 0x6
 1097 0587 81050000 		.4byte	0x581
 1098 058b 05       		.uleb128 0x5
 1099 058c 10010000 		.4byte	0x110
 1100 0590 05       		.uleb128 0x5
 1101 0591 20010000 		.4byte	0x120
 1102 0595 06       		.uleb128 0x6
 1103 0596 90050000 		.4byte	0x590
 1104 059a 05       		.uleb128 0x5
 1105 059b 20010000 		.4byte	0x120
 1106 059f 06       		.uleb128 0x6
 1107 05a0 9A050000 		.4byte	0x59a
 1108 05a4 05       		.uleb128 0x5
 1109 05a5 20010000 		.4byte	0x120
 1110 05a9 06       		.uleb128 0x6
 1111 05aa A4050000 		.4byte	0x5a4
 1112 05ae 05       		.uleb128 0x5
 1113 05af 20010000 		.4byte	0x120
 1114 05b3 06       		.uleb128 0x6
 1115 05b4 AE050000 		.4byte	0x5ae
 1116 05b8 05       		.uleb128 0x5
 1117 05b9 20010000 		.4byte	0x120
 1118 05bd 06       		.uleb128 0x6
 1119 05be B8050000 		.4byte	0x5b8
 1120 05c2 05       		.uleb128 0x5
 1121 05c3 40010000 		.4byte	0x140
 1122 05c7 06       		.uleb128 0x6
 1123 05c8 C2050000 		.4byte	0x5c2
 1124 05cc 05       		.uleb128 0x5
 1125 05cd 30010000 		.4byte	0x130
 1126 05d1 06       		.uleb128 0x6
 1127 05d2 CC050000 		.4byte	0x5cc
 1128 05d6 05       		.uleb128 0x5
 1129 05d7 30010000 		.4byte	0x130
 1130 05db 06       		.uleb128 0x6
 1131 05dc D6050000 		.4byte	0x5d6
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 87


 1132 05e0 05       		.uleb128 0x5
 1133 05e1 71050000 		.4byte	0x571
 1134 05e5 06       		.uleb128 0x6
 1135 05e6 E0050000 		.4byte	0x5e0
 1136 05ea 07       		.uleb128 0x7
 1137 05eb FB000000 		.4byte	0xfb
 1138 05ef FA050000 		.4byte	0x5fa
 1139 05f3 08       		.uleb128 0x8
 1140 05f4 EF000000 		.4byte	0xef
 1141 05f8 0D       		.byte	0xd
 1142 05f9 00       		.byte	0
 1143 05fa 05       		.uleb128 0x5
 1144 05fb EA050000 		.4byte	0x5ea
 1145 05ff 06       		.uleb128 0x6
 1146 0600 FA050000 		.4byte	0x5fa
 1147 0604 07       		.uleb128 0x7
 1148 0605 FB000000 		.4byte	0xfb
 1149 0609 15060000 		.4byte	0x615
 1150 060d 0E       		.uleb128 0xe
 1151 060e EF000000 		.4byte	0xef
 1152 0612 EC02     		.2byte	0x2ec
 1153 0614 00       		.byte	0
 1154 0615 05       		.uleb128 0x5
 1155 0616 04060000 		.4byte	0x604
 1156 061a 06       		.uleb128 0x6
 1157 061b 15060000 		.4byte	0x615
 1158 061f 03       		.uleb128 0x3
 1159 0620 09070000 		.4byte	.LASF91
 1160 0624 09       		.byte	0x9
 1161 0625 54       		.byte	0x54
 1162 0626 DF020000 		.4byte	0x2df
 1163 062a 0F       		.uleb128 0xf
 1164 062b A9070000 		.4byte	.LASF92
 1165 062f 0A       		.byte	0xa
 1166 0630 3106     		.2byte	0x631
 1167 0632 2E020000 		.4byte	0x22e
 1168 0636 0F       		.uleb128 0xf
 1169 0637 82100000 		.4byte	.LASF93
 1170 063b 0A       		.byte	0xa
 1171 063c 3206     		.2byte	0x632
 1172 063e D4020000 		.4byte	0x2d4
 1173 0642 0F       		.uleb128 0xf
 1174 0643 C9060000 		.4byte	.LASF94
 1175 0647 0A       		.byte	0xa
 1176 0648 5206     		.2byte	0x652
 1177 064a 1F060000 		.4byte	0x61f
 1178 064e 02       		.uleb128 0x2
 1179 064f 08       		.byte	0x8
 1180 0650 04       		.byte	0x4
 1181 0651 060C0000 		.4byte	.LASF95
 1182 0655 09       		.uleb128 0x9
 1183 0656 B8       		.byte	0xb8
 1184 0657 0B       		.byte	0xb
 1185 0658 34       		.byte	0x34
 1186 0659 660A0000 		.4byte	0xa66
 1187 065d 0B       		.uleb128 0xb
 1188 065e D9010000 		.4byte	.LASF96
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 88


 1189 0662 0B       		.byte	0xb
 1190 0663 37       		.byte	0x37
 1191 0664 E4000000 		.4byte	0xe4
 1192 0668 00       		.byte	0
 1193 0669 0B       		.uleb128 0xb
 1194 066a 50050000 		.4byte	.LASF97
 1195 066e 0B       		.byte	0xb
 1196 066f 38       		.byte	0x38
 1197 0670 E4000000 		.4byte	0xe4
 1198 0674 04       		.byte	0x4
 1199 0675 0B       		.uleb128 0xb
 1200 0676 F1000000 		.4byte	.LASF98
 1201 067a 0B       		.byte	0xb
 1202 067b 39       		.byte	0x39
 1203 067c E4000000 		.4byte	0xe4
 1204 0680 08       		.byte	0x8
 1205 0681 0B       		.uleb128 0xb
 1206 0682 2E060000 		.4byte	.LASF99
 1207 0686 0B       		.byte	0xb
 1208 0687 3A       		.byte	0x3a
 1209 0688 E4000000 		.4byte	0xe4
 1210 068c 0C       		.byte	0xc
 1211 068d 0B       		.uleb128 0xb
 1212 068e 230C0000 		.4byte	.LASF100
 1213 0692 0B       		.byte	0xb
 1214 0693 3B       		.byte	0x3b
 1215 0694 E4000000 		.4byte	0xe4
 1216 0698 10       		.byte	0x10
 1217 0699 0B       		.uleb128 0xb
 1218 069a 7F0A0000 		.4byte	.LASF101
 1219 069e 0B       		.byte	0xb
 1220 069f 3C       		.byte	0x3c
 1221 06a0 E4000000 		.4byte	0xe4
 1222 06a4 14       		.byte	0x14
 1223 06a5 0B       		.uleb128 0xb
 1224 06a6 3D070000 		.4byte	.LASF102
 1225 06aa 0B       		.byte	0xb
 1226 06ab 3D       		.byte	0x3d
 1227 06ac E4000000 		.4byte	0xe4
 1228 06b0 18       		.byte	0x18
 1229 06b1 0B       		.uleb128 0xb
 1230 06b2 92120000 		.4byte	.LASF103
 1231 06b6 0B       		.byte	0xb
 1232 06b7 3E       		.byte	0x3e
 1233 06b8 E4000000 		.4byte	0xe4
 1234 06bc 1C       		.byte	0x1c
 1235 06bd 0B       		.uleb128 0xb
 1236 06be F8090000 		.4byte	.LASF104
 1237 06c2 0B       		.byte	0xb
 1238 06c3 3F       		.byte	0x3f
 1239 06c4 E4000000 		.4byte	0xe4
 1240 06c8 20       		.byte	0x20
 1241 06c9 0B       		.uleb128 0xb
 1242 06ca F7070000 		.4byte	.LASF105
 1243 06ce 0B       		.byte	0xb
 1244 06cf 40       		.byte	0x40
 1245 06d0 E4000000 		.4byte	0xe4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 89


 1246 06d4 24       		.byte	0x24
 1247 06d5 0B       		.uleb128 0xb
 1248 06d6 A30D0000 		.4byte	.LASF106
 1249 06da 0B       		.byte	0xb
 1250 06db 43       		.byte	0x43
 1251 06dc B8000000 		.4byte	0xb8
 1252 06e0 28       		.byte	0x28
 1253 06e1 0B       		.uleb128 0xb
 1254 06e2 E7040000 		.4byte	.LASF107
 1255 06e6 0B       		.byte	0xb
 1256 06e7 44       		.byte	0x44
 1257 06e8 B8000000 		.4byte	0xb8
 1258 06ec 29       		.byte	0x29
 1259 06ed 0B       		.uleb128 0xb
 1260 06ee 78070000 		.4byte	.LASF108
 1261 06f2 0B       		.byte	0xb
 1262 06f3 45       		.byte	0x45
 1263 06f4 B8000000 		.4byte	0xb8
 1264 06f8 2A       		.byte	0x2a
 1265 06f9 0B       		.uleb128 0xb
 1266 06fa C90D0000 		.4byte	.LASF109
 1267 06fe 0B       		.byte	0xb
 1268 06ff 46       		.byte	0x46
 1269 0700 B8000000 		.4byte	0xb8
 1270 0704 2B       		.byte	0x2b
 1271 0705 0B       		.uleb128 0xb
 1272 0706 BD0D0000 		.4byte	.LASF110
 1273 070a 0B       		.byte	0xb
 1274 070b 47       		.byte	0x47
 1275 070c B8000000 		.4byte	0xb8
 1276 0710 2C       		.byte	0x2c
 1277 0711 0B       		.uleb128 0xb
 1278 0712 800F0000 		.4byte	.LASF111
 1279 0716 0B       		.byte	0xb
 1280 0717 48       		.byte	0x48
 1281 0718 B8000000 		.4byte	0xb8
 1282 071c 2D       		.byte	0x2d
 1283 071d 0B       		.uleb128 0xb
 1284 071e 6D130000 		.4byte	.LASF112
 1285 0722 0B       		.byte	0xb
 1286 0723 49       		.byte	0x49
 1287 0724 B8000000 		.4byte	0xb8
 1288 0728 2E       		.byte	0x2e
 1289 0729 0B       		.uleb128 0xb
 1290 072a 72120000 		.4byte	.LASF113
 1291 072e 0B       		.byte	0xb
 1292 072f 4A       		.byte	0x4a
 1293 0730 B8000000 		.4byte	0xb8
 1294 0734 2F       		.byte	0x2f
 1295 0735 0B       		.uleb128 0xb
 1296 0736 CD030000 		.4byte	.LASF114
 1297 073a 0B       		.byte	0xb
 1298 073b 4B       		.byte	0x4b
 1299 073c B8000000 		.4byte	0xb8
 1300 0740 30       		.byte	0x30
 1301 0741 0B       		.uleb128 0xb
 1302 0742 DB070000 		.4byte	.LASF115
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 90


 1303 0746 0B       		.byte	0xb
 1304 0747 4E       		.byte	0x4e
 1305 0748 B8000000 		.4byte	0xb8
 1306 074c 31       		.byte	0x31
 1307 074d 0B       		.uleb128 0xb
 1308 074e F0110000 		.4byte	.LASF116
 1309 0752 0B       		.byte	0xb
 1310 0753 4F       		.byte	0x4f
 1311 0754 B8000000 		.4byte	0xb8
 1312 0758 32       		.byte	0x32
 1313 0759 0B       		.uleb128 0xb
 1314 075a C90A0000 		.4byte	.LASF117
 1315 075e 0B       		.byte	0xb
 1316 075f 50       		.byte	0x50
 1317 0760 B8000000 		.4byte	0xb8
 1318 0764 33       		.byte	0x33
 1319 0765 0B       		.uleb128 0xb
 1320 0766 1A080000 		.4byte	.LASF118
 1321 076a 0B       		.byte	0xb
 1322 076b 51       		.byte	0x51
 1323 076c B8000000 		.4byte	0xb8
 1324 0770 34       		.byte	0x34
 1325 0771 0B       		.uleb128 0xb
 1326 0772 31090000 		.4byte	.LASF119
 1327 0776 0B       		.byte	0xb
 1328 0777 52       		.byte	0x52
 1329 0778 C3000000 		.4byte	0xc3
 1330 077c 36       		.byte	0x36
 1331 077d 0B       		.uleb128 0xb
 1332 077e F3020000 		.4byte	.LASF120
 1333 0782 0B       		.byte	0xb
 1334 0783 53       		.byte	0x53
 1335 0784 C3000000 		.4byte	0xc3
 1336 0788 38       		.byte	0x38
 1337 0789 0B       		.uleb128 0xb
 1338 078a 0A020000 		.4byte	.LASF121
 1339 078e 0B       		.byte	0xb
 1340 078f 54       		.byte	0x54
 1341 0790 C3000000 		.4byte	0xc3
 1342 0794 3A       		.byte	0x3a
 1343 0795 0B       		.uleb128 0xb
 1344 0796 02080000 		.4byte	.LASF122
 1345 079a 0B       		.byte	0xb
 1346 079b 55       		.byte	0x55
 1347 079c B8000000 		.4byte	0xb8
 1348 07a0 3C       		.byte	0x3c
 1349 07a1 0B       		.uleb128 0xb
 1350 07a2 BE060000 		.4byte	.LASF123
 1351 07a6 0B       		.byte	0xb
 1352 07a7 56       		.byte	0x56
 1353 07a8 B8000000 		.4byte	0xb8
 1354 07ac 3D       		.byte	0x3d
 1355 07ad 0B       		.uleb128 0xb
 1356 07ae 610C0000 		.4byte	.LASF124
 1357 07b2 0B       		.byte	0xb
 1358 07b3 57       		.byte	0x57
 1359 07b4 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 91


 1360 07b8 3E       		.byte	0x3e
 1361 07b9 0B       		.uleb128 0xb
 1362 07ba 9E000000 		.4byte	.LASF125
 1363 07be 0B       		.byte	0xb
 1364 07bf 58       		.byte	0x58
 1365 07c0 B8000000 		.4byte	0xb8
 1366 07c4 3F       		.byte	0x3f
 1367 07c5 0B       		.uleb128 0xb
 1368 07c6 54010000 		.4byte	.LASF126
 1369 07ca 0B       		.byte	0xb
 1370 07cb 59       		.byte	0x59
 1371 07cc B8000000 		.4byte	0xb8
 1372 07d0 40       		.byte	0x40
 1373 07d1 0B       		.uleb128 0xb
 1374 07d2 DA0E0000 		.4byte	.LASF127
 1375 07d6 0B       		.byte	0xb
 1376 07d7 5A       		.byte	0x5a
 1377 07d8 B8000000 		.4byte	0xb8
 1378 07dc 41       		.byte	0x41
 1379 07dd 0B       		.uleb128 0xb
 1380 07de 18050000 		.4byte	.LASF128
 1381 07e2 0B       		.byte	0xb
 1382 07e3 5B       		.byte	0x5b
 1383 07e4 B8000000 		.4byte	0xb8
 1384 07e8 42       		.byte	0x42
 1385 07e9 0B       		.uleb128 0xb
 1386 07ea 9E070000 		.4byte	.LASF129
 1387 07ee 0B       		.byte	0xb
 1388 07ef 5C       		.byte	0x5c
 1389 07f0 B8000000 		.4byte	0xb8
 1390 07f4 43       		.byte	0x43
 1391 07f5 0B       		.uleb128 0xb
 1392 07f6 9A080000 		.4byte	.LASF130
 1393 07fa 0B       		.byte	0xb
 1394 07fb 5D       		.byte	0x5d
 1395 07fc B8000000 		.4byte	0xb8
 1396 0800 44       		.byte	0x44
 1397 0801 0B       		.uleb128 0xb
 1398 0802 D70D0000 		.4byte	.LASF131
 1399 0806 0B       		.byte	0xb
 1400 0807 5E       		.byte	0x5e
 1401 0808 E4000000 		.4byte	0xe4
 1402 080c 48       		.byte	0x48
 1403 080d 0B       		.uleb128 0xb
 1404 080e AB020000 		.4byte	.LASF132
 1405 0812 0B       		.byte	0xb
 1406 0813 5F       		.byte	0x5f
 1407 0814 E4000000 		.4byte	0xe4
 1408 0818 4C       		.byte	0x4c
 1409 0819 0B       		.uleb128 0xb
 1410 081a 65110000 		.4byte	.LASF133
 1411 081e 0B       		.byte	0xb
 1412 081f 60       		.byte	0x60
 1413 0820 B8000000 		.4byte	0xb8
 1414 0824 50       		.byte	0x50
 1415 0825 0B       		.uleb128 0xb
 1416 0826 D7060000 		.4byte	.LASF134
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 92


 1417 082a 0B       		.byte	0xb
 1418 082b 61       		.byte	0x61
 1419 082c B8000000 		.4byte	0xb8
 1420 0830 51       		.byte	0x51
 1421 0831 0B       		.uleb128 0xb
 1422 0832 500A0000 		.4byte	.LASF135
 1423 0836 0B       		.byte	0xb
 1424 0837 62       		.byte	0x62
 1425 0838 B8000000 		.4byte	0xb8
 1426 083c 52       		.byte	0x52
 1427 083d 0B       		.uleb128 0xb
 1428 083e BB0B0000 		.4byte	.LASF136
 1429 0842 0B       		.byte	0xb
 1430 0843 63       		.byte	0x63
 1431 0844 B8000000 		.4byte	0xb8
 1432 0848 53       		.byte	0x53
 1433 0849 0B       		.uleb128 0xb
 1434 084a E3100000 		.4byte	.LASF137
 1435 084e 0B       		.byte	0xb
 1436 084f 64       		.byte	0x64
 1437 0850 B8000000 		.4byte	0xb8
 1438 0854 54       		.byte	0x54
 1439 0855 0B       		.uleb128 0xb
 1440 0856 20070000 		.4byte	.LASF138
 1441 085a 0B       		.byte	0xb
 1442 085b 65       		.byte	0x65
 1443 085c B8000000 		.4byte	0xb8
 1444 0860 55       		.byte	0x55
 1445 0861 0B       		.uleb128 0xb
 1446 0862 00000000 		.4byte	.LASF139
 1447 0866 0B       		.byte	0xb
 1448 0867 66       		.byte	0x66
 1449 0868 B8000000 		.4byte	0xb8
 1450 086c 56       		.byte	0x56
 1451 086d 0B       		.uleb128 0xb
 1452 086e 790C0000 		.4byte	.LASF140
 1453 0872 0B       		.byte	0xb
 1454 0873 67       		.byte	0x67
 1455 0874 B8000000 		.4byte	0xb8
 1456 0878 57       		.byte	0x57
 1457 0879 0B       		.uleb128 0xb
 1458 087a AA060000 		.4byte	.LASF141
 1459 087e 0B       		.byte	0xb
 1460 087f 68       		.byte	0x68
 1461 0880 B8000000 		.4byte	0xb8
 1462 0884 58       		.byte	0x58
 1463 0885 0B       		.uleb128 0xb
 1464 0886 DF120000 		.4byte	.LASF142
 1465 088a 0B       		.byte	0xb
 1466 088b 69       		.byte	0x69
 1467 088c B8000000 		.4byte	0xb8
 1468 0890 59       		.byte	0x59
 1469 0891 0B       		.uleb128 0xb
 1470 0892 DE110000 		.4byte	.LASF143
 1471 0896 0B       		.byte	0xb
 1472 0897 6E       		.byte	0x6e
 1473 0898 CE000000 		.4byte	0xce
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 93


 1474 089c 5A       		.byte	0x5a
 1475 089d 0B       		.uleb128 0xb
 1476 089e 0D010000 		.4byte	.LASF144
 1477 08a2 0B       		.byte	0xb
 1478 08a3 6F       		.byte	0x6f
 1479 08a4 CE000000 		.4byte	0xce
 1480 08a8 5C       		.byte	0x5c
 1481 08a9 0B       		.uleb128 0xb
 1482 08aa 000A0000 		.4byte	.LASF145
 1483 08ae 0B       		.byte	0xb
 1484 08af 70       		.byte	0x70
 1485 08b0 B8000000 		.4byte	0xb8
 1486 08b4 5E       		.byte	0x5e
 1487 08b5 0B       		.uleb128 0xb
 1488 08b6 FE110000 		.4byte	.LASF146
 1489 08ba 0B       		.byte	0xb
 1490 08bb 71       		.byte	0x71
 1491 08bc B8000000 		.4byte	0xb8
 1492 08c0 5F       		.byte	0x5f
 1493 08c1 0B       		.uleb128 0xb
 1494 08c2 BF070000 		.4byte	.LASF147
 1495 08c6 0B       		.byte	0xb
 1496 08c7 72       		.byte	0x72
 1497 08c8 B8000000 		.4byte	0xb8
 1498 08cc 60       		.byte	0x60
 1499 08cd 0B       		.uleb128 0xb
 1500 08ce F1080000 		.4byte	.LASF148
 1501 08d2 0B       		.byte	0xb
 1502 08d3 73       		.byte	0x73
 1503 08d4 E4000000 		.4byte	0xe4
 1504 08d8 64       		.byte	0x64
 1505 08d9 0B       		.uleb128 0xb
 1506 08da 8D0C0000 		.4byte	.LASF149
 1507 08de 0B       		.byte	0xb
 1508 08df 76       		.byte	0x76
 1509 08e0 CE000000 		.4byte	0xce
 1510 08e4 68       		.byte	0x68
 1511 08e5 0B       		.uleb128 0xb
 1512 08e6 390C0000 		.4byte	.LASF150
 1513 08ea 0B       		.byte	0xb
 1514 08eb 77       		.byte	0x77
 1515 08ec CE000000 		.4byte	0xce
 1516 08f0 6A       		.byte	0x6a
 1517 08f1 0B       		.uleb128 0xb
 1518 08f2 950A0000 		.4byte	.LASF151
 1519 08f6 0B       		.byte	0xb
 1520 08f7 78       		.byte	0x78
 1521 08f8 CE000000 		.4byte	0xce
 1522 08fc 6C       		.byte	0x6c
 1523 08fd 0B       		.uleb128 0xb
 1524 08fe 57020000 		.4byte	.LASF152
 1525 0902 0B       		.byte	0xb
 1526 0903 79       		.byte	0x79
 1527 0904 CE000000 		.4byte	0xce
 1528 0908 6E       		.byte	0x6e
 1529 0909 0B       		.uleb128 0xb
 1530 090a 63060000 		.4byte	.LASF153
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 94


 1531 090e 0B       		.byte	0xb
 1532 090f 7B       		.byte	0x7b
 1533 0910 B8000000 		.4byte	0xb8
 1534 0914 70       		.byte	0x70
 1535 0915 0B       		.uleb128 0xb
 1536 0916 12040000 		.4byte	.LASF154
 1537 091a 0B       		.byte	0xb
 1538 091b 7C       		.byte	0x7c
 1539 091c B8000000 		.4byte	0xb8
 1540 0920 71       		.byte	0x71
 1541 0921 0B       		.uleb128 0xb
 1542 0922 86020000 		.4byte	.LASF155
 1543 0926 0B       		.byte	0xb
 1544 0927 7D       		.byte	0x7d
 1545 0928 B8000000 		.4byte	0xb8
 1546 092c 72       		.byte	0x72
 1547 092d 0B       		.uleb128 0xb
 1548 092e 7B010000 		.4byte	.LASF156
 1549 0932 0B       		.byte	0xb
 1550 0933 7E       		.byte	0x7e
 1551 0934 B8000000 		.4byte	0xb8
 1552 0938 73       		.byte	0x73
 1553 0939 0B       		.uleb128 0xb
 1554 093a FC0C0000 		.4byte	.LASF157
 1555 093e 0B       		.byte	0xb
 1556 093f 80       		.byte	0x80
 1557 0940 CE000000 		.4byte	0xce
 1558 0944 74       		.byte	0x74
 1559 0945 0B       		.uleb128 0xb
 1560 0946 CD0B0000 		.4byte	.LASF158
 1561 094a 0B       		.byte	0xb
 1562 094b 81       		.byte	0x81
 1563 094c CE000000 		.4byte	0xce
 1564 0950 76       		.byte	0x76
 1565 0951 0B       		.uleb128 0xb
 1566 0952 B0120000 		.4byte	.LASF159
 1567 0956 0B       		.byte	0xb
 1568 0957 82       		.byte	0x82
 1569 0958 CE000000 		.4byte	0xce
 1570 095c 78       		.byte	0x78
 1571 095d 0B       		.uleb128 0xb
 1572 095e EA0E0000 		.4byte	.LASF160
 1573 0962 0B       		.byte	0xb
 1574 0963 83       		.byte	0x83
 1575 0964 CE000000 		.4byte	0xce
 1576 0968 7A       		.byte	0x7a
 1577 0969 0B       		.uleb128 0xb
 1578 096a C50E0000 		.4byte	.LASF161
 1579 096e 0B       		.byte	0xb
 1580 096f 86       		.byte	0x86
 1581 0970 B8000000 		.4byte	0xb8
 1582 0974 7C       		.byte	0x7c
 1583 0975 0B       		.uleb128 0xb
 1584 0976 91110000 		.4byte	.LASF162
 1585 097a 0B       		.byte	0xb
 1586 097b 87       		.byte	0x87
 1587 097c B8000000 		.4byte	0xb8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 95


 1588 0980 7D       		.byte	0x7d
 1589 0981 0B       		.uleb128 0xb
 1590 0982 6B050000 		.4byte	.LASF163
 1591 0986 0B       		.byte	0xb
 1592 0987 88       		.byte	0x88
 1593 0988 B8000000 		.4byte	0xb8
 1594 098c 7E       		.byte	0x7e
 1595 098d 0B       		.uleb128 0xb
 1596 098e AC040000 		.4byte	.LASF164
 1597 0992 0B       		.byte	0xb
 1598 0993 89       		.byte	0x89
 1599 0994 B8000000 		.4byte	0xb8
 1600 0998 7F       		.byte	0x7f
 1601 0999 0B       		.uleb128 0xb
 1602 099a 120B0000 		.4byte	.LASF165
 1603 099e 0B       		.byte	0xb
 1604 099f 8A       		.byte	0x8a
 1605 09a0 B8000000 		.4byte	0xb8
 1606 09a4 80       		.byte	0x80
 1607 09a5 0B       		.uleb128 0xb
 1608 09a6 87000000 		.4byte	.LASF166
 1609 09aa 0B       		.byte	0xb
 1610 09ab 8D       		.byte	0x8d
 1611 09ac E4000000 		.4byte	0xe4
 1612 09b0 84       		.byte	0x84
 1613 09b1 0B       		.uleb128 0xb
 1614 09b2 1D0F0000 		.4byte	.LASF167
 1615 09b6 0B       		.byte	0xb
 1616 09b7 8E       		.byte	0x8e
 1617 09b8 E4000000 		.4byte	0xe4
 1618 09bc 88       		.byte	0x88
 1619 09bd 0B       		.uleb128 0xb
 1620 09be 19120000 		.4byte	.LASF168
 1621 09c2 0B       		.byte	0xb
 1622 09c3 8F       		.byte	0x8f
 1623 09c4 E4000000 		.4byte	0xe4
 1624 09c8 8C       		.byte	0x8c
 1625 09c9 0B       		.uleb128 0xb
 1626 09ca 2D100000 		.4byte	.LASF169
 1627 09ce 0B       		.byte	0xb
 1628 09cf 90       		.byte	0x90
 1629 09d0 E4000000 		.4byte	0xe4
 1630 09d4 90       		.byte	0x90
 1631 09d5 0B       		.uleb128 0xb
 1632 09d6 E70C0000 		.4byte	.LASF170
 1633 09da 0B       		.byte	0xb
 1634 09db 91       		.byte	0x91
 1635 09dc E4000000 		.4byte	0xe4
 1636 09e0 94       		.byte	0x94
 1637 09e1 0B       		.uleb128 0xb
 1638 09e2 27040000 		.4byte	.LASF171
 1639 09e6 0B       		.byte	0xb
 1640 09e7 92       		.byte	0x92
 1641 09e8 E4000000 		.4byte	0xe4
 1642 09ec 98       		.byte	0x98
 1643 09ed 0B       		.uleb128 0xb
 1644 09ee 3C0F0000 		.4byte	.LASF172
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 96


 1645 09f2 0B       		.byte	0xb
 1646 09f3 93       		.byte	0x93
 1647 09f4 E4000000 		.4byte	0xe4
 1648 09f8 9C       		.byte	0x9c
 1649 09f9 0B       		.uleb128 0xb
 1650 09fa 88070000 		.4byte	.LASF173
 1651 09fe 0B       		.byte	0xb
 1652 09ff 94       		.byte	0x94
 1653 0a00 E4000000 		.4byte	0xe4
 1654 0a04 A0       		.byte	0xa0
 1655 0a05 0B       		.uleb128 0xb
 1656 0a06 FF0E0000 		.4byte	.LASF174
 1657 0a0a 0B       		.byte	0xb
 1658 0a0b 95       		.byte	0x95
 1659 0a0c CE000000 		.4byte	0xce
 1660 0a10 A4       		.byte	0xa4
 1661 0a11 0B       		.uleb128 0xb
 1662 0a12 D20C0000 		.4byte	.LASF175
 1663 0a16 0B       		.byte	0xb
 1664 0a17 96       		.byte	0x96
 1665 0a18 CE000000 		.4byte	0xce
 1666 0a1c A6       		.byte	0xa6
 1667 0a1d 0B       		.uleb128 0xb
 1668 0a1e 9F0F0000 		.4byte	.LASF176
 1669 0a22 0B       		.byte	0xb
 1670 0a23 97       		.byte	0x97
 1671 0a24 CE000000 		.4byte	0xce
 1672 0a28 A8       		.byte	0xa8
 1673 0a29 0B       		.uleb128 0xb
 1674 0a2a DC090000 		.4byte	.LASF177
 1675 0a2e 0B       		.byte	0xb
 1676 0a2f 98       		.byte	0x98
 1677 0a30 CE000000 		.4byte	0xce
 1678 0a34 AA       		.byte	0xaa
 1679 0a35 0B       		.uleb128 0xb
 1680 0a36 C7020000 		.4byte	.LASF178
 1681 0a3a 0B       		.byte	0xb
 1682 0a3b 99       		.byte	0x99
 1683 0a3c CE000000 		.4byte	0xce
 1684 0a40 AC       		.byte	0xac
 1685 0a41 0B       		.uleb128 0xb
 1686 0a42 640B0000 		.4byte	.LASF179
 1687 0a46 0B       		.byte	0xb
 1688 0a47 9A       		.byte	0x9a
 1689 0a48 CE000000 		.4byte	0xce
 1690 0a4c AE       		.byte	0xae
 1691 0a4d 0B       		.uleb128 0xb
 1692 0a4e E5020000 		.4byte	.LASF180
 1693 0a52 0B       		.byte	0xb
 1694 0a53 9D       		.byte	0x9d
 1695 0a54 CE000000 		.4byte	0xce
 1696 0a58 B0       		.byte	0xb0
 1697 0a59 0B       		.uleb128 0xb
 1698 0a5a 8C100000 		.4byte	.LASF181
 1699 0a5e 0B       		.byte	0xb
 1700 0a5f 9E       		.byte	0x9e
 1701 0a60 E4000000 		.4byte	0xe4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 97


 1702 0a64 B4       		.byte	0xb4
 1703 0a65 00       		.byte	0
 1704 0a66 03       		.uleb128 0x3
 1705 0a67 2E120000 		.4byte	.LASF182
 1706 0a6b 0B       		.byte	0xb
 1707 0a6c 9F       		.byte	0x9f
 1708 0a6d 55060000 		.4byte	0x655
 1709 0a71 10       		.uleb128 0x10
 1710 0a72 04       		.byte	0x4
 1711 0a73 770A0000 		.4byte	0xa77
 1712 0a77 11       		.uleb128 0x11
 1713 0a78 0F       		.uleb128 0xf
 1714 0a79 210E0000 		.4byte	.LASF183
 1715 0a7d 0C       		.byte	0xc
 1716 0a7e F601     		.2byte	0x1f6
 1717 0a80 840A0000 		.4byte	0xa84
 1718 0a84 02       		.uleb128 0x2
 1719 0a85 01       		.byte	0x1
 1720 0a86 08       		.byte	0x8
 1721 0a87 55080000 		.4byte	.LASF184
 1722 0a8b 02       		.uleb128 0x2
 1723 0a8c 04       		.byte	0x4
 1724 0a8d 04       		.byte	0x4
 1725 0a8e 82070000 		.4byte	.LASF185
 1726 0a92 02       		.uleb128 0x2
 1727 0a93 08       		.byte	0x8
 1728 0a94 04       		.byte	0x4
 1729 0a95 F2060000 		.4byte	.LASF186
 1730 0a99 0F       		.uleb128 0xf
 1731 0a9a 5C040000 		.4byte	.LASF187
 1732 0a9e 0C       		.byte	0xc
 1733 0a9f EA03     		.2byte	0x3ea
 1734 0aa1 B8000000 		.4byte	0xb8
 1735 0aa5 0F       		.uleb128 0xf
 1736 0aa6 19090000 		.4byte	.LASF188
 1737 0aaa 0C       		.byte	0xc
 1738 0aab F503     		.2byte	0x3f5
 1739 0aad 840A0000 		.4byte	0xa84
 1740 0ab1 12       		.uleb128 0x12
 1741 0ab2 04       		.byte	0x4
 1742 0ab3 02       		.uleb128 0x2
 1743 0ab4 01       		.byte	0x1
 1744 0ab5 02       		.byte	0x2
 1745 0ab6 F3100000 		.4byte	.LASF189
 1746 0aba 13       		.uleb128 0x13
 1747 0abb 01       		.byte	0x1
 1748 0abc 49000000 		.4byte	0x49
 1749 0ac0 04       		.byte	0x4
 1750 0ac1 0E03     		.2byte	0x30e
 1751 0ac3 D40A0000 		.4byte	0xad4
 1752 0ac7 14       		.uleb128 0x14
 1753 0ac8 BD0C0000 		.4byte	.LASF190
 1754 0acc 00       		.byte	0
 1755 0acd 14       		.uleb128 0x14
 1756 0ace 64020000 		.4byte	.LASF191
 1757 0ad2 01       		.byte	0x1
 1758 0ad3 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 98


 1759 0ad4 13       		.uleb128 0x13
 1760 0ad5 01       		.byte	0x1
 1761 0ad6 49000000 		.4byte	0x49
 1762 0ada 04       		.byte	0x4
 1763 0adb 1304     		.2byte	0x413
 1764 0add FA0A0000 		.4byte	0xafa
 1765 0ae1 14       		.uleb128 0x14
 1766 0ae2 D9030000 		.4byte	.LASF192
 1767 0ae6 00       		.byte	0
 1768 0ae7 14       		.uleb128 0x14
 1769 0ae8 3D060000 		.4byte	.LASF193
 1770 0aec 01       		.byte	0x1
 1771 0aed 14       		.uleb128 0x14
 1772 0aee 3D080000 		.4byte	.LASF194
 1773 0af2 02       		.byte	0x2
 1774 0af3 14       		.uleb128 0x14
 1775 0af4 61010000 		.4byte	.LASF195
 1776 0af8 03       		.byte	0x3
 1777 0af9 00       		.byte	0
 1778 0afa 0F       		.uleb128 0xf
 1779 0afb 09130000 		.4byte	.LASF196
 1780 0aff 04       		.byte	0x4
 1781 0b00 1804     		.2byte	0x418
 1782 0b02 D40A0000 		.4byte	0xad4
 1783 0b06 15       		.uleb128 0x15
 1784 0b07 78       		.byte	0x78
 1785 0b08 04       		.byte	0x4
 1786 0b09 0205     		.2byte	0x502
 1787 0b0b D30B0000 		.4byte	0xbd3
 1788 0b0f 16       		.uleb128 0x16
 1789 0b10 5E060000 		.4byte	.LASF197
 1790 0b14 04       		.byte	0x4
 1791 0b15 0405     		.2byte	0x504
 1792 0b17 E4000000 		.4byte	0xe4
 1793 0b1b 00       		.byte	0
 1794 0b1c 16       		.uleb128 0x16
 1795 0b1d 42100000 		.4byte	.LASF198
 1796 0b21 04       		.byte	0x4
 1797 0b22 0505     		.2byte	0x505
 1798 0b24 E4000000 		.4byte	0xe4
 1799 0b28 04       		.byte	0x4
 1800 0b29 16       		.uleb128 0x16
 1801 0b2a 540C0000 		.4byte	.LASF199
 1802 0b2e 04       		.byte	0x4
 1803 0b2f 0605     		.2byte	0x506
 1804 0b31 E4000000 		.4byte	0xe4
 1805 0b35 08       		.byte	0x8
 1806 0b36 16       		.uleb128 0x16
 1807 0b37 520F0000 		.4byte	.LASF200
 1808 0b3b 04       		.byte	0x4
 1809 0b3c 0705     		.2byte	0x507
 1810 0b3e E4000000 		.4byte	0xe4
 1811 0b42 0C       		.byte	0xc
 1812 0b43 16       		.uleb128 0x16
 1813 0b44 23060000 		.4byte	.LASF201
 1814 0b48 04       		.byte	0x4
 1815 0b49 0805     		.2byte	0x508
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 99


 1816 0b4b E4000000 		.4byte	0xe4
 1817 0b4f 10       		.byte	0x10
 1818 0b50 16       		.uleb128 0x16
 1819 0b51 AE090000 		.4byte	.LASF202
 1820 0b55 04       		.byte	0x4
 1821 0b56 0905     		.2byte	0x509
 1822 0b58 FA0A0000 		.4byte	0xafa
 1823 0b5c 14       		.byte	0x14
 1824 0b5d 16       		.uleb128 0x16
 1825 0b5e 85080000 		.4byte	.LASF203
 1826 0b62 04       		.byte	0x4
 1827 0b63 0A05     		.2byte	0x50a
 1828 0b65 E4000000 		.4byte	0xe4
 1829 0b69 18       		.byte	0x18
 1830 0b6a 16       		.uleb128 0x16
 1831 0b6b EB0A0000 		.4byte	.LASF204
 1832 0b6f 04       		.byte	0x4
 1833 0b70 0B05     		.2byte	0x50b
 1834 0b72 D30B0000 		.4byte	0xbd3
 1835 0b76 1C       		.byte	0x1c
 1836 0b77 16       		.uleb128 0x16
 1837 0b78 AA000000 		.4byte	.LASF205
 1838 0b7c 04       		.byte	0x4
 1839 0b7d 0C05     		.2byte	0x50c
 1840 0b7f E4000000 		.4byte	0xe4
 1841 0b83 5C       		.byte	0x5c
 1842 0b84 16       		.uleb128 0x16
 1843 0b85 3E120000 		.4byte	.LASF206
 1844 0b89 04       		.byte	0x4
 1845 0b8a 0D05     		.2byte	0x50d
 1846 0b8c E4000000 		.4byte	0xe4
 1847 0b90 60       		.byte	0x60
 1848 0b91 16       		.uleb128 0x16
 1849 0b92 B8090000 		.4byte	.LASF207
 1850 0b96 04       		.byte	0x4
 1851 0b97 0E05     		.2byte	0x50e
 1852 0b99 E4000000 		.4byte	0xe4
 1853 0b9d 64       		.byte	0x64
 1854 0b9e 16       		.uleb128 0x16
 1855 0b9f 6F0C0000 		.4byte	.LASF208
 1856 0ba3 04       		.byte	0x4
 1857 0ba4 0F05     		.2byte	0x50f
 1858 0ba6 E4000000 		.4byte	0xe4
 1859 0baa 68       		.byte	0x68
 1860 0bab 16       		.uleb128 0x16
 1861 0bac 6B090000 		.4byte	.LASF209
 1862 0bb0 04       		.byte	0x4
 1863 0bb1 1005     		.2byte	0x510
 1864 0bb3 E4000000 		.4byte	0xe4
 1865 0bb7 6C       		.byte	0x6c
 1866 0bb8 16       		.uleb128 0x16
 1867 0bb9 84120000 		.4byte	.LASF210
 1868 0bbd 04       		.byte	0x4
 1869 0bbe 1105     		.2byte	0x511
 1870 0bc0 B30A0000 		.4byte	0xab3
 1871 0bc4 70       		.byte	0x70
 1872 0bc5 16       		.uleb128 0x16
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 100


 1873 0bc6 EB070000 		.4byte	.LASF211
 1874 0bca 04       		.byte	0x4
 1875 0bcb 1205     		.2byte	0x512
 1876 0bcd E4000000 		.4byte	0xe4
 1877 0bd1 74       		.byte	0x74
 1878 0bd2 00       		.byte	0
 1879 0bd3 07       		.uleb128 0x7
 1880 0bd4 E4000000 		.4byte	0xe4
 1881 0bd8 E30B0000 		.4byte	0xbe3
 1882 0bdc 08       		.uleb128 0x8
 1883 0bdd EF000000 		.4byte	0xef
 1884 0be1 0F       		.byte	0xf
 1885 0be2 00       		.byte	0
 1886 0be3 0F       		.uleb128 0xf
 1887 0be4 7B090000 		.4byte	.LASF212
 1888 0be8 04       		.byte	0x4
 1889 0be9 1305     		.2byte	0x513
 1890 0beb 060B0000 		.4byte	0xb06
 1891 0bef 10       		.uleb128 0x10
 1892 0bf0 04       		.byte	0x4
 1893 0bf1 F50B0000 		.4byte	0xbf5
 1894 0bf5 17       		.uleb128 0x17
 1895 0bf6 000C0000 		.4byte	0xc00
 1896 0bfa 18       		.uleb128 0x18
 1897 0bfb E4000000 		.4byte	0xe4
 1898 0bff 00       		.byte	0
 1899 0c00 0F       		.uleb128 0xf
 1900 0c01 8F090000 		.4byte	.LASF213
 1901 0c05 0D       		.byte	0xd
 1902 0c06 D901     		.2byte	0x1d9
 1903 0c08 EF0B0000 		.4byte	0xbef
 1904 0c0c 19       		.uleb128 0x19
 1905 0c0d 30050000 		.4byte	.LASF246
 1906 0c11 38       		.byte	0x38
 1907 0c12 0D       		.byte	0xd
 1908 0c13 7502     		.2byte	0x275
 1909 0c15 D00C0000 		.4byte	0xcd0
 1910 0c19 16       		.uleb128 0x16
 1911 0c1a E8000000 		.4byte	.LASF214
 1912 0c1e 0D       		.byte	0xd
 1913 0c1f 7802     		.2byte	0x278
 1914 0c21 F6000000 		.4byte	0xf6
 1915 0c25 00       		.byte	0
 1916 0c26 16       		.uleb128 0x16
 1917 0c27 44040000 		.4byte	.LASF215
 1918 0c2b 0D       		.byte	0xd
 1919 0c2c 7902     		.2byte	0x279
 1920 0c2e F6000000 		.4byte	0xf6
 1921 0c32 04       		.byte	0x4
 1922 0c33 16       		.uleb128 0x16
 1923 0c34 FC0B0000 		.4byte	.LASF216
 1924 0c38 0D       		.byte	0xd
 1925 0c39 7B02     		.2byte	0x27b
 1926 0c3b B10A0000 		.4byte	0xab1
 1927 0c3f 08       		.byte	0x8
 1928 0c40 16       		.uleb128 0x16
 1929 0c41 29020000 		.4byte	.LASF217
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 101


 1930 0c45 0D       		.byte	0xd
 1931 0c46 7C02     		.2byte	0x27c
 1932 0c48 E4000000 		.4byte	0xe4
 1933 0c4c 0C       		.byte	0xc
 1934 0c4d 16       		.uleb128 0x16
 1935 0c4e 640F0000 		.4byte	.LASF218
 1936 0c52 0D       		.byte	0xd
 1937 0c53 7D02     		.2byte	0x27d
 1938 0c55 F6000000 		.4byte	0xf6
 1939 0c59 10       		.byte	0x10
 1940 0c5a 16       		.uleb128 0x16
 1941 0c5b 8C080000 		.4byte	.LASF219
 1942 0c5f 0D       		.byte	0xd
 1943 0c60 7E02     		.2byte	0x27e
 1944 0c62 F6000000 		.4byte	0xf6
 1945 0c66 14       		.byte	0x14
 1946 0c67 16       		.uleb128 0x16
 1947 0c68 3C130000 		.4byte	.LASF220
 1948 0c6c 0D       		.byte	0xd
 1949 0c6d 8002     		.2byte	0x280
 1950 0c6f B10A0000 		.4byte	0xab1
 1951 0c73 18       		.byte	0x18
 1952 0c74 16       		.uleb128 0x16
 1953 0c75 8F130000 		.4byte	.LASF221
 1954 0c79 0D       		.byte	0xd
 1955 0c7a 8102     		.2byte	0x281
 1956 0c7c E4000000 		.4byte	0xe4
 1957 0c80 1C       		.byte	0x1c
 1958 0c81 16       		.uleb128 0x16
 1959 0c82 D7080000 		.4byte	.LASF222
 1960 0c86 0D       		.byte	0xd
 1961 0c87 8202     		.2byte	0x282
 1962 0c89 F6000000 		.4byte	0xf6
 1963 0c8d 20       		.byte	0x20
 1964 0c8e 16       		.uleb128 0x16
 1965 0c8f A50B0000 		.4byte	.LASF223
 1966 0c93 0D       		.byte	0xd
 1967 0c94 8402     		.2byte	0x284
 1968 0c96 B10A0000 		.4byte	0xab1
 1969 0c9a 24       		.byte	0x24
 1970 0c9b 16       		.uleb128 0x16
 1971 0c9c FD0A0000 		.4byte	.LASF224
 1972 0ca0 0D       		.byte	0xd
 1973 0ca1 8502     		.2byte	0x285
 1974 0ca3 E4000000 		.4byte	0xe4
 1975 0ca7 28       		.byte	0x28
 1976 0ca8 16       		.uleb128 0x16
 1977 0ca9 570E0000 		.4byte	.LASF225
 1978 0cad 0D       		.byte	0xd
 1979 0cae 8602     		.2byte	0x286
 1980 0cb0 F6000000 		.4byte	0xf6
 1981 0cb4 2C       		.byte	0x2c
 1982 0cb5 16       		.uleb128 0x16
 1983 0cb6 11080000 		.4byte	.LASF226
 1984 0cba 0D       		.byte	0xd
 1985 0cbb 8B02     		.2byte	0x28b
 1986 0cbd 000C0000 		.4byte	0xc00
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 102


 1987 0cc1 30       		.byte	0x30
 1988 0cc2 16       		.uleb128 0x16
 1989 0cc3 E0080000 		.4byte	.LASF227
 1990 0cc7 0D       		.byte	0xd
 1991 0cc8 8E02     		.2byte	0x28e
 1992 0cca E4000000 		.4byte	0xe4
 1993 0cce 34       		.byte	0x34
 1994 0ccf 00       		.byte	0
 1995 0cd0 0F       		.uleb128 0xf
 1996 0cd1 FE040000 		.4byte	.LASF228
 1997 0cd5 0D       		.byte	0xd
 1998 0cd6 9102     		.2byte	0x291
 1999 0cd8 0C0C0000 		.4byte	0xc0c
 2000 0cdc 09       		.uleb128 0x9
 2001 0cdd 14       		.byte	0x14
 2002 0cde 03       		.byte	0x3
 2003 0cdf 3B       		.byte	0x3b
 2004 0ce0 210D0000 		.4byte	0xd21
 2005 0ce4 0B       		.uleb128 0xb
 2006 0ce5 E3010000 		.4byte	.LASF229
 2007 0ce9 03       		.byte	0x3
 2008 0cea 3D       		.byte	0x3d
 2009 0ceb E4000000 		.4byte	0xe4
 2010 0cef 00       		.byte	0
 2011 0cf0 0B       		.uleb128 0xb
 2012 0cf1 7E050000 		.4byte	.LASF230
 2013 0cf5 03       		.byte	0x3
 2014 0cf6 3E       		.byte	0x3e
 2015 0cf7 E4000000 		.4byte	0xe4
 2016 0cfb 04       		.byte	0x4
 2017 0cfc 0B       		.uleb128 0xb
 2018 0cfd FE010000 		.4byte	.LASF231
 2019 0d01 03       		.byte	0x3
 2020 0d02 3F       		.byte	0x3f
 2021 0d03 210D0000 		.4byte	0xd21
 2022 0d07 08       		.byte	0x8
 2023 0d08 0B       		.uleb128 0xb
 2024 0d09 960E0000 		.4byte	.LASF232
 2025 0d0d 03       		.byte	0x3
 2026 0d0e 40       		.byte	0x40
 2027 0d0f E4000000 		.4byte	0xe4
 2028 0d13 0C       		.byte	0xc
 2029 0d14 0B       		.uleb128 0xb
 2030 0d15 F9100000 		.4byte	.LASF233
 2031 0d19 03       		.byte	0x3
 2032 0d1a 45       		.byte	0x45
 2033 0d1b E4000000 		.4byte	0xe4
 2034 0d1f 10       		.byte	0x10
 2035 0d20 00       		.byte	0
 2036 0d21 10       		.uleb128 0x10
 2037 0d22 04       		.byte	0x4
 2038 0d23 270D0000 		.4byte	0xd27
 2039 0d27 06       		.uleb128 0x6
 2040 0d28 E30B0000 		.4byte	0xbe3
 2041 0d2c 03       		.uleb128 0x3
 2042 0d2d 59090000 		.4byte	.LASF234
 2043 0d31 03       		.byte	0x3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 103


 2044 0d32 48       		.byte	0x48
 2045 0d33 DC0C0000 		.4byte	0xcdc
 2046 0d37 10       		.uleb128 0x10
 2047 0d38 04       		.byte	0x4
 2048 0d39 2A060000 		.4byte	0x62a
 2049 0d3d 03       		.uleb128 0x3
 2050 0d3e 45020000 		.4byte	.LASF235
 2051 0d42 0E       		.byte	0xe
 2052 0d43 07       		.byte	0x7
 2053 0d44 9F000000 		.4byte	0x9f
 2054 0d48 03       		.uleb128 0x3
 2055 0d49 D2010000 		.4byte	.LASF236
 2056 0d4d 0F       		.byte	0xf
 2057 0d4e 2C       		.byte	0x2c
 2058 0d4f 78000000 		.4byte	0x78
 2059 0d53 03       		.uleb128 0x3
 2060 0d54 F1030000 		.4byte	.LASF237
 2061 0d58 0F       		.byte	0xf
 2062 0d59 72       		.byte	0x72
 2063 0d5a 78000000 		.4byte	0x78
 2064 0d5e 0F       		.uleb128 0xf
 2065 0d5f B20F0000 		.4byte	.LASF238
 2066 0d63 10       		.byte	0x10
 2067 0d64 6501     		.2byte	0x165
 2068 0d66 A6000000 		.4byte	0xa6
 2069 0d6a 1A       		.uleb128 0x1a
 2070 0d6b 04       		.byte	0x4
 2071 0d6c 0F       		.byte	0xf
 2072 0d6d A6       		.byte	0xa6
 2073 0d6e 890D0000 		.4byte	0xd89
 2074 0d72 1B       		.uleb128 0x1b
 2075 0d73 AE0C0000 		.4byte	.LASF239
 2076 0d77 0F       		.byte	0xf
 2077 0d78 A8       		.byte	0xa8
 2078 0d79 5E0D0000 		.4byte	0xd5e
 2079 0d7d 1B       		.uleb128 0x1b
 2080 0d7e 380E0000 		.4byte	.LASF240
 2081 0d82 0F       		.byte	0xf
 2082 0d83 A9       		.byte	0xa9
 2083 0d84 890D0000 		.4byte	0xd89
 2084 0d88 00       		.byte	0
 2085 0d89 07       		.uleb128 0x7
 2086 0d8a 49000000 		.4byte	0x49
 2087 0d8e 990D0000 		.4byte	0xd99
 2088 0d92 08       		.uleb128 0x8
 2089 0d93 EF000000 		.4byte	0xef
 2090 0d97 03       		.byte	0x3
 2091 0d98 00       		.byte	0
 2092 0d99 09       		.uleb128 0x9
 2093 0d9a 08       		.byte	0x8
 2094 0d9b 0F       		.byte	0xf
 2095 0d9c A3       		.byte	0xa3
 2096 0d9d BA0D0000 		.4byte	0xdba
 2097 0da1 0B       		.uleb128 0xb
 2098 0da2 C0040000 		.4byte	.LASF241
 2099 0da6 0F       		.byte	0xf
 2100 0da7 A5       		.byte	0xa5
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 104


 2101 0da8 9F000000 		.4byte	0x9f
 2102 0dac 00       		.byte	0
 2103 0dad 0B       		.uleb128 0xb
 2104 0dae B7070000 		.4byte	.LASF242
 2105 0db2 0F       		.byte	0xf
 2106 0db3 AA       		.byte	0xaa
 2107 0db4 6A0D0000 		.4byte	0xd6a
 2108 0db8 04       		.byte	0x4
 2109 0db9 00       		.byte	0
 2110 0dba 03       		.uleb128 0x3
 2111 0dbb BE0A0000 		.4byte	.LASF243
 2112 0dbf 0F       		.byte	0xf
 2113 0dc0 AB       		.byte	0xab
 2114 0dc1 990D0000 		.4byte	0xd99
 2115 0dc5 03       		.uleb128 0x3
 2116 0dc6 CE080000 		.4byte	.LASF244
 2117 0dca 0F       		.byte	0xf
 2118 0dcb AF       		.byte	0xaf
 2119 0dcc 3D0D0000 		.4byte	0xd3d
 2120 0dd0 03       		.uleb128 0x3
 2121 0dd1 340F0000 		.4byte	.LASF245
 2122 0dd5 11       		.byte	0x11
 2123 0dd6 16       		.byte	0x16
 2124 0dd7 8A000000 		.4byte	0x8a
 2125 0ddb 1C       		.uleb128 0x1c
 2126 0ddc 54040000 		.4byte	.LASF247
 2127 0de0 18       		.byte	0x18
 2128 0de1 11       		.byte	0x11
 2129 0de2 2D       		.byte	0x2d
 2130 0de3 2E0E0000 		.4byte	0xe2e
 2131 0de7 0B       		.uleb128 0xb
 2132 0de8 59130000 		.4byte	.LASF248
 2133 0dec 11       		.byte	0x11
 2134 0ded 2F       		.byte	0x2f
 2135 0dee 2E0E0000 		.4byte	0xe2e
 2136 0df2 00       		.byte	0
 2137 0df3 0A       		.uleb128 0xa
 2138 0df4 5F6B00   		.ascii	"_k\000"
 2139 0df7 11       		.byte	0x11
 2140 0df8 30       		.byte	0x30
 2141 0df9 9F000000 		.4byte	0x9f
 2142 0dfd 04       		.byte	0x4
 2143 0dfe 0B       		.uleb128 0xb
 2144 0dff A10E0000 		.4byte	.LASF249
 2145 0e03 11       		.byte	0x11
 2146 0e04 30       		.byte	0x30
 2147 0e05 9F000000 		.4byte	0x9f
 2148 0e09 08       		.byte	0x8
 2149 0e0a 0B       		.uleb128 0xb
 2150 0e0b EE0D0000 		.4byte	.LASF250
 2151 0e0f 11       		.byte	0x11
 2152 0e10 30       		.byte	0x30
 2153 0e11 9F000000 		.4byte	0x9f
 2154 0e15 0C       		.byte	0xc
 2155 0e16 0B       		.uleb128 0xb
 2156 0e17 10060000 		.4byte	.LASF251
 2157 0e1b 11       		.byte	0x11
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 105


 2158 0e1c 30       		.byte	0x30
 2159 0e1d 9F000000 		.4byte	0x9f
 2160 0e21 10       		.byte	0x10
 2161 0e22 0A       		.uleb128 0xa
 2162 0e23 5F7800   		.ascii	"_x\000"
 2163 0e26 11       		.byte	0x11
 2164 0e27 31       		.byte	0x31
 2165 0e28 340E0000 		.4byte	0xe34
 2166 0e2c 14       		.byte	0x14
 2167 0e2d 00       		.byte	0
 2168 0e2e 10       		.uleb128 0x10
 2169 0e2f 04       		.byte	0x4
 2170 0e30 DB0D0000 		.4byte	0xddb
 2171 0e34 07       		.uleb128 0x7
 2172 0e35 D00D0000 		.4byte	0xdd0
 2173 0e39 440E0000 		.4byte	0xe44
 2174 0e3d 08       		.uleb128 0x8
 2175 0e3e EF000000 		.4byte	0xef
 2176 0e42 00       		.byte	0
 2177 0e43 00       		.byte	0
 2178 0e44 1C       		.uleb128 0x1c
 2179 0e45 5F0F0000 		.4byte	.LASF252
 2180 0e49 24       		.byte	0x24
 2181 0e4a 11       		.byte	0x11
 2182 0e4b 35       		.byte	0x35
 2183 0e4c BD0E0000 		.4byte	0xebd
 2184 0e50 0B       		.uleb128 0xb
 2185 0e51 E9060000 		.4byte	.LASF253
 2186 0e55 11       		.byte	0x11
 2187 0e56 37       		.byte	0x37
 2188 0e57 9F000000 		.4byte	0x9f
 2189 0e5b 00       		.byte	0
 2190 0e5c 0B       		.uleb128 0xb
 2191 0e5d F5040000 		.4byte	.LASF254
 2192 0e61 11       		.byte	0x11
 2193 0e62 38       		.byte	0x38
 2194 0e63 9F000000 		.4byte	0x9f
 2195 0e67 04       		.byte	0x4
 2196 0e68 0B       		.uleb128 0xb
 2197 0e69 84040000 		.4byte	.LASF255
 2198 0e6d 11       		.byte	0x11
 2199 0e6e 39       		.byte	0x39
 2200 0e6f 9F000000 		.4byte	0x9f
 2201 0e73 08       		.byte	0x8
 2202 0e74 0B       		.uleb128 0xb
 2203 0e75 71080000 		.4byte	.LASF256
 2204 0e79 11       		.byte	0x11
 2205 0e7a 3A       		.byte	0x3a
 2206 0e7b 9F000000 		.4byte	0x9f
 2207 0e7f 0C       		.byte	0xc
 2208 0e80 0B       		.uleb128 0xb
 2209 0e81 E00B0000 		.4byte	.LASF257
 2210 0e85 11       		.byte	0x11
 2211 0e86 3B       		.byte	0x3b
 2212 0e87 9F000000 		.4byte	0x9f
 2213 0e8b 10       		.byte	0x10
 2214 0e8c 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 106


 2215 0e8d 4D0E0000 		.4byte	.LASF258
 2216 0e91 11       		.byte	0x11
 2217 0e92 3C       		.byte	0x3c
 2218 0e93 9F000000 		.4byte	0x9f
 2219 0e97 14       		.byte	0x14
 2220 0e98 0B       		.uleb128 0xb
 2221 0e99 62040000 		.4byte	.LASF259
 2222 0e9d 11       		.byte	0x11
 2223 0e9e 3D       		.byte	0x3d
 2224 0e9f 9F000000 		.4byte	0x9f
 2225 0ea3 18       		.byte	0x18
 2226 0ea4 0B       		.uleb128 0xb
 2227 0ea5 6E070000 		.4byte	.LASF260
 2228 0ea9 11       		.byte	0x11
 2229 0eaa 3E       		.byte	0x3e
 2230 0eab 9F000000 		.4byte	0x9f
 2231 0eaf 1C       		.byte	0x1c
 2232 0eb0 0B       		.uleb128 0xb
 2233 0eb1 070B0000 		.4byte	.LASF261
 2234 0eb5 11       		.byte	0x11
 2235 0eb6 3F       		.byte	0x3f
 2236 0eb7 9F000000 		.4byte	0x9f
 2237 0ebb 20       		.byte	0x20
 2238 0ebc 00       		.byte	0
 2239 0ebd 1D       		.uleb128 0x1d
 2240 0ebe B3000000 		.4byte	.LASF262
 2241 0ec2 0801     		.2byte	0x108
 2242 0ec4 11       		.byte	0x11
 2243 0ec5 48       		.byte	0x48
 2244 0ec6 FD0E0000 		.4byte	0xefd
 2245 0eca 0B       		.uleb128 0xb
 2246 0ecb C4110000 		.4byte	.LASF263
 2247 0ecf 11       		.byte	0x11
 2248 0ed0 49       		.byte	0x49
 2249 0ed1 FD0E0000 		.4byte	0xefd
 2250 0ed5 00       		.byte	0
 2251 0ed6 0B       		.uleb128 0xb
 2252 0ed7 0D100000 		.4byte	.LASF264
 2253 0edb 11       		.byte	0x11
 2254 0edc 4A       		.byte	0x4a
 2255 0edd FD0E0000 		.4byte	0xefd
 2256 0ee1 80       		.byte	0x80
 2257 0ee2 0D       		.uleb128 0xd
 2258 0ee3 69120000 		.4byte	.LASF265
 2259 0ee7 11       		.byte	0x11
 2260 0ee8 4C       		.byte	0x4c
 2261 0ee9 D00D0000 		.4byte	0xdd0
 2262 0eed 0001     		.2byte	0x100
 2263 0eef 0D       		.uleb128 0xd
 2264 0ef0 34130000 		.4byte	.LASF266
 2265 0ef4 11       		.byte	0x11
 2266 0ef5 4F       		.byte	0x4f
 2267 0ef6 D00D0000 		.4byte	0xdd0
 2268 0efa 0401     		.2byte	0x104
 2269 0efc 00       		.byte	0
 2270 0efd 07       		.uleb128 0x7
 2271 0efe B10A0000 		.4byte	0xab1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 107


 2272 0f02 0D0F0000 		.4byte	0xf0d
 2273 0f06 08       		.uleb128 0x8
 2274 0f07 EF000000 		.4byte	0xef
 2275 0f0b 1F       		.byte	0x1f
 2276 0f0c 00       		.byte	0
 2277 0f0d 1D       		.uleb128 0x1d
 2278 0f0e 9D0C0000 		.4byte	.LASF267
 2279 0f12 9001     		.2byte	0x190
 2280 0f14 11       		.byte	0x11
 2281 0f15 5B       		.byte	0x5b
 2282 0f16 4B0F0000 		.4byte	0xf4b
 2283 0f1a 0B       		.uleb128 0xb
 2284 0f1b 59130000 		.4byte	.LASF248
 2285 0f1f 11       		.byte	0x11
 2286 0f20 5C       		.byte	0x5c
 2287 0f21 4B0F0000 		.4byte	0xf4b
 2288 0f25 00       		.byte	0
 2289 0f26 0B       		.uleb128 0xb
 2290 0f27 04070000 		.4byte	.LASF268
 2291 0f2b 11       		.byte	0x11
 2292 0f2c 5D       		.byte	0x5d
 2293 0f2d 9F000000 		.4byte	0x9f
 2294 0f31 04       		.byte	0x4
 2295 0f32 0B       		.uleb128 0xb
 2296 0f33 05040000 		.4byte	.LASF269
 2297 0f37 11       		.byte	0x11
 2298 0f38 5F       		.byte	0x5f
 2299 0f39 510F0000 		.4byte	0xf51
 2300 0f3d 08       		.byte	0x8
 2301 0f3e 0B       		.uleb128 0xb
 2302 0f3f B3000000 		.4byte	.LASF262
 2303 0f43 11       		.byte	0x11
 2304 0f44 60       		.byte	0x60
 2305 0f45 BD0E0000 		.4byte	0xebd
 2306 0f49 88       		.byte	0x88
 2307 0f4a 00       		.byte	0
 2308 0f4b 10       		.uleb128 0x10
 2309 0f4c 04       		.byte	0x4
 2310 0f4d 0D0F0000 		.4byte	0xf0d
 2311 0f51 07       		.uleb128 0x7
 2312 0f52 710A0000 		.4byte	0xa71
 2313 0f56 610F0000 		.4byte	0xf61
 2314 0f5a 08       		.uleb128 0x8
 2315 0f5b EF000000 		.4byte	0xef
 2316 0f5f 1F       		.byte	0x1f
 2317 0f60 00       		.byte	0
 2318 0f61 1C       		.uleb128 0x1c
 2319 0f62 04110000 		.4byte	.LASF270
 2320 0f66 08       		.byte	0x8
 2321 0f67 11       		.byte	0x11
 2322 0f68 73       		.byte	0x73
 2323 0f69 860F0000 		.4byte	0xf86
 2324 0f6d 0B       		.uleb128 0xb
 2325 0f6e 290A0000 		.4byte	.LASF271
 2326 0f72 11       		.byte	0x11
 2327 0f73 74       		.byte	0x74
 2328 0f74 860F0000 		.4byte	0xf86
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 108


 2329 0f78 00       		.byte	0
 2330 0f79 0B       		.uleb128 0xb
 2331 0f7a 7E120000 		.4byte	.LASF272
 2332 0f7e 11       		.byte	0x11
 2333 0f7f 75       		.byte	0x75
 2334 0f80 9F000000 		.4byte	0x9f
 2335 0f84 04       		.byte	0x4
 2336 0f85 00       		.byte	0
 2337 0f86 10       		.uleb128 0x10
 2338 0f87 04       		.byte	0x4
 2339 0f88 49000000 		.4byte	0x49
 2340 0f8c 1C       		.uleb128 0x1c
 2341 0f8d 08060000 		.4byte	.LASF273
 2342 0f91 68       		.byte	0x68
 2343 0f92 11       		.byte	0x11
 2344 0f93 B3       		.byte	0xb3
 2345 0f94 B6100000 		.4byte	0x10b6
 2346 0f98 0A       		.uleb128 0xa
 2347 0f99 5F7000   		.ascii	"_p\000"
 2348 0f9c 11       		.byte	0x11
 2349 0f9d B4       		.byte	0xb4
 2350 0f9e 860F0000 		.4byte	0xf86
 2351 0fa2 00       		.byte	0
 2352 0fa3 0A       		.uleb128 0xa
 2353 0fa4 5F7200   		.ascii	"_r\000"
 2354 0fa7 11       		.byte	0x11
 2355 0fa8 B5       		.byte	0xb5
 2356 0fa9 9F000000 		.4byte	0x9f
 2357 0fad 04       		.byte	0x4
 2358 0fae 0A       		.uleb128 0xa
 2359 0faf 5F7700   		.ascii	"_w\000"
 2360 0fb2 11       		.byte	0x11
 2361 0fb3 B6       		.byte	0xb6
 2362 0fb4 9F000000 		.4byte	0x9f
 2363 0fb8 08       		.byte	0x8
 2364 0fb9 0B       		.uleb128 0xb
 2365 0fba 3D040000 		.4byte	.LASF274
 2366 0fbe 11       		.byte	0x11
 2367 0fbf B7       		.byte	0xb7
 2368 0fc0 25000000 		.4byte	0x25
 2369 0fc4 0C       		.byte	0xc
 2370 0fc5 0B       		.uleb128 0xb
 2371 0fc6 6F0A0000 		.4byte	.LASF275
 2372 0fca 11       		.byte	0x11
 2373 0fcb B8       		.byte	0xb8
 2374 0fcc 25000000 		.4byte	0x25
 2375 0fd0 0E       		.byte	0xe
 2376 0fd1 0A       		.uleb128 0xa
 2377 0fd2 5F626600 		.ascii	"_bf\000"
 2378 0fd6 11       		.byte	0x11
 2379 0fd7 B9       		.byte	0xb9
 2380 0fd8 610F0000 		.4byte	0xf61
 2381 0fdc 10       		.byte	0x10
 2382 0fdd 0B       		.uleb128 0xb
 2383 0fde 92010000 		.4byte	.LASF276
 2384 0fe2 11       		.byte	0x11
 2385 0fe3 BA       		.byte	0xba
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 109


 2386 0fe4 9F000000 		.4byte	0x9f
 2387 0fe8 18       		.byte	0x18
 2388 0fe9 0B       		.uleb128 0xb
 2389 0fea 0A040000 		.4byte	.LASF277
 2390 0fee 11       		.byte	0x11
 2391 0fef C1       		.byte	0xc1
 2392 0ff0 B10A0000 		.4byte	0xab1
 2393 0ff4 1C       		.byte	0x1c
 2394 0ff5 0B       		.uleb128 0xb
 2395 0ff6 9C020000 		.4byte	.LASF278
 2396 0ffa 11       		.byte	0x11
 2397 0ffb C3       		.byte	0xc3
 2398 0ffc 12120000 		.4byte	0x1212
 2399 1000 20       		.byte	0x20
 2400 1001 0B       		.uleb128 0xb
 2401 1002 C1000000 		.4byte	.LASF279
 2402 1006 11       		.byte	0x11
 2403 1007 C5       		.byte	0xc5
 2404 1008 41120000 		.4byte	0x1241
 2405 100c 24       		.byte	0x24
 2406 100d 0B       		.uleb128 0xb
 2407 100e 53130000 		.4byte	.LASF280
 2408 1012 11       		.byte	0x11
 2409 1013 C8       		.byte	0xc8
 2410 1014 65120000 		.4byte	0x1265
 2411 1018 28       		.byte	0x28
 2412 1019 0B       		.uleb128 0xb
 2413 101a 1F090000 		.4byte	.LASF281
 2414 101e 11       		.byte	0x11
 2415 101f C9       		.byte	0xc9
 2416 1020 7F120000 		.4byte	0x127f
 2417 1024 2C       		.byte	0x2c
 2418 1025 0A       		.uleb128 0xa
 2419 1026 5F756200 		.ascii	"_ub\000"
 2420 102a 11       		.byte	0x11
 2421 102b CC       		.byte	0xcc
 2422 102c 610F0000 		.4byte	0xf61
 2423 1030 30       		.byte	0x30
 2424 1031 0A       		.uleb128 0xa
 2425 1032 5F757000 		.ascii	"_up\000"
 2426 1036 11       		.byte	0x11
 2427 1037 CD       		.byte	0xcd
 2428 1038 860F0000 		.4byte	0xf86
 2429 103c 38       		.byte	0x38
 2430 103d 0A       		.uleb128 0xa
 2431 103e 5F757200 		.ascii	"_ur\000"
 2432 1042 11       		.byte	0x11
 2433 1043 CE       		.byte	0xce
 2434 1044 9F000000 		.4byte	0x9f
 2435 1048 3C       		.byte	0x3c
 2436 1049 0B       		.uleb128 0xb
 2437 104a 89130000 		.4byte	.LASF282
 2438 104e 11       		.byte	0x11
 2439 104f D1       		.byte	0xd1
 2440 1050 85120000 		.4byte	0x1285
 2441 1054 40       		.byte	0x40
 2442 1055 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 110


 2443 1056 CC120000 		.4byte	.LASF283
 2444 105a 11       		.byte	0x11
 2445 105b D2       		.byte	0xd2
 2446 105c 95120000 		.4byte	0x1295
 2447 1060 43       		.byte	0x43
 2448 1061 0A       		.uleb128 0xa
 2449 1062 5F6C6200 		.ascii	"_lb\000"
 2450 1066 11       		.byte	0x11
 2451 1067 D5       		.byte	0xd5
 2452 1068 610F0000 		.4byte	0xf61
 2453 106c 44       		.byte	0x44
 2454 106d 0B       		.uleb128 0xb
 2455 106e B0080000 		.4byte	.LASF284
 2456 1072 11       		.byte	0x11
 2457 1073 D8       		.byte	0xd8
 2458 1074 9F000000 		.4byte	0x9f
 2459 1078 4C       		.byte	0x4c
 2460 1079 0B       		.uleb128 0xb
 2461 107a 56060000 		.4byte	.LASF285
 2462 107e 11       		.byte	0x11
 2463 107f D9       		.byte	0xd9
 2464 1080 480D0000 		.4byte	0xd48
 2465 1084 50       		.byte	0x50
 2466 1085 0B       		.uleb128 0xb
 2467 1086 280E0000 		.4byte	.LASF286
 2468 108a 11       		.byte	0x11
 2469 108b DC       		.byte	0xdc
 2470 108c D4100000 		.4byte	0x10d4
 2471 1090 54       		.byte	0x54
 2472 1091 0B       		.uleb128 0xb
 2473 1092 720F0000 		.4byte	.LASF287
 2474 1096 11       		.byte	0x11
 2475 1097 E0       		.byte	0xe0
 2476 1098 C50D0000 		.4byte	0xdc5
 2477 109c 58       		.byte	0x58
 2478 109d 0B       		.uleb128 0xb
 2479 109e A50C0000 		.4byte	.LASF288
 2480 10a2 11       		.byte	0x11
 2481 10a3 E2       		.byte	0xe2
 2482 10a4 BA0D0000 		.4byte	0xdba
 2483 10a8 5C       		.byte	0x5c
 2484 10a9 0B       		.uleb128 0xb
 2485 10aa 2C130000 		.4byte	.LASF289
 2486 10ae 11       		.byte	0x11
 2487 10af E3       		.byte	0xe3
 2488 10b0 9F000000 		.4byte	0x9f
 2489 10b4 64       		.byte	0x64
 2490 10b5 00       		.byte	0
 2491 10b6 1E       		.uleb128 0x1e
 2492 10b7 9F000000 		.4byte	0x9f
 2493 10bb D4100000 		.4byte	0x10d4
 2494 10bf 18       		.uleb128 0x18
 2495 10c0 D4100000 		.4byte	0x10d4
 2496 10c4 18       		.uleb128 0x18
 2497 10c5 B10A0000 		.4byte	0xab1
 2498 10c9 18       		.uleb128 0x18
 2499 10ca 0C120000 		.4byte	0x120c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 111


 2500 10ce 18       		.uleb128 0x18
 2501 10cf 9F000000 		.4byte	0x9f
 2502 10d3 00       		.byte	0
 2503 10d4 10       		.uleb128 0x10
 2504 10d5 04       		.byte	0x4
 2505 10d6 DA100000 		.4byte	0x10da
 2506 10da 1F       		.uleb128 0x1f
 2507 10db E9110000 		.4byte	.LASF290
 2508 10df 2804     		.2byte	0x428
 2509 10e1 11       		.byte	0x11
 2510 10e2 3802     		.2byte	0x238
 2511 10e4 0C120000 		.4byte	0x120c
 2512 10e8 16       		.uleb128 0x16
 2513 10e9 B8010000 		.4byte	.LASF291
 2514 10ed 11       		.byte	0x11
 2515 10ee 3A02     		.2byte	0x23a
 2516 10f0 9F000000 		.4byte	0x9f
 2517 10f4 00       		.byte	0
 2518 10f5 16       		.uleb128 0x16
 2519 10f6 C6090000 		.4byte	.LASF292
 2520 10fa 11       		.byte	0x11
 2521 10fb 3F02     		.2byte	0x23f
 2522 10fd EC120000 		.4byte	0x12ec
 2523 1101 04       		.byte	0x4
 2524 1102 16       		.uleb128 0x16
 2525 1103 12030000 		.4byte	.LASF293
 2526 1107 11       		.byte	0x11
 2527 1108 3F02     		.2byte	0x23f
 2528 110a EC120000 		.4byte	0x12ec
 2529 110e 08       		.byte	0x8
 2530 110f 16       		.uleb128 0x16
 2531 1110 78130000 		.4byte	.LASF294
 2532 1114 11       		.byte	0x11
 2533 1115 3F02     		.2byte	0x23f
 2534 1117 EC120000 		.4byte	0x12ec
 2535 111b 0C       		.byte	0xc
 2536 111c 16       		.uleb128 0x16
 2537 111d FF060000 		.4byte	.LASF295
 2538 1121 11       		.byte	0x11
 2539 1122 4102     		.2byte	0x241
 2540 1124 9F000000 		.4byte	0x9f
 2541 1128 10       		.byte	0x10
 2542 1129 16       		.uleb128 0x16
 2543 112a 9F060000 		.4byte	.LASF296
 2544 112e 11       		.byte	0x11
 2545 112f 4202     		.2byte	0x242
 2546 1131 CE140000 		.4byte	0x14ce
 2547 1135 14       		.byte	0x14
 2548 1136 16       		.uleb128 0x16
 2549 1137 B30E0000 		.4byte	.LASF297
 2550 113b 11       		.byte	0x11
 2551 113c 4402     		.2byte	0x244
 2552 113e 9F000000 		.4byte	0x9f
 2553 1142 30       		.byte	0x30
 2554 1143 16       		.uleb128 0x16
 2555 1144 110E0000 		.4byte	.LASF298
 2556 1148 11       		.byte	0x11
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 112


 2557 1149 4502     		.2byte	0x245
 2558 114b 36120000 		.4byte	0x1236
 2559 114f 34       		.byte	0x34
 2560 1150 16       		.uleb128 0x16
 2561 1151 26090000 		.4byte	.LASF299
 2562 1155 11       		.byte	0x11
 2563 1156 4702     		.2byte	0x247
 2564 1158 9F000000 		.4byte	0x9f
 2565 115c 38       		.byte	0x38
 2566 115d 16       		.uleb128 0x16
 2567 115e A40A0000 		.4byte	.LASF300
 2568 1162 11       		.byte	0x11
 2569 1163 4902     		.2byte	0x249
 2570 1165 E9140000 		.4byte	0x14e9
 2571 1169 3C       		.byte	0x3c
 2572 116a 16       		.uleb128 0x16
 2573 116b 6C040000 		.4byte	.LASF301
 2574 116f 11       		.byte	0x11
 2575 1170 4C02     		.2byte	0x24c
 2576 1172 2E0E0000 		.4byte	0xe2e
 2577 1176 40       		.byte	0x40
 2578 1177 16       		.uleb128 0x16
 2579 1178 8A050000 		.4byte	.LASF302
 2580 117c 11       		.byte	0x11
 2581 117d 4D02     		.2byte	0x24d
 2582 117f 9F000000 		.4byte	0x9f
 2583 1183 44       		.byte	0x44
 2584 1184 16       		.uleb128 0x16
 2585 1185 E6070000 		.4byte	.LASF303
 2586 1189 11       		.byte	0x11
 2587 118a 4E02     		.2byte	0x24e
 2588 118c 2E0E0000 		.4byte	0xe2e
 2589 1190 48       		.byte	0x48
 2590 1191 16       		.uleb128 0x16
 2591 1192 2F0A0000 		.4byte	.LASF304
 2592 1196 11       		.byte	0x11
 2593 1197 4F02     		.2byte	0x24f
 2594 1199 EF140000 		.4byte	0x14ef
 2595 119d 4C       		.byte	0x4c
 2596 119e 16       		.uleb128 0x16
 2597 119f 780F0000 		.4byte	.LASF305
 2598 11a3 11       		.byte	0x11
 2599 11a4 5202     		.2byte	0x252
 2600 11a6 9F000000 		.4byte	0x9f
 2601 11aa 50       		.byte	0x50
 2602 11ab 16       		.uleb128 0x16
 2603 11ac 4D100000 		.4byte	.LASF306
 2604 11b0 11       		.byte	0x11
 2605 11b1 5302     		.2byte	0x253
 2606 11b3 0C120000 		.4byte	0x120c
 2607 11b7 54       		.byte	0x54
 2608 11b8 16       		.uleb128 0x16
 2609 11b9 910E0000 		.4byte	.LASF307
 2610 11bd 11       		.byte	0x11
 2611 11be 7602     		.2byte	0x276
 2612 11c0 AC140000 		.4byte	0x14ac
 2613 11c4 58       		.byte	0x58
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 113


 2614 11c5 20       		.uleb128 0x20
 2615 11c6 9D0C0000 		.4byte	.LASF267
 2616 11ca 11       		.byte	0x11
 2617 11cb 7A02     		.2byte	0x27a
 2618 11cd 4B0F0000 		.4byte	0xf4b
 2619 11d1 4801     		.2byte	0x148
 2620 11d3 20       		.uleb128 0x20
 2621 11d4 4B0C0000 		.4byte	.LASF308
 2622 11d8 11       		.byte	0x11
 2623 11d9 7B02     		.2byte	0x27b
 2624 11db 0D0F0000 		.4byte	0xf0d
 2625 11df 4C01     		.2byte	0x14c
 2626 11e1 20       		.uleb128 0x20
 2627 11e2 7B080000 		.4byte	.LASF309
 2628 11e6 11       		.byte	0x11
 2629 11e7 7F02     		.2byte	0x27f
 2630 11e9 00150000 		.4byte	0x1500
 2631 11ed DC02     		.2byte	0x2dc
 2632 11ef 20       		.uleb128 0x20
 2633 11f0 5D110000 		.4byte	.LASF310
 2634 11f4 11       		.byte	0x11
 2635 11f5 8402     		.2byte	0x284
 2636 11f7 B1120000 		.4byte	0x12b1
 2637 11fb E002     		.2byte	0x2e0
 2638 11fd 20       		.uleb128 0x20
 2639 11fe E90D0000 		.4byte	.LASF311
 2640 1202 11       		.byte	0x11
 2641 1203 8502     		.2byte	0x285
 2642 1205 0C150000 		.4byte	0x150c
 2643 1209 EC02     		.2byte	0x2ec
 2644 120b 00       		.byte	0
 2645 120c 10       		.uleb128 0x10
 2646 120d 04       		.byte	0x4
 2647 120e 840A0000 		.4byte	0xa84
 2648 1212 10       		.uleb128 0x10
 2649 1213 04       		.byte	0x4
 2650 1214 B6100000 		.4byte	0x10b6
 2651 1218 1E       		.uleb128 0x1e
 2652 1219 9F000000 		.4byte	0x9f
 2653 121d 36120000 		.4byte	0x1236
 2654 1221 18       		.uleb128 0x18
 2655 1222 D4100000 		.4byte	0x10d4
 2656 1226 18       		.uleb128 0x18
 2657 1227 B10A0000 		.4byte	0xab1
 2658 122b 18       		.uleb128 0x18
 2659 122c 36120000 		.4byte	0x1236
 2660 1230 18       		.uleb128 0x18
 2661 1231 9F000000 		.4byte	0x9f
 2662 1235 00       		.byte	0
 2663 1236 10       		.uleb128 0x10
 2664 1237 04       		.byte	0x4
 2665 1238 3C120000 		.4byte	0x123c
 2666 123c 06       		.uleb128 0x6
 2667 123d 840A0000 		.4byte	0xa84
 2668 1241 10       		.uleb128 0x10
 2669 1242 04       		.byte	0x4
 2670 1243 18120000 		.4byte	0x1218
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 114


 2671 1247 1E       		.uleb128 0x1e
 2672 1248 530D0000 		.4byte	0xd53
 2673 124c 65120000 		.4byte	0x1265
 2674 1250 18       		.uleb128 0x18
 2675 1251 D4100000 		.4byte	0x10d4
 2676 1255 18       		.uleb128 0x18
 2677 1256 B10A0000 		.4byte	0xab1
 2678 125a 18       		.uleb128 0x18
 2679 125b 530D0000 		.4byte	0xd53
 2680 125f 18       		.uleb128 0x18
 2681 1260 9F000000 		.4byte	0x9f
 2682 1264 00       		.byte	0
 2683 1265 10       		.uleb128 0x10
 2684 1266 04       		.byte	0x4
 2685 1267 47120000 		.4byte	0x1247
 2686 126b 1E       		.uleb128 0x1e
 2687 126c 9F000000 		.4byte	0x9f
 2688 1270 7F120000 		.4byte	0x127f
 2689 1274 18       		.uleb128 0x18
 2690 1275 D4100000 		.4byte	0x10d4
 2691 1279 18       		.uleb128 0x18
 2692 127a B10A0000 		.4byte	0xab1
 2693 127e 00       		.byte	0
 2694 127f 10       		.uleb128 0x10
 2695 1280 04       		.byte	0x4
 2696 1281 6B120000 		.4byte	0x126b
 2697 1285 07       		.uleb128 0x7
 2698 1286 49000000 		.4byte	0x49
 2699 128a 95120000 		.4byte	0x1295
 2700 128e 08       		.uleb128 0x8
 2701 128f EF000000 		.4byte	0xef
 2702 1293 02       		.byte	0x2
 2703 1294 00       		.byte	0
 2704 1295 07       		.uleb128 0x7
 2705 1296 49000000 		.4byte	0x49
 2706 129a A5120000 		.4byte	0x12a5
 2707 129e 08       		.uleb128 0x8
 2708 129f EF000000 		.4byte	0xef
 2709 12a3 00       		.byte	0
 2710 12a4 00       		.byte	0
 2711 12a5 0F       		.uleb128 0xf
 2712 12a6 36060000 		.4byte	.LASF312
 2713 12aa 11       		.byte	0x11
 2714 12ab 1D01     		.2byte	0x11d
 2715 12ad 8C0F0000 		.4byte	0xf8c
 2716 12b1 19       		.uleb128 0x19
 2717 12b2 3F110000 		.4byte	.LASF313
 2718 12b6 0C       		.byte	0xc
 2719 12b7 11       		.byte	0x11
 2720 12b8 2101     		.2byte	0x121
 2721 12ba E6120000 		.4byte	0x12e6
 2722 12be 16       		.uleb128 0x16
 2723 12bf 59130000 		.4byte	.LASF248
 2724 12c3 11       		.byte	0x11
 2725 12c4 2301     		.2byte	0x123
 2726 12c6 E6120000 		.4byte	0x12e6
 2727 12ca 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 115


 2728 12cb 16       		.uleb128 0x16
 2729 12cc AB0F0000 		.4byte	.LASF314
 2730 12d0 11       		.byte	0x11
 2731 12d1 2401     		.2byte	0x124
 2732 12d3 9F000000 		.4byte	0x9f
 2733 12d7 04       		.byte	0x4
 2734 12d8 16       		.uleb128 0x16
 2735 12d9 D8110000 		.4byte	.LASF315
 2736 12dd 11       		.byte	0x11
 2737 12de 2501     		.2byte	0x125
 2738 12e0 EC120000 		.4byte	0x12ec
 2739 12e4 08       		.byte	0x8
 2740 12e5 00       		.byte	0
 2741 12e6 10       		.uleb128 0x10
 2742 12e7 04       		.byte	0x4
 2743 12e8 B1120000 		.4byte	0x12b1
 2744 12ec 10       		.uleb128 0x10
 2745 12ed 04       		.byte	0x4
 2746 12ee A5120000 		.4byte	0x12a5
 2747 12f2 19       		.uleb128 0x19
 2748 12f3 63050000 		.4byte	.LASF316
 2749 12f7 0E       		.byte	0xe
 2750 12f8 11       		.byte	0x11
 2751 12f9 3D01     		.2byte	0x13d
 2752 12fb 27130000 		.4byte	0x1327
 2753 12ff 16       		.uleb128 0x16
 2754 1300 42130000 		.4byte	.LASF317
 2755 1304 11       		.byte	0x11
 2756 1305 3E01     		.2byte	0x13e
 2757 1307 27130000 		.4byte	0x1327
 2758 130b 00       		.byte	0
 2759 130c 16       		.uleb128 0x16
 2760 130d F9060000 		.4byte	.LASF318
 2761 1311 11       		.byte	0x11
 2762 1312 3F01     		.2byte	0x13f
 2763 1314 27130000 		.4byte	0x1327
 2764 1318 06       		.byte	0x6
 2765 1319 16       		.uleb128 0x16
 2766 131a 4B0A0000 		.4byte	.LASF319
 2767 131e 11       		.byte	0x11
 2768 131f 4001     		.2byte	0x140
 2769 1321 66000000 		.4byte	0x66
 2770 1325 0C       		.byte	0xc
 2771 1326 00       		.byte	0
 2772 1327 07       		.uleb128 0x7
 2773 1328 66000000 		.4byte	0x66
 2774 132c 37130000 		.4byte	0x1337
 2775 1330 08       		.uleb128 0x8
 2776 1331 EF000000 		.4byte	0xef
 2777 1335 02       		.byte	0x2
 2778 1336 00       		.byte	0
 2779 1337 15       		.uleb128 0x15
 2780 1338 D0       		.byte	0xd0
 2781 1339 11       		.byte	0x11
 2782 133a 5702     		.2byte	0x257
 2783 133c 38140000 		.4byte	0x1438
 2784 1340 16       		.uleb128 0x16
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 116


 2785 1341 D2120000 		.4byte	.LASF320
 2786 1345 11       		.byte	0x11
 2787 1346 5902     		.2byte	0x259
 2788 1348 A6000000 		.4byte	0xa6
 2789 134c 00       		.byte	0
 2790 134d 16       		.uleb128 0x16
 2791 134e 76110000 		.4byte	.LASF321
 2792 1352 11       		.byte	0x11
 2793 1353 5A02     		.2byte	0x25a
 2794 1355 0C120000 		.4byte	0x120c
 2795 1359 04       		.byte	0x4
 2796 135a 16       		.uleb128 0x16
 2797 135b ED050000 		.4byte	.LASF322
 2798 135f 11       		.byte	0x11
 2799 1360 5B02     		.2byte	0x25b
 2800 1362 38140000 		.4byte	0x1438
 2801 1366 08       		.byte	0x8
 2802 1367 16       		.uleb128 0x16
 2803 1368 680E0000 		.4byte	.LASF323
 2804 136c 11       		.byte	0x11
 2805 136d 5C02     		.2byte	0x25c
 2806 136f 440E0000 		.4byte	0xe44
 2807 1373 24       		.byte	0x24
 2808 1374 16       		.uleb128 0x16
 2809 1375 CD090000 		.4byte	.LASF324
 2810 1379 11       		.byte	0x11
 2811 137a 5D02     		.2byte	0x25d
 2812 137c 9F000000 		.4byte	0x9f
 2813 1380 48       		.byte	0x48
 2814 1381 16       		.uleb128 0x16
 2815 1382 48130000 		.4byte	.LASF325
 2816 1386 11       		.byte	0x11
 2817 1387 5E02     		.2byte	0x25e
 2818 1389 98000000 		.4byte	0x98
 2819 138d 50       		.byte	0x50
 2820 138e 16       		.uleb128 0x16
 2821 138f 08010000 		.4byte	.LASF326
 2822 1393 11       		.byte	0x11
 2823 1394 5F02     		.2byte	0x25f
 2824 1396 F2120000 		.4byte	0x12f2
 2825 139a 58       		.byte	0x58
 2826 139b 16       		.uleb128 0x16
 2827 139c 2B080000 		.4byte	.LASF327
 2828 13a0 11       		.byte	0x11
 2829 13a1 6002     		.2byte	0x260
 2830 13a3 BA0D0000 		.4byte	0xdba
 2831 13a7 68       		.byte	0x68
 2832 13a8 16       		.uleb128 0x16
 2833 13a9 83110000 		.4byte	.LASF328
 2834 13ad 11       		.byte	0x11
 2835 13ae 6102     		.2byte	0x261
 2836 13b0 BA0D0000 		.4byte	0xdba
 2837 13b4 70       		.byte	0x70
 2838 13b5 16       		.uleb128 0x16
 2839 13b6 FA000000 		.4byte	.LASF329
 2840 13ba 11       		.byte	0x11
 2841 13bb 6202     		.2byte	0x262
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 117


 2842 13bd BA0D0000 		.4byte	0xdba
 2843 13c1 78       		.byte	0x78
 2844 13c2 16       		.uleb128 0x16
 2845 13c3 A90E0000 		.4byte	.LASF330
 2846 13c7 11       		.byte	0x11
 2847 13c8 6302     		.2byte	0x263
 2848 13ca 48140000 		.4byte	0x1448
 2849 13ce 80       		.byte	0x80
 2850 13cf 16       		.uleb128 0x16
 2851 13d0 30010000 		.4byte	.LASF331
 2852 13d4 11       		.byte	0x11
 2853 13d5 6402     		.2byte	0x264
 2854 13d7 58140000 		.4byte	0x1458
 2855 13db 88       		.byte	0x88
 2856 13dc 16       		.uleb128 0x16
 2857 13dd A9100000 		.4byte	.LASF332
 2858 13e1 11       		.byte	0x11
 2859 13e2 6502     		.2byte	0x265
 2860 13e4 9F000000 		.4byte	0x9f
 2861 13e8 A0       		.byte	0xa0
 2862 13e9 16       		.uleb128 0x16
 2863 13ea B9020000 		.4byte	.LASF333
 2864 13ee 11       		.byte	0x11
 2865 13ef 6602     		.2byte	0x266
 2866 13f1 BA0D0000 		.4byte	0xdba
 2867 13f5 A4       		.byte	0xa4
 2868 13f6 16       		.uleb128 0x16
 2869 13f7 B6100000 		.4byte	.LASF334
 2870 13fb 11       		.byte	0x11
 2871 13fc 6702     		.2byte	0x267
 2872 13fe BA0D0000 		.4byte	0xdba
 2873 1402 AC       		.byte	0xac
 2874 1403 16       		.uleb128 0x16
 2875 1404 46070000 		.4byte	.LASF335
 2876 1408 11       		.byte	0x11
 2877 1409 6802     		.2byte	0x268
 2878 140b BA0D0000 		.4byte	0xdba
 2879 140f B4       		.byte	0xb4
 2880 1410 16       		.uleb128 0x16
 2881 1411 600A0000 		.4byte	.LASF336
 2882 1415 11       		.byte	0x11
 2883 1416 6902     		.2byte	0x269
 2884 1418 BA0D0000 		.4byte	0xdba
 2885 141c BC       		.byte	0xbc
 2886 141d 16       		.uleb128 0x16
 2887 141e 380B0000 		.4byte	.LASF337
 2888 1422 11       		.byte	0x11
 2889 1423 6A02     		.2byte	0x26a
 2890 1425 BA0D0000 		.4byte	0xdba
 2891 1429 C4       		.byte	0xc4
 2892 142a 16       		.uleb128 0x16
 2893 142b 720B0000 		.4byte	.LASF338
 2894 142f 11       		.byte	0x11
 2895 1430 6B02     		.2byte	0x26b
 2896 1432 9F000000 		.4byte	0x9f
 2897 1436 CC       		.byte	0xcc
 2898 1437 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 118


 2899 1438 07       		.uleb128 0x7
 2900 1439 840A0000 		.4byte	0xa84
 2901 143d 48140000 		.4byte	0x1448
 2902 1441 08       		.uleb128 0x8
 2903 1442 EF000000 		.4byte	0xef
 2904 1446 19       		.byte	0x19
 2905 1447 00       		.byte	0
 2906 1448 07       		.uleb128 0x7
 2907 1449 840A0000 		.4byte	0xa84
 2908 144d 58140000 		.4byte	0x1458
 2909 1451 08       		.uleb128 0x8
 2910 1452 EF000000 		.4byte	0xef
 2911 1456 07       		.byte	0x7
 2912 1457 00       		.byte	0
 2913 1458 07       		.uleb128 0x7
 2914 1459 840A0000 		.4byte	0xa84
 2915 145d 68140000 		.4byte	0x1468
 2916 1461 08       		.uleb128 0x8
 2917 1462 EF000000 		.4byte	0xef
 2918 1466 17       		.byte	0x17
 2919 1467 00       		.byte	0
 2920 1468 15       		.uleb128 0x15
 2921 1469 F0       		.byte	0xf0
 2922 146a 11       		.byte	0x11
 2923 146b 7002     		.2byte	0x270
 2924 146d 8C140000 		.4byte	0x148c
 2925 1471 16       		.uleb128 0x16
 2926 1472 29050000 		.4byte	.LASF339
 2927 1476 11       		.byte	0x11
 2928 1477 7302     		.2byte	0x273
 2929 1479 8C140000 		.4byte	0x148c
 2930 147d 00       		.byte	0
 2931 147e 16       		.uleb128 0x16
 2932 147f 80130000 		.4byte	.LASF340
 2933 1483 11       		.byte	0x11
 2934 1484 7402     		.2byte	0x274
 2935 1486 9C140000 		.4byte	0x149c
 2936 148a 78       		.byte	0x78
 2937 148b 00       		.byte	0
 2938 148c 07       		.uleb128 0x7
 2939 148d 860F0000 		.4byte	0xf86
 2940 1491 9C140000 		.4byte	0x149c
 2941 1495 08       		.uleb128 0x8
 2942 1496 EF000000 		.4byte	0xef
 2943 149a 1D       		.byte	0x1d
 2944 149b 00       		.byte	0
 2945 149c 07       		.uleb128 0x7
 2946 149d A6000000 		.4byte	0xa6
 2947 14a1 AC140000 		.4byte	0x14ac
 2948 14a5 08       		.uleb128 0x8
 2949 14a6 EF000000 		.4byte	0xef
 2950 14aa 1D       		.byte	0x1d
 2951 14ab 00       		.byte	0
 2952 14ac 21       		.uleb128 0x21
 2953 14ad F0       		.byte	0xf0
 2954 14ae 11       		.byte	0x11
 2955 14af 5502     		.2byte	0x255
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 119


 2956 14b1 CE140000 		.4byte	0x14ce
 2957 14b5 22       		.uleb128 0x22
 2958 14b6 E9110000 		.4byte	.LASF290
 2959 14ba 11       		.byte	0x11
 2960 14bb 6C02     		.2byte	0x26c
 2961 14bd 37130000 		.4byte	0x1337
 2962 14c1 22       		.uleb128 0x22
 2963 14c2 7F0E0000 		.4byte	.LASF341
 2964 14c6 11       		.byte	0x11
 2965 14c7 7502     		.2byte	0x275
 2966 14c9 68140000 		.4byte	0x1468
 2967 14cd 00       		.byte	0
 2968 14ce 07       		.uleb128 0x7
 2969 14cf 840A0000 		.4byte	0xa84
 2970 14d3 DE140000 		.4byte	0x14de
 2971 14d7 08       		.uleb128 0x8
 2972 14d8 EF000000 		.4byte	0xef
 2973 14dc 18       		.byte	0x18
 2974 14dd 00       		.byte	0
 2975 14de 17       		.uleb128 0x17
 2976 14df E9140000 		.4byte	0x14e9
 2977 14e3 18       		.uleb128 0x18
 2978 14e4 D4100000 		.4byte	0x10d4
 2979 14e8 00       		.byte	0
 2980 14e9 10       		.uleb128 0x10
 2981 14ea 04       		.byte	0x4
 2982 14eb DE140000 		.4byte	0x14de
 2983 14ef 10       		.uleb128 0x10
 2984 14f0 04       		.byte	0x4
 2985 14f1 2E0E0000 		.4byte	0xe2e
 2986 14f5 17       		.uleb128 0x17
 2987 14f6 00150000 		.4byte	0x1500
 2988 14fa 18       		.uleb128 0x18
 2989 14fb 9F000000 		.4byte	0x9f
 2990 14ff 00       		.byte	0
 2991 1500 10       		.uleb128 0x10
 2992 1501 04       		.byte	0x4
 2993 1502 06150000 		.4byte	0x1506
 2994 1506 10       		.uleb128 0x10
 2995 1507 04       		.byte	0x4
 2996 1508 F5140000 		.4byte	0x14f5
 2997 150c 07       		.uleb128 0x7
 2998 150d A5120000 		.4byte	0x12a5
 2999 1511 1C150000 		.4byte	0x151c
 3000 1515 08       		.uleb128 0x8
 3001 1516 EF000000 		.4byte	0xef
 3002 151a 02       		.byte	0x2
 3003 151b 00       		.byte	0
 3004 151c 23       		.uleb128 0x23
 3005 151d 400D0000 		.4byte	.LASF342
 3006 1521 04       		.byte	0x4
 3007 1522 9E05     		.2byte	0x59e
 3008 1524 03       		.byte	0x3
 3009 1525 36150000 		.4byte	0x1536
 3010 1529 24       		.uleb128 0x24
 3011 152a 24050000 		.4byte	.LASF344
 3012 152e 04       		.byte	0x4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 120


 3013 152f 9E05     		.2byte	0x59e
 3014 1531 36150000 		.4byte	0x1536
 3015 1535 00       		.byte	0
 3016 1536 10       		.uleb128 0x10
 3017 1537 04       		.byte	0x4
 3018 1538 42060000 		.4byte	0x642
 3019 153c 23       		.uleb128 0x23
 3020 153d FA050000 		.4byte	.LASF343
 3021 1541 02       		.byte	0x2
 3022 1542 2503     		.2byte	0x325
 3023 1544 03       		.byte	0x3
 3024 1545 6E150000 		.4byte	0x156e
 3025 1549 24       		.uleb128 0x24
 3026 154a 24050000 		.4byte	.LASF344
 3027 154e 02       		.byte	0x2
 3028 154f 2503     		.2byte	0x325
 3029 1551 370D0000 		.4byte	0xd37
 3030 1555 24       		.uleb128 0x24
 3031 1556 A2110000 		.4byte	.LASF345
 3032 155a 02       		.byte	0x2
 3033 155b 2503     		.2byte	0x325
 3034 155d E4000000 		.4byte	0xe4
 3035 1561 24       		.uleb128 0x24
 3036 1562 81060000 		.4byte	.LASF346
 3037 1566 02       		.byte	0x2
 3038 1567 2503     		.2byte	0x325
 3039 1569 E4000000 		.4byte	0xe4
 3040 156d 00       		.byte	0
 3041 156e 25       		.uleb128 0x25
 3042 156f 1D110000 		.4byte	.LASF347
 3043 1573 03       		.byte	0x3
 3044 1574 C203     		.2byte	0x3c2
 3045 1576 03       		.byte	0x3
 3046 1577 25       		.uleb128 0x25
 3047 1578 CC0F0000 		.4byte	.LASF348
 3048 157c 03       		.byte	0x3
 3049 157d AE03     		.2byte	0x3ae
 3050 157f 03       		.byte	0x3
 3051 1580 26       		.uleb128 0x26
 3052 1581 4A120000 		.4byte	.LASF349
 3053 1585 05       		.byte	0x5
 3054 1586 81       		.byte	0x81
 3055 1587 03       		.byte	0x3
 3056 1588 27       		.uleb128 0x27
 3057 1589 19100000 		.4byte	.LASF352
 3058 158d 03       		.byte	0x3
 3059 158e D604     		.2byte	0x4d6
 3060 1590 C3000000 		.4byte	0xc3
 3061 1594 03       		.byte	0x3
 3062 1595 B2150000 		.4byte	0x15b2
 3063 1599 24       		.uleb128 0x24
 3064 159a 38080000 		.4byte	.LASF350
 3065 159e 03       		.byte	0x3
 3066 159f D604     		.2byte	0x4d6
 3067 15a1 E4000000 		.4byte	0xe4
 3068 15a5 24       		.uleb128 0x24
 3069 15a6 26010000 		.4byte	.LASF351
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 121


 3070 15aa 03       		.byte	0x3
 3071 15ab D604     		.2byte	0x4d6
 3072 15ad C3000000 		.4byte	0xc3
 3073 15b1 00       		.byte	0
 3074 15b2 27       		.uleb128 0x27
 3075 15b3 FD0F0000 		.4byte	.LASF353
 3076 15b7 03       		.byte	0x3
 3077 15b8 D503     		.2byte	0x3d5
 3078 15ba C3000000 		.4byte	0xc3
 3079 15be 03       		.byte	0x3
 3080 15bf D0150000 		.4byte	0x15d0
 3081 15c3 24       		.uleb128 0x24
 3082 15c4 38080000 		.4byte	.LASF350
 3083 15c8 03       		.byte	0x3
 3084 15c9 D503     		.2byte	0x3d5
 3085 15cb E4000000 		.4byte	0xe4
 3086 15cf 00       		.byte	0
 3087 15d0 28       		.uleb128 0x28
 3088 15d1 3E090000 		.4byte	.LASF356
 3089 15d5 01       		.byte	0x1
 3090 15d6 34       		.byte	0x34
 3091 15d7 9F000000 		.4byte	0x9f
 3092 15db 00000000 		.4byte	.LFB536
 3093 15df BC000000 		.4byte	.LFE536-.LFB536
 3094 15e3 01       		.uleb128 0x1
 3095 15e4 9C       		.byte	0x9c
 3096 15e5 D6170000 		.4byte	0x17d6
 3097 15e9 29       		.uleb128 0x29
 3098 15ea 3C150000 		.4byte	0x153c
 3099 15ee 02000000 		.4byte	.LBB39
 3100 15f2 06000000 		.4byte	.LBE39-.LBB39
 3101 15f6 01       		.byte	0x1
 3102 15f7 36       		.byte	0x36
 3103 15f8 18160000 		.4byte	0x1618
 3104 15fc 2A       		.uleb128 0x2a
 3105 15fd 61150000 		.4byte	0x1561
 3106 1601 00000000 		.4byte	.LLST0
 3107 1605 2A       		.uleb128 0x2a
 3108 1606 55150000 		.4byte	0x1555
 3109 160a 14000000 		.4byte	.LLST1
 3110 160e 2A       		.uleb128 0x2a
 3111 160f 49150000 		.4byte	0x1549
 3112 1613 28000000 		.4byte	.LLST2
 3113 1617 00       		.byte	0
 3114 1618 2B       		.uleb128 0x2b
 3115 1619 16000000 		.4byte	.LBB41
 3116 161d 64000000 		.4byte	.LBE41-.LBB41
 3117 1621 15170000 		.4byte	0x1715
 3118 1625 2C       		.uleb128 0x2c
 3119 1626 69647800 		.ascii	"idx\000"
 3120 162a 01       		.byte	0x1
 3121 162b 3C       		.byte	0x3c
 3122 162c 9F000000 		.4byte	0x9f
 3123 1630 40000000 		.4byte	.LLST3
 3124 1634 2D       		.uleb128 0x2d
 3125 1635 1A000000 		.4byte	.LBB42
 3126 1639 58000000 		.4byte	.LBE42-.LBB42
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 122


 3127 163d 2E       		.uleb128 0x2e
 3128 163e 9B120000 		.4byte	.LASF354
 3129 1642 01       		.byte	0x1
 3130 1643 3E       		.byte	0x3e
 3131 1644 C3000000 		.4byte	0xc3
 3132 1648 2E       		.uleb128 0x2e
 3133 1649 F60A0000 		.4byte	.LASF355
 3134 164d 01       		.byte	0x1
 3135 164e 3F       		.byte	0x3f
 3136 164f C3000000 		.4byte	0xc3
 3137 1653 29       		.uleb128 0x29
 3138 1654 B2150000 		.4byte	0x15b2
 3139 1658 20000000 		.4byte	.LBB43
 3140 165c 26000000 		.4byte	.LBE43-.LBB43
 3141 1660 01       		.byte	0x1
 3142 1661 3E       		.byte	0x3e
 3143 1662 A6160000 		.4byte	0x16a6
 3144 1666 2A       		.uleb128 0x2a
 3145 1667 C3150000 		.4byte	0x15c3
 3146 166b 5F000000 		.4byte	.LLST4
 3147 166f 2F       		.uleb128 0x2f
 3148 1670 3C000000 		.4byte	.LVL7
 3149 1674 601A0000 		.4byte	0x1a60
 3150 1678 8D160000 		.4byte	0x168d
 3151 167c 30       		.uleb128 0x30
 3152 167d 01       		.uleb128 0x1
 3153 167e 50       		.byte	0x50
 3154 167f 05       		.uleb128 0x5
 3155 1680 03       		.byte	0x3
 3156 1681 1C000000 		.4byte	.LC1
 3157 1685 30       		.uleb128 0x30
 3158 1686 01       		.uleb128 0x1
 3159 1687 51       		.byte	0x51
 3160 1688 03       		.uleb128 0x3
 3161 1689 0A       		.byte	0xa
 3162 168a D803     		.2byte	0x3d8
 3163 168c 00       		.byte	0
 3164 168d 31       		.uleb128 0x31
 3165 168e 44000000 		.4byte	.LVL8
 3166 1692 6C1A0000 		.4byte	0x1a6c
 3167 1696 30       		.uleb128 0x30
 3168 1697 01       		.uleb128 0x1
 3169 1698 50       		.byte	0x50
 3170 1699 05       		.uleb128 0x5
 3171 169a 0C       		.byte	0xc
 3172 169b 00001D41 		.4byte	0x411d0000
 3173 169f 30       		.uleb128 0x30
 3174 16a0 01       		.uleb128 0x1
 3175 16a1 51       		.byte	0x51
 3176 16a2 01       		.uleb128 0x1
 3177 16a3 30       		.byte	0x30
 3178 16a4 00       		.byte	0
 3179 16a5 00       		.byte	0
 3180 16a6 29       		.uleb128 0x29
 3181 16a7 88150000 		.4byte	0x1588
 3182 16ab 46000000 		.4byte	.LBB45
 3183 16af 26000000 		.4byte	.LBE45-.LBB45
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 123


 3184 16b3 01       		.byte	0x1
 3185 16b4 3F       		.byte	0x3f
 3186 16b5 04170000 		.4byte	0x1704
 3187 16b9 32       		.uleb128 0x32
 3188 16ba A5150000 		.4byte	0x15a5
 3189 16be 2A       		.uleb128 0x2a
 3190 16bf 99150000 		.4byte	0x1599
 3191 16c3 73000000 		.4byte	.LLST5
 3192 16c7 2F       		.uleb128 0x2f
 3193 16c8 62000000 		.4byte	.LVL10
 3194 16cc 601A0000 		.4byte	0x1a60
 3195 16d0 E5160000 		.4byte	0x16e5
 3196 16d4 30       		.uleb128 0x30
 3197 16d5 01       		.uleb128 0x1
 3198 16d6 50       		.byte	0x50
 3199 16d7 05       		.uleb128 0x5
 3200 16d8 03       		.byte	0x3
 3201 16d9 1C000000 		.4byte	.LC1
 3202 16dd 30       		.uleb128 0x30
 3203 16de 01       		.uleb128 0x1
 3204 16df 51       		.byte	0x51
 3205 16e0 03       		.uleb128 0x3
 3206 16e1 0A       		.byte	0xa
 3207 16e2 D904     		.2byte	0x4d9
 3208 16e4 00       		.byte	0
 3209 16e5 31       		.uleb128 0x31
 3210 16e6 6C000000 		.4byte	.LVL11
 3211 16ea 781A0000 		.4byte	0x1a78
 3212 16ee 30       		.uleb128 0x30
 3213 16ef 01       		.uleb128 0x1
 3214 16f0 50       		.byte	0x50
 3215 16f1 05       		.uleb128 0x5
 3216 16f2 0C       		.byte	0xc
 3217 16f3 00001D41 		.4byte	0x411d0000
 3218 16f7 30       		.uleb128 0x30
 3219 16f8 01       		.uleb128 0x1
 3220 16f9 51       		.byte	0x51
 3221 16fa 01       		.uleb128 0x1
 3222 16fb 30       		.byte	0x30
 3223 16fc 30       		.uleb128 0x30
 3224 16fd 01       		.uleb128 0x1
 3225 16fe 52       		.byte	0x52
 3226 16ff 02       		.uleb128 0x2
 3227 1700 75       		.byte	0x75
 3228 1701 00       		.sleb128 0
 3229 1702 00       		.byte	0
 3230 1703 00       		.byte	0
 3231 1704 31       		.uleb128 0x31
 3232 1705 20000000 		.4byte	.LVL6
 3233 1709 841A0000 		.4byte	0x1a84
 3234 170d 30       		.uleb128 0x30
 3235 170e 01       		.uleb128 0x1
 3236 170f 50       		.byte	0x50
 3237 1710 01       		.uleb128 0x1
 3238 1711 31       		.byte	0x31
 3239 1712 00       		.byte	0
 3240 1713 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 124


 3241 1714 00       		.byte	0
 3242 1715 29       		.uleb128 0x29
 3243 1716 77150000 		.4byte	0x1577
 3244 171a 7A000000 		.4byte	.LBB47
 3245 171e 0A000000 		.4byte	.LBE47-.LBB47
 3246 1722 01       		.byte	0x1
 3247 1723 43       		.byte	0x43
 3248 1724 43170000 		.4byte	0x1743
 3249 1728 33       		.uleb128 0x33
 3250 1729 1C150000 		.4byte	0x151c
 3251 172d 7A000000 		.4byte	.LBB48
 3252 1731 0A000000 		.4byte	.LBE48-.LBB48
 3253 1735 03       		.byte	0x3
 3254 1736 B003     		.2byte	0x3b0
 3255 1738 2A       		.uleb128 0x2a
 3256 1739 29150000 		.4byte	0x1529
 3257 173d 87000000 		.4byte	.LLST6
 3258 1741 00       		.byte	0
 3259 1742 00       		.byte	0
 3260 1743 29       		.uleb128 0x29
 3261 1744 6E150000 		.4byte	0x156e
 3262 1748 84000000 		.4byte	.LBB50
 3263 174c 04000000 		.4byte	.LBE50-.LBB50
 3264 1750 01       		.byte	0x1
 3265 1751 44       		.byte	0x44
 3266 1752 6A170000 		.4byte	0x176a
 3267 1756 31       		.uleb128 0x31
 3268 1757 88000000 		.4byte	.LVL15
 3269 175b 8F1A0000 		.4byte	0x1a8f
 3270 175f 30       		.uleb128 0x30
 3271 1760 01       		.uleb128 0x1
 3272 1761 50       		.byte	0x50
 3273 1762 05       		.uleb128 0x5
 3274 1763 0C       		.byte	0xc
 3275 1764 00001D41 		.4byte	0x411d0000
 3276 1768 00       		.byte	0
 3277 1769 00       		.byte	0
 3278 176a 29       		.uleb128 0x29
 3279 176b 3C150000 		.4byte	0x153c
 3280 176f 88000000 		.4byte	.LBB52
 3281 1773 06000000 		.4byte	.LBE52-.LBB52
 3282 1777 01       		.byte	0x1
 3283 1778 46       		.byte	0x46
 3284 1779 99170000 		.4byte	0x1799
 3285 177d 2A       		.uleb128 0x2a
 3286 177e 61150000 		.4byte	0x1561
 3287 1782 9F000000 		.4byte	.LLST7
 3288 1786 2A       		.uleb128 0x2a
 3289 1787 55150000 		.4byte	0x1555
 3290 178b 9F000000 		.4byte	.LLST7
 3291 178f 2A       		.uleb128 0x2a
 3292 1790 49150000 		.4byte	0x1549
 3293 1794 B3000000 		.4byte	.LLST9
 3294 1798 00       		.byte	0
 3295 1799 2F       		.uleb128 0x2f
 3296 179a 0E000000 		.4byte	.LVL2
 3297 179e 9B1A0000 		.4byte	0x1a9b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 125


 3298 17a2 B0170000 		.4byte	0x17b0
 3299 17a6 30       		.uleb128 0x30
 3300 17a7 01       		.uleb128 0x1
 3301 17a8 50       		.byte	0x50
 3302 17a9 05       		.uleb128 0x5
 3303 17aa 03       		.byte	0x3
 3304 17ab 00000000 		.4byte	.LC0
 3305 17af 00       		.byte	0
 3306 17b0 34       		.uleb128 0x34
 3307 17b1 12000000 		.4byte	.LVL3
 3308 17b5 AA1A0000 		.4byte	0x1aaa
 3309 17b9 34       		.uleb128 0x34
 3310 17ba 16000000 		.4byte	.LVL4
 3311 17be B51A0000 		.4byte	0x1ab5
 3312 17c2 31       		.uleb128 0x31
 3313 17c3 94000000 		.4byte	.LVL17
 3314 17c7 9B1A0000 		.4byte	0x1a9b
 3315 17cb 30       		.uleb128 0x30
 3316 17cc 01       		.uleb128 0x1
 3317 17cd 50       		.byte	0x50
 3318 17ce 05       		.uleb128 0x5
 3319 17cf 03       		.byte	0x3
 3320 17d0 3C000000 		.4byte	.LC2
 3321 17d4 00       		.byte	0
 3322 17d5 00       		.byte	0
 3323 17d6 28       		.uleb128 0x28
 3324 17d7 A3010000 		.4byte	.LASF357
 3325 17db 01       		.byte	0x1
 3326 17dc 4C       		.byte	0x4c
 3327 17dd 9F000000 		.4byte	0x9f
 3328 17e1 00000000 		.4byte	.LFB537
 3329 17e5 64000000 		.4byte	.LFE537-.LFB537
 3330 17e9 01       		.uleb128 0x1
 3331 17ea 9C       		.byte	0x9c
 3332 17eb E3180000 		.4byte	0x18e3
 3333 17ef 29       		.uleb128 0x29
 3334 17f0 3C150000 		.4byte	0x153c
 3335 17f4 04000000 		.4byte	.LBB54
 3336 17f8 06000000 		.4byte	.LBE54-.LBB54
 3337 17fc 01       		.byte	0x1
 3338 17fd 4E       		.byte	0x4e
 3339 17fe 1E180000 		.4byte	0x181e
 3340 1802 2A       		.uleb128 0x2a
 3341 1803 61150000 		.4byte	0x1561
 3342 1807 CB000000 		.4byte	.LLST10
 3343 180b 2A       		.uleb128 0x2a
 3344 180c 55150000 		.4byte	0x1555
 3345 1810 DF000000 		.4byte	.LLST11
 3346 1814 2A       		.uleb128 0x2a
 3347 1815 49150000 		.4byte	0x1549
 3348 1819 F3000000 		.4byte	.LLST12
 3349 181d 00       		.byte	0
 3350 181e 2B       		.uleb128 0x2b
 3351 181f 10000000 		.4byte	.LBB56
 3352 1823 20000000 		.4byte	.LBE56-.LBB56
 3353 1827 89180000 		.4byte	0x1889
 3354 182b 2C       		.uleb128 0x2c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 126


 3355 182c 69647800 		.ascii	"idx\000"
 3356 1830 01       		.byte	0x1
 3357 1831 51       		.byte	0x51
 3358 1832 9F000000 		.4byte	0x9f
 3359 1836 0B010000 		.4byte	.LLST13
 3360 183a 2D       		.uleb128 0x2d
 3361 183b 14000000 		.4byte	.LBB57
 3362 183f 14000000 		.4byte	.LBE57-.LBB57
 3363 1843 35       		.uleb128 0x35
 3364 1844 AB080000 		.4byte	.LASF358
 3365 1848 01       		.byte	0x1
 3366 1849 52       		.byte	0x52
 3367 184a E3180000 		.4byte	0x18e3
 3368 184e 02       		.uleb128 0x2
 3369 184f 91       		.byte	0x91
 3370 1850 70       		.sleb128 -16
 3371 1851 2F       		.uleb128 0x2f
 3372 1852 20000000 		.4byte	.LVL23
 3373 1856 C01A0000 		.4byte	0x1ac0
 3374 185a 6E180000 		.4byte	0x186e
 3375 185e 30       		.uleb128 0x30
 3376 185f 01       		.uleb128 0x1
 3377 1860 50       		.byte	0x50
 3378 1861 02       		.uleb128 0x2
 3379 1862 7D       		.byte	0x7d
 3380 1863 00       		.sleb128 0
 3381 1864 30       		.uleb128 0x30
 3382 1865 01       		.uleb128 0x1
 3383 1866 51       		.byte	0x51
 3384 1867 05       		.uleb128 0x5
 3385 1868 03       		.byte	0x3
 3386 1869 74000000 		.4byte	.LC4
 3387 186d 00       		.byte	0
 3388 186e 31       		.uleb128 0x31
 3389 186f 28000000 		.4byte	.LVL24
 3390 1873 CB1A0000 		.4byte	0x1acb
 3391 1877 30       		.uleb128 0x30
 3392 1878 01       		.uleb128 0x1
 3393 1879 50       		.byte	0x50
 3394 187a 05       		.uleb128 0x5
 3395 187b 03       		.byte	0x3
 3396 187c 78000000 		.4byte	.LC5
 3397 1880 30       		.uleb128 0x30
 3398 1881 01       		.uleb128 0x1
 3399 1882 51       		.byte	0x51
 3400 1883 02       		.uleb128 0x2
 3401 1884 7D       		.byte	0x7d
 3402 1885 00       		.sleb128 0
 3403 1886 00       		.byte	0
 3404 1887 00       		.byte	0
 3405 1888 00       		.byte	0
 3406 1889 29       		.uleb128 0x29
 3407 188a 3C150000 		.4byte	0x153c
 3408 188e 30000000 		.4byte	.LBB58
 3409 1892 06000000 		.4byte	.LBE58-.LBB58
 3410 1896 01       		.byte	0x1
 3411 1897 57       		.byte	0x57
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 127


 3412 1898 B8180000 		.4byte	0x18b8
 3413 189c 2A       		.uleb128 0x2a
 3414 189d 61150000 		.4byte	0x1561
 3415 18a1 2A010000 		.4byte	.LLST14
 3416 18a5 2A       		.uleb128 0x2a
 3417 18a6 55150000 		.4byte	0x1555
 3418 18aa 3E010000 		.4byte	.LLST15
 3419 18ae 2A       		.uleb128 0x2a
 3420 18af 49150000 		.4byte	0x1549
 3421 18b3 52010000 		.4byte	.LLST16
 3422 18b7 00       		.byte	0
 3423 18b8 2F       		.uleb128 0x2f
 3424 18b9 10000000 		.4byte	.LVL21
 3425 18bd 9B1A0000 		.4byte	0x1a9b
 3426 18c1 CF180000 		.4byte	0x18cf
 3427 18c5 30       		.uleb128 0x30
 3428 18c6 01       		.uleb128 0x1
 3429 18c7 50       		.byte	0x50
 3430 18c8 05       		.uleb128 0x5
 3431 18c9 03       		.byte	0x3
 3432 18ca 58000000 		.4byte	.LC3
 3433 18ce 00       		.byte	0
 3434 18cf 31       		.uleb128 0x31
 3435 18d0 3C000000 		.4byte	.LVL28
 3436 18d4 9B1A0000 		.4byte	0x1a9b
 3437 18d8 30       		.uleb128 0x30
 3438 18d9 01       		.uleb128 0x1
 3439 18da 50       		.byte	0x50
 3440 18db 05       		.uleb128 0x5
 3441 18dc 03       		.byte	0x3
 3442 18dd 80000000 		.4byte	.LC6
 3443 18e1 00       		.byte	0
 3444 18e2 00       		.byte	0
 3445 18e3 07       		.uleb128 0x7
 3446 18e4 A50A0000 		.4byte	0xaa5
 3447 18e8 F3180000 		.4byte	0x18f3
 3448 18ec 08       		.uleb128 0x8
 3449 18ed EF000000 		.4byte	0xef
 3450 18f1 07       		.byte	0x7
 3451 18f2 00       		.byte	0
 3452 18f3 36       		.uleb128 0x36
 3453 18f4 14120000 		.4byte	.LASF385
 3454 18f8 01       		.byte	0x1
 3455 18f9 1A       		.byte	0x1a
 3456 18fa 9F000000 		.4byte	0x9f
 3457 18fe 00000000 		.4byte	.LFB535
 3458 1902 60000000 		.4byte	.LFE535-.LFB535
 3459 1906 01       		.uleb128 0x1
 3460 1907 9C       		.byte	0x9c
 3461 1908 CC190000 		.4byte	0x19cc
 3462 190c 37       		.uleb128 0x37
 3463 190d 80150000 		.4byte	0x1580
 3464 1911 02000000 		.4byte	.LBB60
 3465 1915 02000000 		.4byte	.LBE60-.LBB60
 3466 1919 01       		.byte	0x1
 3467 191a 1C       		.byte	0x1c
 3468 191b 34       		.uleb128 0x34
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 128


 3469 191c 08000000 		.4byte	.LVL30
 3470 1920 D61A0000 		.4byte	0x1ad6
 3471 1924 34       		.uleb128 0x34
 3472 1925 0C000000 		.4byte	.LVL31
 3473 1929 E11A0000 		.4byte	0x1ae1
 3474 192d 2F       		.uleb128 0x2f
 3475 192e 1C000000 		.4byte	.LVL32
 3476 1932 EC1A0000 		.4byte	0x1aec
 3477 1936 4A190000 		.4byte	0x194a
 3478 193a 30       		.uleb128 0x30
 3479 193b 01       		.uleb128 0x1
 3480 193c 51       		.byte	0x51
 3481 193d 01       		.uleb128 0x1
 3482 193e 30       		.byte	0x30
 3483 193f 30       		.uleb128 0x30
 3484 1940 01       		.uleb128 0x1
 3485 1941 52       		.byte	0x52
 3486 1942 01       		.uleb128 0x1
 3487 1943 32       		.byte	0x32
 3488 1944 30       		.uleb128 0x30
 3489 1945 01       		.uleb128 0x1
 3490 1946 53       		.byte	0x53
 3491 1947 01       		.uleb128 0x1
 3492 1948 30       		.byte	0x30
 3493 1949 00       		.byte	0
 3494 194a 2F       		.uleb128 0x2f
 3495 194b 22000000 		.4byte	.LVL33
 3496 194f CB1A0000 		.4byte	0x1acb
 3497 1953 61190000 		.4byte	0x1961
 3498 1957 30       		.uleb128 0x30
 3499 1958 01       		.uleb128 0x1
 3500 1959 50       		.byte	0x50
 3501 195a 05       		.uleb128 0x5
 3502 195b 03       		.byte	0x3
 3503 195c 9C000000 		.4byte	.LC7
 3504 1960 00       		.byte	0
 3505 1961 2F       		.uleb128 0x2f
 3506 1962 28000000 		.4byte	.LVL34
 3507 1966 9B1A0000 		.4byte	0x1a9b
 3508 196a 78190000 		.4byte	0x1978
 3509 196e 30       		.uleb128 0x30
 3510 196f 01       		.uleb128 0x1
 3511 1970 50       		.byte	0x50
 3512 1971 05       		.uleb128 0x5
 3513 1972 03       		.byte	0x3
 3514 1973 A4000000 		.4byte	.LC8
 3515 1977 00       		.byte	0
 3516 1978 34       		.uleb128 0x34
 3517 1979 2C000000 		.4byte	.LVL35
 3518 197d F71A0000 		.4byte	0x1af7
 3519 1981 34       		.uleb128 0x34
 3520 1982 30000000 		.4byte	.LVL36
 3521 1986 021B0000 		.4byte	0x1b02
 3522 198a 34       		.uleb128 0x34
 3523 198b 38000000 		.4byte	.LVL37
 3524 198f 0D1B0000 		.4byte	0x1b0d
 3525 1993 2F       		.uleb128 0x2f
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 129


 3526 1994 3E000000 		.4byte	.LVL38
 3527 1998 181B0000 		.4byte	0x1b18
 3528 199c A6190000 		.4byte	0x19a6
 3529 19a0 30       		.uleb128 0x30
 3530 19a1 01       		.uleb128 0x1
 3531 19a2 50       		.byte	0x50
 3532 19a3 01       		.uleb128 0x1
 3533 19a4 30       		.byte	0x30
 3534 19a5 00       		.byte	0
 3535 19a6 34       		.uleb128 0x34
 3536 19a7 44000000 		.4byte	.LVL39
 3537 19ab D0150000 		.4byte	0x15d0
 3538 19af 2F       		.uleb128 0x2f
 3539 19b0 4A000000 		.4byte	.LVL40
 3540 19b4 181B0000 		.4byte	0x1b18
 3541 19b8 C2190000 		.4byte	0x19c2
 3542 19bc 30       		.uleb128 0x30
 3543 19bd 01       		.uleb128 0x1
 3544 19be 50       		.byte	0x50
 3545 19bf 01       		.uleb128 0x1
 3546 19c0 31       		.byte	0x31
 3547 19c1 00       		.byte	0
 3548 19c2 34       		.uleb128 0x34
 3549 19c3 52000000 		.4byte	.LVL41
 3550 19c7 D6170000 		.4byte	0x17d6
 3551 19cb 00       		.byte	0
 3552 19cc 38       		.uleb128 0x38
 3553 19cd B00D0000 		.4byte	.LASF359
 3554 19d1 12       		.byte	0x12
 3555 19d2 F907     		.2byte	0x7f9
 3556 19d4 D8190000 		.4byte	0x19d8
 3557 19d8 05       		.uleb128 0x5
 3558 19d9 D9000000 		.4byte	0xd9
 3559 19dd 39       		.uleb128 0x39
 3560 19de 75000000 		.4byte	.LASF360
 3561 19e2 0B       		.byte	0xb
 3562 19e3 A7       		.byte	0xa7
 3563 19e4 E8190000 		.4byte	0x19e8
 3564 19e8 10       		.uleb128 0x10
 3565 19e9 04       		.byte	0x4
 3566 19ea EE190000 		.4byte	0x19ee
 3567 19ee 06       		.uleb128 0x6
 3568 19ef 660A0000 		.4byte	0xa66
 3569 19f3 38       		.uleb128 0x38
 3570 19f4 2D110000 		.4byte	.LASF361
 3571 19f8 03       		.byte	0x3
 3572 19f9 6001     		.2byte	0x160
 3573 19fb E4000000 		.4byte	0xe4
 3574 19ff 07       		.uleb128 0x7
 3575 1a00 0F1A0000 		.4byte	0x1a0f
 3576 1a04 0F1A0000 		.4byte	0x1a0f
 3577 1a08 08       		.uleb128 0x8
 3578 1a09 EF000000 		.4byte	0xef
 3579 1a0d 00       		.byte	0
 3580 1a0e 00       		.byte	0
 3581 1a0f 06       		.uleb128 0x6
 3582 1a10 2C0D0000 		.4byte	0xd2c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 130


 3583 1a14 38       		.uleb128 0x38
 3584 1a15 630D0000 		.4byte	.LASF362
 3585 1a19 03       		.byte	0x3
 3586 1a1a 6401     		.2byte	0x164
 3587 1a1c 201A0000 		.4byte	0x1a20
 3588 1a20 06       		.uleb128 0x6
 3589 1a21 FF190000 		.4byte	0x19ff
 3590 1a25 39       		.uleb128 0x39
 3591 1a26 A9110000 		.4byte	.LASF363
 3592 1a2a 13       		.byte	0x13
 3593 1a2b 87       		.byte	0x87
 3594 1a2c D00C0000 		.4byte	0xcd0
 3595 1a30 38       		.uleb128 0x38
 3596 1a31 F9030000 		.4byte	.LASF364
 3597 1a35 11       		.byte	0x11
 3598 1a36 FD02     		.2byte	0x2fd
 3599 1a38 D4100000 		.4byte	0x10d4
 3600 1a3c 07       		.uleb128 0x7
 3601 1a3d AD000000 		.4byte	0xad
 3602 1a41 4F1A0000 		.4byte	0x1a4f
 3603 1a45 3A       		.uleb128 0x3a
 3604 1a46 EF000000 		.4byte	0xef
 3605 1a4a BFD40100 		.4byte	0x1d4bf
 3606 1a4e 00       		.byte	0
 3607 1a4f 3B       		.uleb128 0x3b
 3608 1a50 9E130000 		.4byte	.LASF365
 3609 1a54 01       		.byte	0x1
 3610 1a55 18       		.byte	0x18
 3611 1a56 3C1A0000 		.4byte	0x1a3c
 3612 1a5a 05       		.uleb128 0x5
 3613 1a5b 03       		.byte	0x3
 3614 1a5c 00000000 		.4byte	voice
 3615 1a60 3C       		.uleb128 0x3c
 3616 1a61 5A080000 		.4byte	.LASF366
 3617 1a65 5A080000 		.4byte	.LASF366
 3618 1a69 0C       		.byte	0xc
 3619 1a6a 9203     		.2byte	0x392
 3620 1a6c 3C       		.uleb128 0x3c
 3621 1a6d B90F0000 		.4byte	.LASF367
 3622 1a71 B90F0000 		.4byte	.LASF367
 3623 1a75 04       		.byte	0x4
 3624 1a76 3605     		.2byte	0x536
 3625 1a78 3C       		.uleb128 0x3c
 3626 1a79 57070000 		.4byte	.LASF368
 3627 1a7d 57070000 		.4byte	.LASF368
 3628 1a81 04       		.byte	0x4
 3629 1a82 5605     		.2byte	0x556
 3630 1a84 3D       		.uleb128 0x3d
 3631 1a85 FE020000 		.4byte	.LASF369
 3632 1a89 FE020000 		.4byte	.LASF369
 3633 1a8d 03       		.byte	0x3
 3634 1a8e 5E       		.byte	0x5e
 3635 1a8f 3C       		.uleb128 0x3c
 3636 1a90 7B0B0000 		.4byte	.LASF370
 3637 1a94 7B0B0000 		.4byte	.LASF370
 3638 1a98 04       		.byte	0x4
 3639 1a99 3405     		.2byte	0x534
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 131


 3640 1a9b 3E       		.uleb128 0x3e
 3641 1a9c D2060000 		.4byte	.LASF386
 3642 1aa0 0A090000 		.4byte	.LASF387
 3643 1aa4 18       		.byte	0x18
 3644 1aa5 00       		.byte	0
 3645 1aa6 D2060000 		.4byte	.LASF386
 3646 1aaa 3D       		.uleb128 0x3d
 3647 1aab 77060000 		.4byte	.LASF371
 3648 1aaf 77060000 		.4byte	.LASF371
 3649 1ab3 03       		.byte	0x3
 3650 1ab4 57       		.byte	0x57
 3651 1ab5 3D       		.uleb128 0x3d
 3652 1ab6 8E040000 		.4byte	.LASF372
 3653 1aba 8E040000 		.4byte	.LASF372
 3654 1abe 03       		.byte	0x3
 3655 1abf 5A       		.byte	0x5a
 3656 1ac0 3D       		.uleb128 0x3d
 3657 1ac1 120C0000 		.4byte	.LASF373
 3658 1ac5 120C0000 		.4byte	.LASF373
 3659 1ac9 14       		.byte	0x14
 3660 1aca E7       		.byte	0xe7
 3661 1acb 3D       		.uleb128 0x3d
 3662 1acc 220A0000 		.4byte	.LASF374
 3663 1ad0 220A0000 		.4byte	.LASF374
 3664 1ad4 14       		.byte	0x14
 3665 1ad5 BB       		.byte	0xbb
 3666 1ad6 3D       		.uleb128 0x3d
 3667 1ad7 94050000 		.4byte	.LASF375
 3668 1adb 94050000 		.4byte	.LASF375
 3669 1adf 13       		.byte	0x13
 3670 1ae0 31       		.byte	0x31
 3671 1ae1 3D       		.uleb128 0x3d
 3672 1ae2 EF010000 		.4byte	.LASF376
 3673 1ae6 EF010000 		.4byte	.LASF376
 3674 1aea 15       		.byte	0x15
 3675 1aeb 3A       		.byte	0x3a
 3676 1aec 3D       		.uleb128 0x3d
 3677 1aed 7F000000 		.4byte	.LASF377
 3678 1af1 7F000000 		.4byte	.LASF377
 3679 1af5 14       		.byte	0x14
 3680 1af6 B6       		.byte	0xb6
 3681 1af7 3D       		.uleb128 0x3d
 3682 1af8 45110000 		.4byte	.LASF378
 3683 1afc 45110000 		.4byte	.LASF378
 3684 1b00 16       		.byte	0x16
 3685 1b01 55       		.byte	0x55
 3686 1b02 3D       		.uleb128 0x3d
 3687 1b03 D5020000 		.4byte	.LASF379
 3688 1b07 D5020000 		.4byte	.LASF379
 3689 1b0b 16       		.byte	0x16
 3690 1b0c 56       		.byte	0x56
 3691 1b0d 3D       		.uleb128 0x3d
 3692 1b0e 490B0000 		.4byte	.LASF380
 3693 1b12 490B0000 		.4byte	.LASF380
 3694 1b16 15       		.byte	0x15
 3695 1b17 3E       		.byte	0x3e
 3696 1b18 3C       		.uleb128 0x3c
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 132


 3697 1b19 D0000000 		.4byte	.LASF381
 3698 1b1d D0000000 		.4byte	.LASF381
 3699 1b21 17       		.byte	0x17
 3700 1b22 ED03     		.2byte	0x3ed
 3701 1b24 00       		.byte	0
 3702              		.section	.debug_abbrev,"",%progbits
 3703              	.Ldebug_abbrev0:
 3704 0000 01       		.uleb128 0x1
 3705 0001 11       		.uleb128 0x11
 3706 0002 01       		.byte	0x1
 3707 0003 25       		.uleb128 0x25
 3708 0004 0E       		.uleb128 0xe
 3709 0005 13       		.uleb128 0x13
 3710 0006 0B       		.uleb128 0xb
 3711 0007 03       		.uleb128 0x3
 3712 0008 0E       		.uleb128 0xe
 3713 0009 1B       		.uleb128 0x1b
 3714 000a 0E       		.uleb128 0xe
 3715 000b 55       		.uleb128 0x55
 3716 000c 17       		.uleb128 0x17
 3717 000d 11       		.uleb128 0x11
 3718 000e 01       		.uleb128 0x1
 3719 000f 10       		.uleb128 0x10
 3720 0010 17       		.uleb128 0x17
 3721 0011 00       		.byte	0
 3722 0012 00       		.byte	0
 3723 0013 02       		.uleb128 0x2
 3724 0014 24       		.uleb128 0x24
 3725 0015 00       		.byte	0
 3726 0016 0B       		.uleb128 0xb
 3727 0017 0B       		.uleb128 0xb
 3728 0018 3E       		.uleb128 0x3e
 3729 0019 0B       		.uleb128 0xb
 3730 001a 03       		.uleb128 0x3
 3731 001b 0E       		.uleb128 0xe
 3732 001c 00       		.byte	0
 3733 001d 00       		.byte	0
 3734 001e 03       		.uleb128 0x3
 3735 001f 16       		.uleb128 0x16
 3736 0020 00       		.byte	0
 3737 0021 03       		.uleb128 0x3
 3738 0022 0E       		.uleb128 0xe
 3739 0023 3A       		.uleb128 0x3a
 3740 0024 0B       		.uleb128 0xb
 3741 0025 3B       		.uleb128 0x3b
 3742 0026 0B       		.uleb128 0xb
 3743 0027 49       		.uleb128 0x49
 3744 0028 13       		.uleb128 0x13
 3745 0029 00       		.byte	0
 3746 002a 00       		.byte	0
 3747 002b 04       		.uleb128 0x4
 3748 002c 24       		.uleb128 0x24
 3749 002d 00       		.byte	0
 3750 002e 0B       		.uleb128 0xb
 3751 002f 0B       		.uleb128 0xb
 3752 0030 3E       		.uleb128 0x3e
 3753 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 133


 3754 0032 03       		.uleb128 0x3
 3755 0033 08       		.uleb128 0x8
 3756 0034 00       		.byte	0
 3757 0035 00       		.byte	0
 3758 0036 05       		.uleb128 0x5
 3759 0037 35       		.uleb128 0x35
 3760 0038 00       		.byte	0
 3761 0039 49       		.uleb128 0x49
 3762 003a 13       		.uleb128 0x13
 3763 003b 00       		.byte	0
 3764 003c 00       		.byte	0
 3765 003d 06       		.uleb128 0x6
 3766 003e 26       		.uleb128 0x26
 3767 003f 00       		.byte	0
 3768 0040 49       		.uleb128 0x49
 3769 0041 13       		.uleb128 0x13
 3770 0042 00       		.byte	0
 3771 0043 00       		.byte	0
 3772 0044 07       		.uleb128 0x7
 3773 0045 01       		.uleb128 0x1
 3774 0046 01       		.byte	0x1
 3775 0047 49       		.uleb128 0x49
 3776 0048 13       		.uleb128 0x13
 3777 0049 01       		.uleb128 0x1
 3778 004a 13       		.uleb128 0x13
 3779 004b 00       		.byte	0
 3780 004c 00       		.byte	0
 3781 004d 08       		.uleb128 0x8
 3782 004e 21       		.uleb128 0x21
 3783 004f 00       		.byte	0
 3784 0050 49       		.uleb128 0x49
 3785 0051 13       		.uleb128 0x13
 3786 0052 2F       		.uleb128 0x2f
 3787 0053 0B       		.uleb128 0xb
 3788 0054 00       		.byte	0
 3789 0055 00       		.byte	0
 3790 0056 09       		.uleb128 0x9
 3791 0057 13       		.uleb128 0x13
 3792 0058 01       		.byte	0x1
 3793 0059 0B       		.uleb128 0xb
 3794 005a 0B       		.uleb128 0xb
 3795 005b 3A       		.uleb128 0x3a
 3796 005c 0B       		.uleb128 0xb
 3797 005d 3B       		.uleb128 0x3b
 3798 005e 0B       		.uleb128 0xb
 3799 005f 01       		.uleb128 0x1
 3800 0060 13       		.uleb128 0x13
 3801 0061 00       		.byte	0
 3802 0062 00       		.byte	0
 3803 0063 0A       		.uleb128 0xa
 3804 0064 0D       		.uleb128 0xd
 3805 0065 00       		.byte	0
 3806 0066 03       		.uleb128 0x3
 3807 0067 08       		.uleb128 0x8
 3808 0068 3A       		.uleb128 0x3a
 3809 0069 0B       		.uleb128 0xb
 3810 006a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 134


 3811 006b 0B       		.uleb128 0xb
 3812 006c 49       		.uleb128 0x49
 3813 006d 13       		.uleb128 0x13
 3814 006e 38       		.uleb128 0x38
 3815 006f 0B       		.uleb128 0xb
 3816 0070 00       		.byte	0
 3817 0071 00       		.byte	0
 3818 0072 0B       		.uleb128 0xb
 3819 0073 0D       		.uleb128 0xd
 3820 0074 00       		.byte	0
 3821 0075 03       		.uleb128 0x3
 3822 0076 0E       		.uleb128 0xe
 3823 0077 3A       		.uleb128 0x3a
 3824 0078 0B       		.uleb128 0xb
 3825 0079 3B       		.uleb128 0x3b
 3826 007a 0B       		.uleb128 0xb
 3827 007b 49       		.uleb128 0x49
 3828 007c 13       		.uleb128 0x13
 3829 007d 38       		.uleb128 0x38
 3830 007e 0B       		.uleb128 0xb
 3831 007f 00       		.byte	0
 3832 0080 00       		.byte	0
 3833 0081 0C       		.uleb128 0xc
 3834 0082 13       		.uleb128 0x13
 3835 0083 01       		.byte	0x1
 3836 0084 0B       		.uleb128 0xb
 3837 0085 05       		.uleb128 0x5
 3838 0086 3A       		.uleb128 0x3a
 3839 0087 0B       		.uleb128 0xb
 3840 0088 3B       		.uleb128 0x3b
 3841 0089 0B       		.uleb128 0xb
 3842 008a 01       		.uleb128 0x1
 3843 008b 13       		.uleb128 0x13
 3844 008c 00       		.byte	0
 3845 008d 00       		.byte	0
 3846 008e 0D       		.uleb128 0xd
 3847 008f 0D       		.uleb128 0xd
 3848 0090 00       		.byte	0
 3849 0091 03       		.uleb128 0x3
 3850 0092 0E       		.uleb128 0xe
 3851 0093 3A       		.uleb128 0x3a
 3852 0094 0B       		.uleb128 0xb
 3853 0095 3B       		.uleb128 0x3b
 3854 0096 0B       		.uleb128 0xb
 3855 0097 49       		.uleb128 0x49
 3856 0098 13       		.uleb128 0x13
 3857 0099 38       		.uleb128 0x38
 3858 009a 05       		.uleb128 0x5
 3859 009b 00       		.byte	0
 3860 009c 00       		.byte	0
 3861 009d 0E       		.uleb128 0xe
 3862 009e 21       		.uleb128 0x21
 3863 009f 00       		.byte	0
 3864 00a0 49       		.uleb128 0x49
 3865 00a1 13       		.uleb128 0x13
 3866 00a2 2F       		.uleb128 0x2f
 3867 00a3 05       		.uleb128 0x5
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 135


 3868 00a4 00       		.byte	0
 3869 00a5 00       		.byte	0
 3870 00a6 0F       		.uleb128 0xf
 3871 00a7 16       		.uleb128 0x16
 3872 00a8 00       		.byte	0
 3873 00a9 03       		.uleb128 0x3
 3874 00aa 0E       		.uleb128 0xe
 3875 00ab 3A       		.uleb128 0x3a
 3876 00ac 0B       		.uleb128 0xb
 3877 00ad 3B       		.uleb128 0x3b
 3878 00ae 05       		.uleb128 0x5
 3879 00af 49       		.uleb128 0x49
 3880 00b0 13       		.uleb128 0x13
 3881 00b1 00       		.byte	0
 3882 00b2 00       		.byte	0
 3883 00b3 10       		.uleb128 0x10
 3884 00b4 0F       		.uleb128 0xf
 3885 00b5 00       		.byte	0
 3886 00b6 0B       		.uleb128 0xb
 3887 00b7 0B       		.uleb128 0xb
 3888 00b8 49       		.uleb128 0x49
 3889 00b9 13       		.uleb128 0x13
 3890 00ba 00       		.byte	0
 3891 00bb 00       		.byte	0
 3892 00bc 11       		.uleb128 0x11
 3893 00bd 15       		.uleb128 0x15
 3894 00be 00       		.byte	0
 3895 00bf 27       		.uleb128 0x27
 3896 00c0 19       		.uleb128 0x19
 3897 00c1 00       		.byte	0
 3898 00c2 00       		.byte	0
 3899 00c3 12       		.uleb128 0x12
 3900 00c4 0F       		.uleb128 0xf
 3901 00c5 00       		.byte	0
 3902 00c6 0B       		.uleb128 0xb
 3903 00c7 0B       		.uleb128 0xb
 3904 00c8 00       		.byte	0
 3905 00c9 00       		.byte	0
 3906 00ca 13       		.uleb128 0x13
 3907 00cb 04       		.uleb128 0x4
 3908 00cc 01       		.byte	0x1
 3909 00cd 0B       		.uleb128 0xb
 3910 00ce 0B       		.uleb128 0xb
 3911 00cf 49       		.uleb128 0x49
 3912 00d0 13       		.uleb128 0x13
 3913 00d1 3A       		.uleb128 0x3a
 3914 00d2 0B       		.uleb128 0xb
 3915 00d3 3B       		.uleb128 0x3b
 3916 00d4 05       		.uleb128 0x5
 3917 00d5 01       		.uleb128 0x1
 3918 00d6 13       		.uleb128 0x13
 3919 00d7 00       		.byte	0
 3920 00d8 00       		.byte	0
 3921 00d9 14       		.uleb128 0x14
 3922 00da 28       		.uleb128 0x28
 3923 00db 00       		.byte	0
 3924 00dc 03       		.uleb128 0x3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 136


 3925 00dd 0E       		.uleb128 0xe
 3926 00de 1C       		.uleb128 0x1c
 3927 00df 0B       		.uleb128 0xb
 3928 00e0 00       		.byte	0
 3929 00e1 00       		.byte	0
 3930 00e2 15       		.uleb128 0x15
 3931 00e3 13       		.uleb128 0x13
 3932 00e4 01       		.byte	0x1
 3933 00e5 0B       		.uleb128 0xb
 3934 00e6 0B       		.uleb128 0xb
 3935 00e7 3A       		.uleb128 0x3a
 3936 00e8 0B       		.uleb128 0xb
 3937 00e9 3B       		.uleb128 0x3b
 3938 00ea 05       		.uleb128 0x5
 3939 00eb 01       		.uleb128 0x1
 3940 00ec 13       		.uleb128 0x13
 3941 00ed 00       		.byte	0
 3942 00ee 00       		.byte	0
 3943 00ef 16       		.uleb128 0x16
 3944 00f0 0D       		.uleb128 0xd
 3945 00f1 00       		.byte	0
 3946 00f2 03       		.uleb128 0x3
 3947 00f3 0E       		.uleb128 0xe
 3948 00f4 3A       		.uleb128 0x3a
 3949 00f5 0B       		.uleb128 0xb
 3950 00f6 3B       		.uleb128 0x3b
 3951 00f7 05       		.uleb128 0x5
 3952 00f8 49       		.uleb128 0x49
 3953 00f9 13       		.uleb128 0x13
 3954 00fa 38       		.uleb128 0x38
 3955 00fb 0B       		.uleb128 0xb
 3956 00fc 00       		.byte	0
 3957 00fd 00       		.byte	0
 3958 00fe 17       		.uleb128 0x17
 3959 00ff 15       		.uleb128 0x15
 3960 0100 01       		.byte	0x1
 3961 0101 27       		.uleb128 0x27
 3962 0102 19       		.uleb128 0x19
 3963 0103 01       		.uleb128 0x1
 3964 0104 13       		.uleb128 0x13
 3965 0105 00       		.byte	0
 3966 0106 00       		.byte	0
 3967 0107 18       		.uleb128 0x18
 3968 0108 05       		.uleb128 0x5
 3969 0109 00       		.byte	0
 3970 010a 49       		.uleb128 0x49
 3971 010b 13       		.uleb128 0x13
 3972 010c 00       		.byte	0
 3973 010d 00       		.byte	0
 3974 010e 19       		.uleb128 0x19
 3975 010f 13       		.uleb128 0x13
 3976 0110 01       		.byte	0x1
 3977 0111 03       		.uleb128 0x3
 3978 0112 0E       		.uleb128 0xe
 3979 0113 0B       		.uleb128 0xb
 3980 0114 0B       		.uleb128 0xb
 3981 0115 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 137


 3982 0116 0B       		.uleb128 0xb
 3983 0117 3B       		.uleb128 0x3b
 3984 0118 05       		.uleb128 0x5
 3985 0119 01       		.uleb128 0x1
 3986 011a 13       		.uleb128 0x13
 3987 011b 00       		.byte	0
 3988 011c 00       		.byte	0
 3989 011d 1A       		.uleb128 0x1a
 3990 011e 17       		.uleb128 0x17
 3991 011f 01       		.byte	0x1
 3992 0120 0B       		.uleb128 0xb
 3993 0121 0B       		.uleb128 0xb
 3994 0122 3A       		.uleb128 0x3a
 3995 0123 0B       		.uleb128 0xb
 3996 0124 3B       		.uleb128 0x3b
 3997 0125 0B       		.uleb128 0xb
 3998 0126 01       		.uleb128 0x1
 3999 0127 13       		.uleb128 0x13
 4000 0128 00       		.byte	0
 4001 0129 00       		.byte	0
 4002 012a 1B       		.uleb128 0x1b
 4003 012b 0D       		.uleb128 0xd
 4004 012c 00       		.byte	0
 4005 012d 03       		.uleb128 0x3
 4006 012e 0E       		.uleb128 0xe
 4007 012f 3A       		.uleb128 0x3a
 4008 0130 0B       		.uleb128 0xb
 4009 0131 3B       		.uleb128 0x3b
 4010 0132 0B       		.uleb128 0xb
 4011 0133 49       		.uleb128 0x49
 4012 0134 13       		.uleb128 0x13
 4013 0135 00       		.byte	0
 4014 0136 00       		.byte	0
 4015 0137 1C       		.uleb128 0x1c
 4016 0138 13       		.uleb128 0x13
 4017 0139 01       		.byte	0x1
 4018 013a 03       		.uleb128 0x3
 4019 013b 0E       		.uleb128 0xe
 4020 013c 0B       		.uleb128 0xb
 4021 013d 0B       		.uleb128 0xb
 4022 013e 3A       		.uleb128 0x3a
 4023 013f 0B       		.uleb128 0xb
 4024 0140 3B       		.uleb128 0x3b
 4025 0141 0B       		.uleb128 0xb
 4026 0142 01       		.uleb128 0x1
 4027 0143 13       		.uleb128 0x13
 4028 0144 00       		.byte	0
 4029 0145 00       		.byte	0
 4030 0146 1D       		.uleb128 0x1d
 4031 0147 13       		.uleb128 0x13
 4032 0148 01       		.byte	0x1
 4033 0149 03       		.uleb128 0x3
 4034 014a 0E       		.uleb128 0xe
 4035 014b 0B       		.uleb128 0xb
 4036 014c 05       		.uleb128 0x5
 4037 014d 3A       		.uleb128 0x3a
 4038 014e 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 138


 4039 014f 3B       		.uleb128 0x3b
 4040 0150 0B       		.uleb128 0xb
 4041 0151 01       		.uleb128 0x1
 4042 0152 13       		.uleb128 0x13
 4043 0153 00       		.byte	0
 4044 0154 00       		.byte	0
 4045 0155 1E       		.uleb128 0x1e
 4046 0156 15       		.uleb128 0x15
 4047 0157 01       		.byte	0x1
 4048 0158 27       		.uleb128 0x27
 4049 0159 19       		.uleb128 0x19
 4050 015a 49       		.uleb128 0x49
 4051 015b 13       		.uleb128 0x13
 4052 015c 01       		.uleb128 0x1
 4053 015d 13       		.uleb128 0x13
 4054 015e 00       		.byte	0
 4055 015f 00       		.byte	0
 4056 0160 1F       		.uleb128 0x1f
 4057 0161 13       		.uleb128 0x13
 4058 0162 01       		.byte	0x1
 4059 0163 03       		.uleb128 0x3
 4060 0164 0E       		.uleb128 0xe
 4061 0165 0B       		.uleb128 0xb
 4062 0166 05       		.uleb128 0x5
 4063 0167 3A       		.uleb128 0x3a
 4064 0168 0B       		.uleb128 0xb
 4065 0169 3B       		.uleb128 0x3b
 4066 016a 05       		.uleb128 0x5
 4067 016b 01       		.uleb128 0x1
 4068 016c 13       		.uleb128 0x13
 4069 016d 00       		.byte	0
 4070 016e 00       		.byte	0
 4071 016f 20       		.uleb128 0x20
 4072 0170 0D       		.uleb128 0xd
 4073 0171 00       		.byte	0
 4074 0172 03       		.uleb128 0x3
 4075 0173 0E       		.uleb128 0xe
 4076 0174 3A       		.uleb128 0x3a
 4077 0175 0B       		.uleb128 0xb
 4078 0176 3B       		.uleb128 0x3b
 4079 0177 05       		.uleb128 0x5
 4080 0178 49       		.uleb128 0x49
 4081 0179 13       		.uleb128 0x13
 4082 017a 38       		.uleb128 0x38
 4083 017b 05       		.uleb128 0x5
 4084 017c 00       		.byte	0
 4085 017d 00       		.byte	0
 4086 017e 21       		.uleb128 0x21
 4087 017f 17       		.uleb128 0x17
 4088 0180 01       		.byte	0x1
 4089 0181 0B       		.uleb128 0xb
 4090 0182 0B       		.uleb128 0xb
 4091 0183 3A       		.uleb128 0x3a
 4092 0184 0B       		.uleb128 0xb
 4093 0185 3B       		.uleb128 0x3b
 4094 0186 05       		.uleb128 0x5
 4095 0187 01       		.uleb128 0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 139


 4096 0188 13       		.uleb128 0x13
 4097 0189 00       		.byte	0
 4098 018a 00       		.byte	0
 4099 018b 22       		.uleb128 0x22
 4100 018c 0D       		.uleb128 0xd
 4101 018d 00       		.byte	0
 4102 018e 03       		.uleb128 0x3
 4103 018f 0E       		.uleb128 0xe
 4104 0190 3A       		.uleb128 0x3a
 4105 0191 0B       		.uleb128 0xb
 4106 0192 3B       		.uleb128 0x3b
 4107 0193 05       		.uleb128 0x5
 4108 0194 49       		.uleb128 0x49
 4109 0195 13       		.uleb128 0x13
 4110 0196 00       		.byte	0
 4111 0197 00       		.byte	0
 4112 0198 23       		.uleb128 0x23
 4113 0199 2E       		.uleb128 0x2e
 4114 019a 01       		.byte	0x1
 4115 019b 03       		.uleb128 0x3
 4116 019c 0E       		.uleb128 0xe
 4117 019d 3A       		.uleb128 0x3a
 4118 019e 0B       		.uleb128 0xb
 4119 019f 3B       		.uleb128 0x3b
 4120 01a0 05       		.uleb128 0x5
 4121 01a1 27       		.uleb128 0x27
 4122 01a2 19       		.uleb128 0x19
 4123 01a3 20       		.uleb128 0x20
 4124 01a4 0B       		.uleb128 0xb
 4125 01a5 01       		.uleb128 0x1
 4126 01a6 13       		.uleb128 0x13
 4127 01a7 00       		.byte	0
 4128 01a8 00       		.byte	0
 4129 01a9 24       		.uleb128 0x24
 4130 01aa 05       		.uleb128 0x5
 4131 01ab 00       		.byte	0
 4132 01ac 03       		.uleb128 0x3
 4133 01ad 0E       		.uleb128 0xe
 4134 01ae 3A       		.uleb128 0x3a
 4135 01af 0B       		.uleb128 0xb
 4136 01b0 3B       		.uleb128 0x3b
 4137 01b1 05       		.uleb128 0x5
 4138 01b2 49       		.uleb128 0x49
 4139 01b3 13       		.uleb128 0x13
 4140 01b4 00       		.byte	0
 4141 01b5 00       		.byte	0
 4142 01b6 25       		.uleb128 0x25
 4143 01b7 2E       		.uleb128 0x2e
 4144 01b8 00       		.byte	0
 4145 01b9 03       		.uleb128 0x3
 4146 01ba 0E       		.uleb128 0xe
 4147 01bb 3A       		.uleb128 0x3a
 4148 01bc 0B       		.uleb128 0xb
 4149 01bd 3B       		.uleb128 0x3b
 4150 01be 05       		.uleb128 0x5
 4151 01bf 27       		.uleb128 0x27
 4152 01c0 19       		.uleb128 0x19
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 140


 4153 01c1 20       		.uleb128 0x20
 4154 01c2 0B       		.uleb128 0xb
 4155 01c3 00       		.byte	0
 4156 01c4 00       		.byte	0
 4157 01c5 26       		.uleb128 0x26
 4158 01c6 2E       		.uleb128 0x2e
 4159 01c7 00       		.byte	0
 4160 01c8 03       		.uleb128 0x3
 4161 01c9 0E       		.uleb128 0xe
 4162 01ca 3A       		.uleb128 0x3a
 4163 01cb 0B       		.uleb128 0xb
 4164 01cc 3B       		.uleb128 0x3b
 4165 01cd 0B       		.uleb128 0xb
 4166 01ce 27       		.uleb128 0x27
 4167 01cf 19       		.uleb128 0x19
 4168 01d0 20       		.uleb128 0x20
 4169 01d1 0B       		.uleb128 0xb
 4170 01d2 00       		.byte	0
 4171 01d3 00       		.byte	0
 4172 01d4 27       		.uleb128 0x27
 4173 01d5 2E       		.uleb128 0x2e
 4174 01d6 01       		.byte	0x1
 4175 01d7 03       		.uleb128 0x3
 4176 01d8 0E       		.uleb128 0xe
 4177 01d9 3A       		.uleb128 0x3a
 4178 01da 0B       		.uleb128 0xb
 4179 01db 3B       		.uleb128 0x3b
 4180 01dc 05       		.uleb128 0x5
 4181 01dd 27       		.uleb128 0x27
 4182 01de 19       		.uleb128 0x19
 4183 01df 49       		.uleb128 0x49
 4184 01e0 13       		.uleb128 0x13
 4185 01e1 20       		.uleb128 0x20
 4186 01e2 0B       		.uleb128 0xb
 4187 01e3 01       		.uleb128 0x1
 4188 01e4 13       		.uleb128 0x13
 4189 01e5 00       		.byte	0
 4190 01e6 00       		.byte	0
 4191 01e7 28       		.uleb128 0x28
 4192 01e8 2E       		.uleb128 0x2e
 4193 01e9 01       		.byte	0x1
 4194 01ea 3F       		.uleb128 0x3f
 4195 01eb 19       		.uleb128 0x19
 4196 01ec 03       		.uleb128 0x3
 4197 01ed 0E       		.uleb128 0xe
 4198 01ee 3A       		.uleb128 0x3a
 4199 01ef 0B       		.uleb128 0xb
 4200 01f0 3B       		.uleb128 0x3b
 4201 01f1 0B       		.uleb128 0xb
 4202 01f2 49       		.uleb128 0x49
 4203 01f3 13       		.uleb128 0x13
 4204 01f4 11       		.uleb128 0x11
 4205 01f5 01       		.uleb128 0x1
 4206 01f6 12       		.uleb128 0x12
 4207 01f7 06       		.uleb128 0x6
 4208 01f8 40       		.uleb128 0x40
 4209 01f9 18       		.uleb128 0x18
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 141


 4210 01fa 9742     		.uleb128 0x2117
 4211 01fc 19       		.uleb128 0x19
 4212 01fd 01       		.uleb128 0x1
 4213 01fe 13       		.uleb128 0x13
 4214 01ff 00       		.byte	0
 4215 0200 00       		.byte	0
 4216 0201 29       		.uleb128 0x29
 4217 0202 1D       		.uleb128 0x1d
 4218 0203 01       		.byte	0x1
 4219 0204 31       		.uleb128 0x31
 4220 0205 13       		.uleb128 0x13
 4221 0206 11       		.uleb128 0x11
 4222 0207 01       		.uleb128 0x1
 4223 0208 12       		.uleb128 0x12
 4224 0209 06       		.uleb128 0x6
 4225 020a 58       		.uleb128 0x58
 4226 020b 0B       		.uleb128 0xb
 4227 020c 59       		.uleb128 0x59
 4228 020d 0B       		.uleb128 0xb
 4229 020e 01       		.uleb128 0x1
 4230 020f 13       		.uleb128 0x13
 4231 0210 00       		.byte	0
 4232 0211 00       		.byte	0
 4233 0212 2A       		.uleb128 0x2a
 4234 0213 05       		.uleb128 0x5
 4235 0214 00       		.byte	0
 4236 0215 31       		.uleb128 0x31
 4237 0216 13       		.uleb128 0x13
 4238 0217 02       		.uleb128 0x2
 4239 0218 17       		.uleb128 0x17
 4240 0219 00       		.byte	0
 4241 021a 00       		.byte	0
 4242 021b 2B       		.uleb128 0x2b
 4243 021c 0B       		.uleb128 0xb
 4244 021d 01       		.byte	0x1
 4245 021e 11       		.uleb128 0x11
 4246 021f 01       		.uleb128 0x1
 4247 0220 12       		.uleb128 0x12
 4248 0221 06       		.uleb128 0x6
 4249 0222 01       		.uleb128 0x1
 4250 0223 13       		.uleb128 0x13
 4251 0224 00       		.byte	0
 4252 0225 00       		.byte	0
 4253 0226 2C       		.uleb128 0x2c
 4254 0227 34       		.uleb128 0x34
 4255 0228 00       		.byte	0
 4256 0229 03       		.uleb128 0x3
 4257 022a 08       		.uleb128 0x8
 4258 022b 3A       		.uleb128 0x3a
 4259 022c 0B       		.uleb128 0xb
 4260 022d 3B       		.uleb128 0x3b
 4261 022e 0B       		.uleb128 0xb
 4262 022f 49       		.uleb128 0x49
 4263 0230 13       		.uleb128 0x13
 4264 0231 02       		.uleb128 0x2
 4265 0232 17       		.uleb128 0x17
 4266 0233 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 142


 4267 0234 00       		.byte	0
 4268 0235 2D       		.uleb128 0x2d
 4269 0236 0B       		.uleb128 0xb
 4270 0237 01       		.byte	0x1
 4271 0238 11       		.uleb128 0x11
 4272 0239 01       		.uleb128 0x1
 4273 023a 12       		.uleb128 0x12
 4274 023b 06       		.uleb128 0x6
 4275 023c 00       		.byte	0
 4276 023d 00       		.byte	0
 4277 023e 2E       		.uleb128 0x2e
 4278 023f 34       		.uleb128 0x34
 4279 0240 00       		.byte	0
 4280 0241 03       		.uleb128 0x3
 4281 0242 0E       		.uleb128 0xe
 4282 0243 3A       		.uleb128 0x3a
 4283 0244 0B       		.uleb128 0xb
 4284 0245 3B       		.uleb128 0x3b
 4285 0246 0B       		.uleb128 0xb
 4286 0247 49       		.uleb128 0x49
 4287 0248 13       		.uleb128 0x13
 4288 0249 00       		.byte	0
 4289 024a 00       		.byte	0
 4290 024b 2F       		.uleb128 0x2f
 4291 024c 898201   		.uleb128 0x4109
 4292 024f 01       		.byte	0x1
 4293 0250 11       		.uleb128 0x11
 4294 0251 01       		.uleb128 0x1
 4295 0252 31       		.uleb128 0x31
 4296 0253 13       		.uleb128 0x13
 4297 0254 01       		.uleb128 0x1
 4298 0255 13       		.uleb128 0x13
 4299 0256 00       		.byte	0
 4300 0257 00       		.byte	0
 4301 0258 30       		.uleb128 0x30
 4302 0259 8A8201   		.uleb128 0x410a
 4303 025c 00       		.byte	0
 4304 025d 02       		.uleb128 0x2
 4305 025e 18       		.uleb128 0x18
 4306 025f 9142     		.uleb128 0x2111
 4307 0261 18       		.uleb128 0x18
 4308 0262 00       		.byte	0
 4309 0263 00       		.byte	0
 4310 0264 31       		.uleb128 0x31
 4311 0265 898201   		.uleb128 0x4109
 4312 0268 01       		.byte	0x1
 4313 0269 11       		.uleb128 0x11
 4314 026a 01       		.uleb128 0x1
 4315 026b 31       		.uleb128 0x31
 4316 026c 13       		.uleb128 0x13
 4317 026d 00       		.byte	0
 4318 026e 00       		.byte	0
 4319 026f 32       		.uleb128 0x32
 4320 0270 05       		.uleb128 0x5
 4321 0271 00       		.byte	0
 4322 0272 31       		.uleb128 0x31
 4323 0273 13       		.uleb128 0x13
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 143


 4324 0274 00       		.byte	0
 4325 0275 00       		.byte	0
 4326 0276 33       		.uleb128 0x33
 4327 0277 1D       		.uleb128 0x1d
 4328 0278 01       		.byte	0x1
 4329 0279 31       		.uleb128 0x31
 4330 027a 13       		.uleb128 0x13
 4331 027b 11       		.uleb128 0x11
 4332 027c 01       		.uleb128 0x1
 4333 027d 12       		.uleb128 0x12
 4334 027e 06       		.uleb128 0x6
 4335 027f 58       		.uleb128 0x58
 4336 0280 0B       		.uleb128 0xb
 4337 0281 59       		.uleb128 0x59
 4338 0282 05       		.uleb128 0x5
 4339 0283 00       		.byte	0
 4340 0284 00       		.byte	0
 4341 0285 34       		.uleb128 0x34
 4342 0286 898201   		.uleb128 0x4109
 4343 0289 00       		.byte	0
 4344 028a 11       		.uleb128 0x11
 4345 028b 01       		.uleb128 0x1
 4346 028c 31       		.uleb128 0x31
 4347 028d 13       		.uleb128 0x13
 4348 028e 00       		.byte	0
 4349 028f 00       		.byte	0
 4350 0290 35       		.uleb128 0x35
 4351 0291 34       		.uleb128 0x34
 4352 0292 00       		.byte	0
 4353 0293 03       		.uleb128 0x3
 4354 0294 0E       		.uleb128 0xe
 4355 0295 3A       		.uleb128 0x3a
 4356 0296 0B       		.uleb128 0xb
 4357 0297 3B       		.uleb128 0x3b
 4358 0298 0B       		.uleb128 0xb
 4359 0299 49       		.uleb128 0x49
 4360 029a 13       		.uleb128 0x13
 4361 029b 02       		.uleb128 0x2
 4362 029c 18       		.uleb128 0x18
 4363 029d 00       		.byte	0
 4364 029e 00       		.byte	0
 4365 029f 36       		.uleb128 0x36
 4366 02a0 2E       		.uleb128 0x2e
 4367 02a1 01       		.byte	0x1
 4368 02a2 3F       		.uleb128 0x3f
 4369 02a3 19       		.uleb128 0x19
 4370 02a4 03       		.uleb128 0x3
 4371 02a5 0E       		.uleb128 0xe
 4372 02a6 3A       		.uleb128 0x3a
 4373 02a7 0B       		.uleb128 0xb
 4374 02a8 3B       		.uleb128 0x3b
 4375 02a9 0B       		.uleb128 0xb
 4376 02aa 27       		.uleb128 0x27
 4377 02ab 19       		.uleb128 0x19
 4378 02ac 49       		.uleb128 0x49
 4379 02ad 13       		.uleb128 0x13
 4380 02ae 8701     		.uleb128 0x87
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 144


 4381 02b0 19       		.uleb128 0x19
 4382 02b1 11       		.uleb128 0x11
 4383 02b2 01       		.uleb128 0x1
 4384 02b3 12       		.uleb128 0x12
 4385 02b4 06       		.uleb128 0x6
 4386 02b5 40       		.uleb128 0x40
 4387 02b6 18       		.uleb128 0x18
 4388 02b7 9742     		.uleb128 0x2117
 4389 02b9 19       		.uleb128 0x19
 4390 02ba 01       		.uleb128 0x1
 4391 02bb 13       		.uleb128 0x13
 4392 02bc 00       		.byte	0
 4393 02bd 00       		.byte	0
 4394 02be 37       		.uleb128 0x37
 4395 02bf 1D       		.uleb128 0x1d
 4396 02c0 00       		.byte	0
 4397 02c1 31       		.uleb128 0x31
 4398 02c2 13       		.uleb128 0x13
 4399 02c3 11       		.uleb128 0x11
 4400 02c4 01       		.uleb128 0x1
 4401 02c5 12       		.uleb128 0x12
 4402 02c6 06       		.uleb128 0x6
 4403 02c7 58       		.uleb128 0x58
 4404 02c8 0B       		.uleb128 0xb
 4405 02c9 59       		.uleb128 0x59
 4406 02ca 0B       		.uleb128 0xb
 4407 02cb 00       		.byte	0
 4408 02cc 00       		.byte	0
 4409 02cd 38       		.uleb128 0x38
 4410 02ce 34       		.uleb128 0x34
 4411 02cf 00       		.byte	0
 4412 02d0 03       		.uleb128 0x3
 4413 02d1 0E       		.uleb128 0xe
 4414 02d2 3A       		.uleb128 0x3a
 4415 02d3 0B       		.uleb128 0xb
 4416 02d4 3B       		.uleb128 0x3b
 4417 02d5 05       		.uleb128 0x5
 4418 02d6 49       		.uleb128 0x49
 4419 02d7 13       		.uleb128 0x13
 4420 02d8 3F       		.uleb128 0x3f
 4421 02d9 19       		.uleb128 0x19
 4422 02da 3C       		.uleb128 0x3c
 4423 02db 19       		.uleb128 0x19
 4424 02dc 00       		.byte	0
 4425 02dd 00       		.byte	0
 4426 02de 39       		.uleb128 0x39
 4427 02df 34       		.uleb128 0x34
 4428 02e0 00       		.byte	0
 4429 02e1 03       		.uleb128 0x3
 4430 02e2 0E       		.uleb128 0xe
 4431 02e3 3A       		.uleb128 0x3a
 4432 02e4 0B       		.uleb128 0xb
 4433 02e5 3B       		.uleb128 0x3b
 4434 02e6 0B       		.uleb128 0xb
 4435 02e7 49       		.uleb128 0x49
 4436 02e8 13       		.uleb128 0x13
 4437 02e9 3F       		.uleb128 0x3f
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 145


 4438 02ea 19       		.uleb128 0x19
 4439 02eb 3C       		.uleb128 0x3c
 4440 02ec 19       		.uleb128 0x19
 4441 02ed 00       		.byte	0
 4442 02ee 00       		.byte	0
 4443 02ef 3A       		.uleb128 0x3a
 4444 02f0 21       		.uleb128 0x21
 4445 02f1 00       		.byte	0
 4446 02f2 49       		.uleb128 0x49
 4447 02f3 13       		.uleb128 0x13
 4448 02f4 2F       		.uleb128 0x2f
 4449 02f5 06       		.uleb128 0x6
 4450 02f6 00       		.byte	0
 4451 02f7 00       		.byte	0
 4452 02f8 3B       		.uleb128 0x3b
 4453 02f9 34       		.uleb128 0x34
 4454 02fa 00       		.byte	0
 4455 02fb 03       		.uleb128 0x3
 4456 02fc 0E       		.uleb128 0xe
 4457 02fd 3A       		.uleb128 0x3a
 4458 02fe 0B       		.uleb128 0xb
 4459 02ff 3B       		.uleb128 0x3b
 4460 0300 0B       		.uleb128 0xb
 4461 0301 49       		.uleb128 0x49
 4462 0302 13       		.uleb128 0x13
 4463 0303 3F       		.uleb128 0x3f
 4464 0304 19       		.uleb128 0x19
 4465 0305 02       		.uleb128 0x2
 4466 0306 18       		.uleb128 0x18
 4467 0307 00       		.byte	0
 4468 0308 00       		.byte	0
 4469 0309 3C       		.uleb128 0x3c
 4470 030a 2E       		.uleb128 0x2e
 4471 030b 00       		.byte	0
 4472 030c 3F       		.uleb128 0x3f
 4473 030d 19       		.uleb128 0x19
 4474 030e 3C       		.uleb128 0x3c
 4475 030f 19       		.uleb128 0x19
 4476 0310 6E       		.uleb128 0x6e
 4477 0311 0E       		.uleb128 0xe
 4478 0312 03       		.uleb128 0x3
 4479 0313 0E       		.uleb128 0xe
 4480 0314 3A       		.uleb128 0x3a
 4481 0315 0B       		.uleb128 0xb
 4482 0316 3B       		.uleb128 0x3b
 4483 0317 05       		.uleb128 0x5
 4484 0318 00       		.byte	0
 4485 0319 00       		.byte	0
 4486 031a 3D       		.uleb128 0x3d
 4487 031b 2E       		.uleb128 0x2e
 4488 031c 00       		.byte	0
 4489 031d 3F       		.uleb128 0x3f
 4490 031e 19       		.uleb128 0x19
 4491 031f 3C       		.uleb128 0x3c
 4492 0320 19       		.uleb128 0x19
 4493 0321 6E       		.uleb128 0x6e
 4494 0322 0E       		.uleb128 0xe
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 146


 4495 0323 03       		.uleb128 0x3
 4496 0324 0E       		.uleb128 0xe
 4497 0325 3A       		.uleb128 0x3a
 4498 0326 0B       		.uleb128 0xb
 4499 0327 3B       		.uleb128 0x3b
 4500 0328 0B       		.uleb128 0xb
 4501 0329 00       		.byte	0
 4502 032a 00       		.byte	0
 4503 032b 3E       		.uleb128 0x3e
 4504 032c 2E       		.uleb128 0x2e
 4505 032d 00       		.byte	0
 4506 032e 3F       		.uleb128 0x3f
 4507 032f 19       		.uleb128 0x19
 4508 0330 3C       		.uleb128 0x3c
 4509 0331 19       		.uleb128 0x19
 4510 0332 6E       		.uleb128 0x6e
 4511 0333 0E       		.uleb128 0xe
 4512 0334 03       		.uleb128 0x3
 4513 0335 0E       		.uleb128 0xe
 4514 0336 3A       		.uleb128 0x3a
 4515 0337 0B       		.uleb128 0xb
 4516 0338 3B       		.uleb128 0x3b
 4517 0339 0B       		.uleb128 0xb
 4518 033a 6E       		.uleb128 0x6e
 4519 033b 0E       		.uleb128 0xe
 4520 033c 00       		.byte	0
 4521 033d 00       		.byte	0
 4522 033e 00       		.byte	0
 4523              		.section	.debug_loc,"",%progbits
 4524              	.Ldebug_loc0:
 4525              	.LLST0:
 4526 0000 02000000 		.4byte	.LVL0
 4527 0004 08000000 		.4byte	.LVL1
 4528 0008 0200     		.2byte	0x2
 4529 000a 30       		.byte	0x30
 4530 000b 9F       		.byte	0x9f
 4531 000c 00000000 		.4byte	0
 4532 0010 00000000 		.4byte	0
 4533              	.LLST1:
 4534 0014 02000000 		.4byte	.LVL0
 4535 0018 08000000 		.4byte	.LVL1
 4536 001c 0200     		.2byte	0x2
 4537 001e 31       		.byte	0x31
 4538 001f 9F       		.byte	0x9f
 4539 0020 00000000 		.4byte	0
 4540 0024 00000000 		.4byte	0
 4541              	.LLST2:
 4542 0028 02000000 		.4byte	.LVL0
 4543 002c 08000000 		.4byte	.LVL1
 4544 0030 0600     		.2byte	0x6
 4545 0032 0C       		.byte	0xc
 4546 0033 80053240 		.4byte	0x40320580
 4547 0037 9F       		.byte	0x9f
 4548 0038 00000000 		.4byte	0
 4549 003c 00000000 		.4byte	0
 4550              	.LLST3:
 4551 0040 16000000 		.4byte	.LVL4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 147


 4552 0044 1A000000 		.4byte	.LVL5
 4553 0048 0200     		.2byte	0x2
 4554 004a 30       		.byte	0x30
 4555 004b 9F       		.byte	0x9f
 4556 004c 1A000000 		.4byte	.LVL5
 4557 0050 98000000 		.4byte	.LVL18
 4558 0054 0100     		.2byte	0x1
 4559 0056 54       		.byte	0x54
 4560 0057 00000000 		.4byte	0
 4561 005b 00000000 		.4byte	0
 4562              	.LLST4:
 4563 005f 20000000 		.4byte	.LVL6
 4564 0063 46000000 		.4byte	.LVL9
 4565 0067 0200     		.2byte	0x2
 4566 0069 30       		.byte	0x30
 4567 006a 9F       		.byte	0x9f
 4568 006b 00000000 		.4byte	0
 4569 006f 00000000 		.4byte	0
 4570              	.LLST5:
 4571 0073 46000000 		.4byte	.LVL9
 4572 0077 6C000000 		.4byte	.LVL11
 4573 007b 0200     		.2byte	0x2
 4574 007d 30       		.byte	0x30
 4575 007e 9F       		.byte	0x9f
 4576 007f 00000000 		.4byte	0
 4577 0083 00000000 		.4byte	0
 4578              	.LLST6:
 4579 0087 7A000000 		.4byte	.LVL13
 4580 008b 84000000 		.4byte	.LVL14
 4581 008f 0600     		.2byte	0x6
 4582 0091 0C       		.byte	0xc
 4583 0092 00001D41 		.4byte	0x411d0000
 4584 0096 9F       		.byte	0x9f
 4585 0097 00000000 		.4byte	0
 4586 009b 00000000 		.4byte	0
 4587              	.LLST7:
 4588 009f 88000000 		.4byte	.LVL15
 4589 00a3 8E000000 		.4byte	.LVL16
 4590 00a7 0200     		.2byte	0x2
 4591 00a9 31       		.byte	0x31
 4592 00aa 9F       		.byte	0x9f
 4593 00ab 00000000 		.4byte	0
 4594 00af 00000000 		.4byte	0
 4595              	.LLST9:
 4596 00b3 88000000 		.4byte	.LVL15
 4597 00b7 8E000000 		.4byte	.LVL16
 4598 00bb 0600     		.2byte	0x6
 4599 00bd 0C       		.byte	0xc
 4600 00be 80053240 		.4byte	0x40320580
 4601 00c2 9F       		.byte	0x9f
 4602 00c3 00000000 		.4byte	0
 4603 00c7 00000000 		.4byte	0
 4604              	.LLST10:
 4605 00cb 04000000 		.4byte	.LVL19
 4606 00cf 0A000000 		.4byte	.LVL20
 4607 00d3 0200     		.2byte	0x2
 4608 00d5 30       		.byte	0x30
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 148


 4609 00d6 9F       		.byte	0x9f
 4610 00d7 00000000 		.4byte	0
 4611 00db 00000000 		.4byte	0
 4612              	.LLST11:
 4613 00df 04000000 		.4byte	.LVL19
 4614 00e3 0A000000 		.4byte	.LVL20
 4615 00e7 0200     		.2byte	0x2
 4616 00e9 33       		.byte	0x33
 4617 00ea 9F       		.byte	0x9f
 4618 00eb 00000000 		.4byte	0
 4619 00ef 00000000 		.4byte	0
 4620              	.LLST12:
 4621 00f3 04000000 		.4byte	.LVL19
 4622 00f7 0A000000 		.4byte	.LVL20
 4623 00fb 0600     		.2byte	0x6
 4624 00fd 0C       		.byte	0xc
 4625 00fe 00003240 		.4byte	0x40320000
 4626 0102 9F       		.byte	0x9f
 4627 0103 00000000 		.4byte	0
 4628 0107 00000000 		.4byte	0
 4629              	.LLST13:
 4630 010b 10000000 		.4byte	.LVL21
 4631 010f 14000000 		.4byte	.LVL22
 4632 0113 0200     		.2byte	0x2
 4633 0115 30       		.byte	0x30
 4634 0116 9F       		.byte	0x9f
 4635 0117 14000000 		.4byte	.LVL22
 4636 011b 42000000 		.4byte	.LVL29
 4637 011f 0100     		.2byte	0x1
 4638 0121 54       		.byte	0x54
 4639 0122 00000000 		.4byte	0
 4640 0126 00000000 		.4byte	0
 4641              	.LLST14:
 4642 012a 30000000 		.4byte	.LVL26
 4643 012e 36000000 		.4byte	.LVL27
 4644 0132 0200     		.2byte	0x2
 4645 0134 31       		.byte	0x31
 4646 0135 9F       		.byte	0x9f
 4647 0136 00000000 		.4byte	0
 4648 013a 00000000 		.4byte	0
 4649              	.LLST15:
 4650 013e 30000000 		.4byte	.LVL26
 4651 0142 36000000 		.4byte	.LVL27
 4652 0146 0200     		.2byte	0x2
 4653 0148 33       		.byte	0x33
 4654 0149 9F       		.byte	0x9f
 4655 014a 00000000 		.4byte	0
 4656 014e 00000000 		.4byte	0
 4657              	.LLST16:
 4658 0152 30000000 		.4byte	.LVL26
 4659 0156 36000000 		.4byte	.LVL27
 4660 015a 0600     		.2byte	0x6
 4661 015c 0C       		.byte	0xc
 4662 015d 80053240 		.4byte	0x40320580
 4663 0161 9F       		.byte	0x9f
 4664 0162 00000000 		.4byte	0
 4665 0166 00000000 		.4byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 149


 4666              		.section	.debug_aranges,"",%progbits
 4667 0000 2C000000 		.4byte	0x2c
 4668 0004 0200     		.2byte	0x2
 4669 0006 00000000 		.4byte	.Ldebug_info0
 4670 000a 04       		.byte	0x4
 4671 000b 00       		.byte	0
 4672 000c 0000     		.2byte	0
 4673 000e 0000     		.2byte	0
 4674 0010 00000000 		.4byte	.LFB536
 4675 0014 BC000000 		.4byte	.LFE536-.LFB536
 4676 0018 00000000 		.4byte	.LFB537
 4677 001c 64000000 		.4byte	.LFE537-.LFB537
 4678 0020 00000000 		.4byte	.LFB535
 4679 0024 60000000 		.4byte	.LFE535-.LFB535
 4680 0028 00000000 		.4byte	0
 4681 002c 00000000 		.4byte	0
 4682              		.section	.debug_ranges,"",%progbits
 4683              	.Ldebug_ranges0:
 4684 0000 00000000 		.4byte	.LFB536
 4685 0004 BC000000 		.4byte	.LFE536
 4686 0008 00000000 		.4byte	.LFB537
 4687 000c 64000000 		.4byte	.LFE537
 4688 0010 00000000 		.4byte	.LFB535
 4689 0014 60000000 		.4byte	.LFE535
 4690 0018 00000000 		.4byte	0
 4691 001c 00000000 		.4byte	0
 4692              		.section	.debug_line,"",%progbits
 4693              	.Ldebug_line0:
 4694 0000 9F050000 		.section	.debug_str,"MS",%progbits,1
 4694      0200D604 
 4694      00000201 
 4694      FB0E0D00 
 4694      01010101 
 4695              	.LASF139:
 4696 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4696      6843746C 
 4696      4D61696E 
 4696      57733146 
 4696      72657100 
 4697              	.LASF33:
 4698 0014 52455345 		.ascii	"RESERVED\000"
 4698      52564544 
 4698      00
 4699              	.LASF41:
 4700 001d 5644445F 		.ascii	"VDD_ACTIVE\000"
 4700      41435449 
 4700      564500
 4701              	.LASF37:
 4702 0028 494E5452 		.ascii	"INTR_CAUSE0\000"
 4702      5F434155 
 4702      53453000 
 4703              	.LASF38:
 4704 0034 494E5452 		.ascii	"INTR_CAUSE1\000"
 4704      5F434155 
 4704      53453100 
 4705              	.LASF39:
 4706 0040 494E5452 		.ascii	"INTR_CAUSE2\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 150


 4706      5F434155 
 4706      53453200 
 4707              	.LASF40:
 4708 004c 494E5452 		.ascii	"INTR_CAUSE3\000"
 4708      5F434155 
 4708      53453300 
 4709              	.LASF61:
 4710 0058 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4710      5F574F52 
 4710      4B5F5550 
 4710      44415445 
 4710      4400
 4711              	.LASF383:
 4712 006a 6D61696E 		.ascii	"main_cm4.c\000"
 4712      5F636D34 
 4712      2E6300
 4713              	.LASF360:
 4714 0075 63795F64 		.ascii	"cy_device\000"
 4714      65766963 
 4714      6500
 4715              	.LASF377:
 4716 007f 73657476 		.ascii	"setvbuf\000"
 4716      62756600 
 4717              	.LASF166:
 4718 0087 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4718      73436D30 
 4718      436C6F63 
 4718      6B43746C 
 4718      4F666673 
 4719              	.LASF125:
 4720 009e 70657269 		.ascii	"periClockNr\000"
 4720      436C6F63 
 4720      6B4E7200 
 4721              	.LASF205:
 4722 00aa 696E7472 		.ascii	"intrMask\000"
 4722      4D61736B 
 4722      00
 4723              	.LASF262:
 4724 00b3 5F6F6E5F 		.ascii	"_on_exit_args\000"
 4724      65786974 
 4724      5F617267 
 4724      7300
 4725              	.LASF279:
 4726 00c1 5F777269 		.ascii	"_write\000"
 4726      746500
 4727              	.LASF53:
 4728 00c8 4348414E 		.ascii	"CHAN_EN\000"
 4728      5F454E00 
 4729              	.LASF381:
 4730 00d0 43617053 		.ascii	"CapSense_IsWidgetActive\000"
 4730      656E7365 
 4730      5F497357 
 4730      69646765 
 4730      74416374 
 4731              	.LASF214:
 4732 00e8 74785374 		.ascii	"txStatus\000"
 4732      61747573 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 151


 4732      00
 4733              	.LASF98:
 4734 00f1 70657269 		.ascii	"periBase\000"
 4734      42617365 
 4734      00
 4735              	.LASF329:
 4736 00fa 5F776374 		.ascii	"_wctomb_state\000"
 4736      6F6D625F 
 4736      73746174 
 4736      6500
 4737              	.LASF326:
 4738 0108 5F723438 		.ascii	"_r48\000"
 4738      00
 4739              	.LASF144:
 4740 010d 64774368 		.ascii	"dwChSize\000"
 4740      53697A65 
 4740      00
 4741              	.LASF71:
 4742 0116 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4742      455F494E 
 4742      54525F4D 
 4742      41534B00 
 4743              	.LASF351:
 4744 0126 61646343 		.ascii	"adcCounts\000"
 4744      6F756E74 
 4744      7300
 4745              	.LASF331:
 4746 0130 5F736967 		.ascii	"_signal_buf\000"
 4746      6E616C5F 
 4746      62756600 
 4747              	.LASF14:
 4748 013c 756E7369 		.ascii	"unsigned int\000"
 4748      676E6564 
 4748      20696E74 
 4748      00
 4749              	.LASF73:
 4750 0149 494E5452 		.ascii	"INTR_CAUSE\000"
 4750      5F434155 
 4750      534500
 4751              	.LASF126:
 4752 0154 736D6966 		.ascii	"smifDeviceNr\000"
 4752      44657669 
 4752      63654E72 
 4752      00
 4753              	.LASF195:
 4754 0161 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4754      41525F52 
 4754      414E4745 
 4754      5F434F4E 
 4754      445F4F55 
 4755              	.LASF156:
 4756 017b 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4756      44697643 
 4756      6D645061 
 4756      54797065 
 4756      53656C50 
 4757              	.LASF276:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 152


 4758 0192 5F6C6266 		.ascii	"_lbfsize\000"
 4758      73697A65 
 4758      00
 4759              	.LASF32:
 4760 019b 4346475F 		.ascii	"CFG_SIO\000"
 4760      53494F00 
 4761              	.LASF357:
 4762 01a3 706C6179 		.ascii	"play_voice\000"
 4762      5F766F69 
 4762      636500
 4763              	.LASF8:
 4764 01ae 5F5F696E 		.ascii	"__int32_t\000"
 4764      7433325F 
 4764      7400
 4765              	.LASF291:
 4766 01b8 5F657272 		.ascii	"_errno\000"
 4766      6E6F00
 4767              	.LASF63:
 4768 01bf 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4768      5F574F52 
 4768      4B5F4E45 
 4768      5756414C 
 4768      554500
 4769              	.LASF236:
 4770 01d2 5F6F6666 		.ascii	"_off_t\000"
 4770      5F7400
 4771              	.LASF96:
 4772 01d9 63707573 		.ascii	"cpussBase\000"
 4772      73426173 
 4772      6500
 4773              	.LASF229:
 4774 01e3 6368616E 		.ascii	"channelBase\000"
 4774      6E656C42 
 4774      61736500 
 4775              	.LASF376:
 4776 01ef 43617053 		.ascii	"CapSense_Start\000"
 4776      656E7365 
 4776      5F537461 
 4776      727400
 4777              	.LASF231:
 4778 01fe 6877436F 		.ascii	"hwConfigStc\000"
 4778      6E666967 
 4778      53746300 
 4779              	.LASF121:
 4780 020a 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4780      734E6F74 
 4780      436F6E6E 
 4780      65637465 
 4780      64497271 
 4781              	.LASF0:
 4782 021f 73686F72 		.ascii	"short int\000"
 4782      7420696E 
 4782      7400
 4783              	.LASF217:
 4784 0229 72785269 		.ascii	"rxRingBufSize\000"
 4784      6E674275 
 4784      6653697A 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 153


 4784      6500
 4785              	.LASF65:
 4786 0237 53415455 		.ascii	"SATURATE_INTR\000"
 4786      52415445 
 4786      5F494E54 
 4786      5200
 4787              	.LASF235:
 4788 0245 5F4C4F43 		.ascii	"_LOCK_RECURSIVE_T\000"
 4788      4B5F5245 
 4788      43555253 
 4788      4956455F 
 4788      5400
 4789              	.LASF152:
 4790 0257 70657269 		.ascii	"periTrGrSize\000"
 4790      54724772 
 4790      53697A65 
 4790      00
 4791              	.LASF191:
 4792 0264 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 4792      41525F57 
 4792      4149545F 
 4792      464F525F 
 4792      52455355 
 4793              	.LASF77:
 4794 027b 494E4A5F 		.ascii	"INJ_RESULT\000"
 4794      52455355 
 4794      4C5400
 4795              	.LASF155:
 4796 0286 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4796      44697643 
 4796      6D645061 
 4796      44697653 
 4796      656C506F 
 4797              	.LASF278:
 4798 029c 5F726561 		.ascii	"_read\000"
 4798      6400
 4799              	.LASF28:
 4800 02a2 494E5452 		.ascii	"INTR_SET\000"
 4800      5F534554 
 4800      00
 4801              	.LASF132:
 4802 02ab 63727970 		.ascii	"cryptoMemSize\000"
 4802      746F4D65 
 4802      6D53697A 
 4802      6500
 4803              	.LASF333:
 4804 02b9 5F6D6272 		.ascii	"_mbrlen_state\000"
 4804      6C656E5F 
 4804      73746174 
 4804      6500
 4805              	.LASF178:
 4806 02c7 63707573 		.ascii	"cpussRam1Ctl0\000"
 4806      7352616D 
 4806      3143746C 
 4806      3000
 4807              	.LASF379:
 4808 02d5 43617053 		.ascii	"CapSense_IsBusy\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 154


 4808      656E7365 
 4808      5F497342 
 4808      75737900 
 4809              	.LASF180:
 4810 02e5 69706353 		.ascii	"ipcStructSize\000"
 4810      74727563 
 4810      7453697A 
 4810      6500
 4811              	.LASF120:
 4812 02f3 63707573 		.ascii	"cpussFmIrq\000"
 4812      73466D49 
 4812      727100
 4813              	.LASF369:
 4814 02fe 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4814      4973456E 
 4814      64436F6E 
 4814      76657273 
 4814      696F6E00 
 4815              	.LASF293:
 4816 0312 5F737464 		.ascii	"_stdout\000"
 4816      6F757400 
 4817              	.LASF382:
 4818 031a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4818      43313120 
 4818      352E342E 
 4818      31203230 
 4818      31363036 
 4819 034d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 4819      20726576 
 4819      6973696F 
 4819      6E203233 
 4819      37373135 
 4820 0380 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 4820      70202D6D 
 4820      6670753D 
 4820      66707634 
 4820      2D73702D 
 4821 03b3 65637469 		.ascii	"ections -ffat-lto-objects\000"
 4821      6F6E7320 
 4821      2D666661 
 4821      742D6C74 
 4821      6F2D6F62 
 4822              	.LASF114:
 4823 03cd 70726F74 		.ascii	"protVersion\000"
 4823      56657273 
 4823      696F6E00 
 4824              	.LASF192:
 4825 03d9 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4825      41525F52 
 4825      414E4745 
 4825      5F434F4E 
 4825      445F4245 
 4826              	.LASF237:
 4827 03f1 5F66706F 		.ascii	"_fpos_t\000"
 4827      735F7400 
 4828              	.LASF364:
 4829 03f9 5F696D70 		.ascii	"_impure_ptr\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 155


 4829      7572655F 
 4829      70747200 
 4830              	.LASF269:
 4831 0405 5F666E73 		.ascii	"_fns\000"
 4831      00
 4832              	.LASF277:
 4833 040a 5F636F6F 		.ascii	"_cookie\000"
 4833      6B696500 
 4834              	.LASF154:
 4835 0412 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4835      44697643 
 4835      6D645479 
 4835      70655365 
 4835      6C506F73 
 4836              	.LASF171:
 4837 0427 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4837      73547269 
 4837      6D52616D 
 4837      43746C4F 
 4837      66667365 
 4838              	.LASF274:
 4839 043d 5F666C61 		.ascii	"_flags\000"
 4839      677300
 4840              	.LASF215:
 4841 0444 72785374 		.ascii	"rxStatus\000"
 4841      61747573 
 4841      00
 4842              	.LASF30:
 4843 044d 4346475F 		.ascii	"CFG_IN\000"
 4843      494E00
 4844              	.LASF247:
 4845 0454 5F426967 		.ascii	"_Bigint\000"
 4845      696E7400 
 4846              	.LASF187:
 4847 045c 75696E74 		.ascii	"uint8\000"
 4847      3800
 4848              	.LASF259:
 4849 0462 5F5F746D 		.ascii	"__tm_wday\000"
 4849      5F776461 
 4849      7900
 4850              	.LASF301:
 4851 046c 5F726573 		.ascii	"_result\000"
 4851      756C7400 
 4852              	.LASF20:
 4853 0474 75696E74 		.ascii	"uint32_t\000"
 4853      33325F74 
 4853      00
 4854              	.LASF15:
 4855 047d 696E7438 		.ascii	"int8_t\000"
 4855      5F7400
 4856              	.LASF255:
 4857 0484 5F5F746D 		.ascii	"__tm_hour\000"
 4857      5F686F75 
 4857      7200
 4858              	.LASF372:
 4859 048e 4144435F 		.ascii	"ADC_StartConvert\000"
 4859      53746172 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 156


 4859      74436F6E 
 4859      76657274 
 4859      00
 4860              	.LASF46:
 4861 049f 4750494F 		.ascii	"GPIO_V1_Type\000"
 4861      5F56315F 
 4861      54797065 
 4861      00
 4862              	.LASF164:
 4863 04ac 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4863      50727443 
 4863      66674F75 
 4863      744F6666 
 4863      73657400 
 4864              	.LASF241:
 4865 04c0 5F5F636F 		.ascii	"__count\000"
 4865      756E7400 
 4866              	.LASF13:
 4867 04c8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4867      206C6F6E 
 4867      6720756E 
 4867      7369676E 
 4867      65642069 
 4868              	.LASF23:
 4869 04df 4F55545F 		.ascii	"OUT_SET\000"
 4869      53455400 
 4870              	.LASF107:
 4871 04e7 63727970 		.ascii	"cryptoVersion\000"
 4871      746F5665 
 4871      7273696F 
 4871      6E00
 4872              	.LASF254:
 4873 04f5 5F5F746D 		.ascii	"__tm_min\000"
 4873      5F6D696E 
 4873      00
 4874              	.LASF228:
 4875 04fe 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 4875      74635F73 
 4875      63625F75 
 4875      6172745F 
 4875      636F6E74 
 4876              	.LASF128:
 4877 0518 65704D6F 		.ascii	"epMonitorNr\000"
 4877      6E69746F 
 4877      724E7200 
 4878              	.LASF344:
 4879 0524 62617365 		.ascii	"base\000"
 4879      00
 4880              	.LASF339:
 4881 0529 5F6E6578 		.ascii	"_nextf\000"
 4881      746600
 4882              	.LASF246:
 4883 0530 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 4883      74635F73 
 4883      63625F75 
 4883      6172745F 
 4883      636F6E74 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 157


 4884              	.LASF22:
 4885 0548 4F55545F 		.ascii	"OUT_CLR\000"
 4885      434C5200 
 4886              	.LASF97:
 4887 0550 666C6173 		.ascii	"flashcBase\000"
 4887      68634261 
 4887      736500
 4888              	.LASF17:
 4889 055b 696E7431 		.ascii	"int16_t\000"
 4889      365F7400 
 4890              	.LASF316:
 4891 0563 5F72616E 		.ascii	"_rand48\000"
 4891      64343800 
 4892              	.LASF163:
 4893 056b 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4893      50727443 
 4893      6667496E 
 4893      4F666673 
 4893      657400
 4894              	.LASF230:
 4895 057e 6E756D43 		.ascii	"numChannels\000"
 4895      68616E6E 
 4895      656C7300 
 4896              	.LASF302:
 4897 058a 5F726573 		.ascii	"_result_k\000"
 4897      756C745F 
 4897      6B00
 4898              	.LASF375:
 4899 0594 55415254 		.ascii	"UART_Start\000"
 4899      5F537461 
 4899      727400
 4900              	.LASF384:
 4901 059f 433A5C55 		.ascii	"C:\\Users\\zinch\\Documents\\PSoC Creator\\Workspac"
 4901      73657273 
 4901      5C7A696E 
 4901      63685C44 
 4901      6F63756D 
 4902 05cd 6530315C 		.ascii	"e01\\VoiceRepeater_onPSoC6.cydsn\000"
 4902      566F6963 
 4902      65526570 
 4902      65617465 
 4902      725F6F6E 
 4903              	.LASF322:
 4904 05ed 5F617363 		.ascii	"_asctime_buf\000"
 4904      74696D65 
 4904      5F627566 
 4904      00
 4905              	.LASF343:
 4906 05fa 43795F47 		.ascii	"Cy_GPIO_Write\000"
 4906      50494F5F 
 4906      57726974 
 4906      6500
 4907              	.LASF273:
 4908 0608 5F5F7346 		.ascii	"__sFILE\000"
 4908      494C4500 
 4909              	.LASF251:
 4910 0610 5F776473 		.ascii	"_wds\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 158


 4910      00
 4911              	.LASF50:
 4912 0615 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4912      4C455F54 
 4912      494D4532 
 4912      3300
 4913              	.LASF201:
 4914 0623 72616E67 		.ascii	"rangeThres\000"
 4914      65546872 
 4914      657300
 4915              	.LASF99:
 4916 062e 75646242 		.ascii	"udbBase\000"
 4916      61736500 
 4917              	.LASF312:
 4918 0636 5F5F4649 		.ascii	"__FILE\000"
 4918      4C4500
 4919              	.LASF193:
 4920 063d 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4920      41525F52 
 4920      414E4745 
 4920      5F434F4E 
 4920      445F494E 
 4921              	.LASF285:
 4922 0656 5F6F6666 		.ascii	"_offset\000"
 4922      73657400 
 4923              	.LASF197:
 4924 065e 6374726C 		.ascii	"ctrl\000"
 4924      00
 4925              	.LASF153:
 4926 0663 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4926      44697643 
 4926      6D644469 
 4926      7653656C 
 4926      4D736B00 
 4927              	.LASF371:
 4928 0677 4144435F 		.ascii	"ADC_Start\000"
 4928      53746172 
 4928      7400
 4929              	.LASF346:
 4930 0681 76616C75 		.ascii	"value\000"
 4930      6500
 4931              	.LASF31:
 4932 0687 4346475F 		.ascii	"CFG_OUT\000"
 4932      4F555400 
 4933              	.LASF75:
 4934 068f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 4934      4348414E 
 4934      5F434F4E 
 4934      46494700 
 4935              	.LASF296:
 4936 069f 5F656D65 		.ascii	"_emergency\000"
 4936      7267656E 
 4936      637900
 4937              	.LASF141:
 4938 06aa 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4938      6843746C 
 4938      4D61696E 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 159


 4938      57733346 
 4938      72657100 
 4939              	.LASF123:
 4940 06be 73727373 		.ascii	"srssNumPll\000"
 4940      4E756D50 
 4940      6C6C00
 4941              	.LASF94:
 4942 06c9 5341525F 		.ascii	"SAR_Type\000"
 4942      54797065 
 4942      00
 4943              	.LASF386:
 4944 06d2 70757473 		.ascii	"puts\000"
 4944      00
 4945              	.LASF134:
 4946 06d7 666C6173 		.ascii	"flashPipeRequired\000"
 4946      68506970 
 4946      65526571 
 4946      75697265 
 4946      6400
 4947              	.LASF253:
 4948 06e9 5F5F746D 		.ascii	"__tm_sec\000"
 4948      5F736563 
 4948      00
 4949              	.LASF186:
 4950 06f2 646F7562 		.ascii	"double\000"
 4950      6C6500
 4951              	.LASF318:
 4952 06f9 5F6D756C 		.ascii	"_mult\000"
 4952      7400
 4953              	.LASF295:
 4954 06ff 5F696E63 		.ascii	"_inc\000"
 4954      00
 4955              	.LASF268:
 4956 0704 5F696E64 		.ascii	"_ind\000"
 4956      00
 4957              	.LASF91:
 4958 0709 5341525F 		.ascii	"SAR_V1_Type\000"
 4958      56315F54 
 4958      79706500 
 4959              	.LASF52:
 4960 0715 52414E47 		.ascii	"RANGE_COND\000"
 4960      455F434F 
 4960      4E4400
 4961              	.LASF138:
 4962 0720 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4962      6843746C 
 4962      4D61696E 
 4962      57733046 
 4962      72657100 
 4963              	.LASF42:
 4964 0734 5644445F 		.ascii	"VDD_INTR\000"
 4964      494E5452 
 4964      00
 4965              	.LASF102:
 4966 073d 6770696F 		.ascii	"gpioBase\000"
 4966      42617365 
 4966      00
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 160


 4967              	.LASF335:
 4968 0746 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 4968      72746F77 
 4968      63735F73 
 4968      74617465 
 4968      00
 4969              	.LASF368:
 4970 0757 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 4970      41525F43 
 4970      6F756E74 
 4970      73546F5F 
 4970      6D566F6C 
 4971              	.LASF260:
 4972 076e 5F5F746D 		.ascii	"__tm_yday\000"
 4972      5F796461 
 4972      7900
 4973              	.LASF108:
 4974 0778 64775665 		.ascii	"dwVersion\000"
 4974      7273696F 
 4974      6E00
 4975              	.LASF185:
 4976 0782 666C6F61 		.ascii	"float\000"
 4976      7400
 4977              	.LASF173:
 4978 0788 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4978      73537973 
 4978      5469636B 
 4978      43746C4F 
 4978      66667365 
 4979              	.LASF129:
 4980 079e 75646250 		.ascii	"udbPresent\000"
 4980      72657365 
 4980      6E7400
 4981              	.LASF92:
 4982 07a9 4750494F 		.ascii	"GPIO_PRT_Type\000"
 4982      5F505254 
 4982      5F547970 
 4982      6500
 4983              	.LASF242:
 4984 07b7 5F5F7661 		.ascii	"__value\000"
 4984      6C756500 
 4985              	.LASF147:
 4986 07bf 64775374 		.ascii	"dwStatusChIdxPos\000"
 4986      61747573 
 4986      43684964 
 4986      78506F73 
 4986      00
 4987              	.LASF6:
 4988 07d0 5F5F7569 		.ascii	"__uint16_t\000"
 4988      6E743136 
 4988      5F7400
 4989              	.LASF115:
 4990 07db 63707573 		.ascii	"cpussIpcNr\000"
 4990      73497063 
 4990      4E7200
 4991              	.LASF303:
 4992 07e6 5F703573 		.ascii	"_p5s\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 161


 4992      00
 4993              	.LASF211:
 4994 07eb 76726566 		.ascii	"vrefMvValue\000"
 4994      4D765661 
 4994      6C756500 
 4995              	.LASF105:
 4996 07f7 63727970 		.ascii	"cryptoBase\000"
 4996      746F4261 
 4996      736500
 4997              	.LASF122:
 4998 0802 73727373 		.ascii	"srssNumClkpath\000"
 4998      4E756D43 
 4998      6C6B7061 
 4998      746800
 4999              	.LASF226:
 5000 0811 63624576 		.ascii	"cbEvents\000"
 5000      656E7473 
 5000      00
 5001              	.LASF118:
 5002 081a 63707573 		.ascii	"cpussFlashPaSize\000"
 5002      73466C61 
 5002      73685061 
 5002      53697A65 
 5002      00
 5003              	.LASF327:
 5004 082b 5F6D626C 		.ascii	"_mblen_state\000"
 5004      656E5F73 
 5004      74617465 
 5004      00
 5005              	.LASF350:
 5006 0838 6368616E 		.ascii	"chan\000"
 5006      00
 5007              	.LASF194:
 5008 083d 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 5008      41525F52 
 5008      414E4745 
 5008      5F434F4E 
 5008      445F4142 
 5009              	.LASF184:
 5010 0855 63686172 		.ascii	"char\000"
 5010      00
 5011              	.LASF366:
 5012 085a 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 5012      79734C69 
 5012      625F4173 
 5012      73657274 
 5012      4661696C 
 5013              	.LASF256:
 5014 0871 5F5F746D 		.ascii	"__tm_mday\000"
 5014      5F6D6461 
 5014      7900
 5015              	.LASF309:
 5016 087b 5F736967 		.ascii	"_sig_func\000"
 5016      5F66756E 
 5016      6300
 5017              	.LASF203:
 5018 0885 6368616E 		.ascii	"chanEn\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 162


 5018      456E00
 5019              	.LASF219:
 5020 088c 72785269 		.ascii	"rxRingBufTail\000"
 5020      6E674275 
 5020      66546169 
 5020      6C00
 5021              	.LASF130:
 5022 089a 73797350 		.ascii	"sysPmSimoPresent\000"
 5022      6D53696D 
 5022      6F507265 
 5022      73656E74 
 5022      00
 5023              	.LASF358:
 5024 08ab 74657874 		.ascii	"text\000"
 5024      00
 5025              	.LASF284:
 5026 08b0 5F626C6B 		.ascii	"_blksize\000"
 5026      73697A65 
 5026      00
 5027              	.LASF64:
 5028 08b9 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 5028      5F524553 
 5028      554C545F 
 5028      4E455756 
 5028      414C5545 
 5029              	.LASF244:
 5030 08ce 5F666C6F 		.ascii	"_flock_t\000"
 5030      636B5F74 
 5030      00
 5031              	.LASF222:
 5032 08d7 72784275 		.ascii	"rxBufIdx\000"
 5032      66496478 
 5032      00
 5033              	.LASF227:
 5034 08e0 696E6974 		.ascii	"initKey\000"
 5034      4B657900 
 5035              	.LASF80:
 5036 08e8 4156475F 		.ascii	"AVG_STAT\000"
 5036      53544154 
 5036      00
 5037              	.LASF148:
 5038 08f1 64775374 		.ascii	"dwStatusChIdxMsk\000"
 5038      61747573 
 5038      43684964 
 5038      784D736B 
 5038      00
 5039              	.LASF16:
 5040 0902 75696E74 		.ascii	"uint8_t\000"
 5040      385F7400 
 5041              	.LASF387:
 5042 090a 5F5F6275 		.ascii	"__builtin_puts\000"
 5042      696C7469 
 5042      6E5F7075 
 5042      747300
 5043              	.LASF188:
 5044 0919 63686172 		.ascii	"char8\000"
 5044      3800
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 163


 5045              	.LASF281:
 5046 091f 5F636C6F 		.ascii	"_close\000"
 5046      736500
 5047              	.LASF299:
 5048 0926 5F5F7364 		.ascii	"__sdidinit\000"
 5048      6964696E 
 5048      697400
 5049              	.LASF119:
 5050 0931 63707573 		.ascii	"cpussIpc0Irq\000"
 5050      73497063 
 5050      30497271 
 5050      00
 5051              	.LASF356:
 5052 093e 77726974 		.ascii	"write_voice\000"
 5052      655F766F 
 5052      69636500 
 5053              	.LASF70:
 5054 094a 52414E47 		.ascii	"RANGE_INTR_SET\000"
 5054      455F494E 
 5054      54525F53 
 5054      455400
 5055              	.LASF234:
 5056 0959 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 5056      434F4E46 
 5056      49475F53 
 5056      54525543 
 5056      5400
 5057              	.LASF209:
 5058 096b 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 5058      77697463 
 5058      68537143 
 5058      74726C00 
 5059              	.LASF212:
 5060 097b 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 5060      74635F73 
 5060      61725F63 
 5060      6F6E6669 
 5060      675F7400 
 5061              	.LASF213:
 5062 098f 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 5062      625F7363 
 5062      625F7561 
 5062      72745F68 
 5062      616E646C 
 5063              	.LASF202:
 5064 09ae 72616E67 		.ascii	"rangeCond\000"
 5064      65436F6E 
 5064      6400
 5065              	.LASF207:
 5066 09b8 72616E67 		.ascii	"rangeIntrMask\000"
 5066      65496E74 
 5066      724D6173 
 5066      6B00
 5067              	.LASF292:
 5068 09c6 5F737464 		.ascii	"_stdin\000"
 5068      696E00
 5069              	.LASF324:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 164


 5070 09cd 5F67616D 		.ascii	"_gamma_signgam\000"
 5070      6D615F73 
 5070      69676E67 
 5070      616D00
 5071              	.LASF177:
 5072 09dc 63707573 		.ascii	"cpussRam0Ctl0\000"
 5072      7352616D 
 5072      3043746C 
 5072      3000
 5073              	.LASF12:
 5074 09ea 6C6F6E67 		.ascii	"long long int\000"
 5074      206C6F6E 
 5074      6720696E 
 5074      7400
 5075              	.LASF104:
 5076 09f8 69706342 		.ascii	"ipcBase\000"
 5076      61736500 
 5077              	.LASF145:
 5078 0a00 64774368 		.ascii	"dwChCtlPrioPos\000"
 5078      43746C50 
 5078      72696F50 
 5078      6F7300
 5079              	.LASF85:
 5080 0a0f 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 5080      53574954 
 5080      43485F44 
 5080      535F4354 
 5080      524C00
 5081              	.LASF374:
 5082 0a22 7072696E 		.ascii	"printf\000"
 5082      746600
 5083              	.LASF271:
 5084 0a29 5F626173 		.ascii	"_base\000"
 5084      6500
 5085              	.LASF304:
 5086 0a2f 5F667265 		.ascii	"_freelist\000"
 5086      656C6973 
 5086      7400
 5087              	.LASF72:
 5088 0a39 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 5088      455F494E 
 5088      54525F4D 
 5088      41534B45 
 5088      4400
 5089              	.LASF319:
 5090 0a4b 5F616464 		.ascii	"_add\000"
 5090      00
 5091              	.LASF135:
 5092 0a50 666C6173 		.ascii	"flashWriteDelay\000"
 5092      68577269 
 5092      74654465 
 5092      6C617900 
 5093              	.LASF336:
 5094 0a60 5F776372 		.ascii	"_wcrtomb_state\000"
 5094      746F6D62 
 5094      5F737461 
 5094      746500
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 165


 5095              	.LASF275:
 5096 0a6f 5F66696C 		.ascii	"_file\000"
 5096      6500
 5097              	.LASF5:
 5098 0a75 5F5F696E 		.ascii	"__int16_t\000"
 5098      7431365F 
 5098      7400
 5099              	.LASF101:
 5100 0a7f 6873696F 		.ascii	"hsiomBase\000"
 5100      6D426173 
 5100      6500
 5101              	.LASF59:
 5102 0a89 4348414E 		.ascii	"CHAN_RESULT\000"
 5102      5F524553 
 5102      554C5400 
 5103              	.LASF151:
 5104 0a95 70657269 		.ascii	"periTrGrOffset\000"
 5104      54724772 
 5104      4F666673 
 5104      657400
 5105              	.LASF300:
 5106 0aa4 5F5F636C 		.ascii	"__cleanup\000"
 5106      65616E75 
 5106      7000
 5107              	.LASF25:
 5108 0aae 494E5452 		.ascii	"INTR\000"
 5108      00
 5109              	.LASF69:
 5110 0ab3 52414E47 		.ascii	"RANGE_INTR\000"
 5110      455F494E 
 5110      545200
 5111              	.LASF243:
 5112 0abe 5F6D6273 		.ascii	"_mbstate_t\000"
 5112      74617465 
 5112      5F7400
 5113              	.LASF117:
 5114 0ac9 63707573 		.ascii	"cpussDwChNr\000"
 5114      73447743 
 5114      684E7200 
 5115              	.LASF26:
 5116 0ad5 494E5452 		.ascii	"INTR_MASK\000"
 5116      5F4D4153 
 5116      4B00
 5117              	.LASF48:
 5118 0adf 53414D50 		.ascii	"SAMPLE_CTRL\000"
 5118      4C455F43 
 5118      54524C00 
 5119              	.LASF204:
 5120 0aeb 6368616E 		.ascii	"chanConfig\000"
 5120      436F6E66 
 5120      696700
 5121              	.LASF355:
 5122 0af6 4D69635F 		.ascii	"Mic_mV\000"
 5122      6D5600
 5123              	.LASF224:
 5124 0afd 74784275 		.ascii	"txBufSize\000"
 5124      6653697A 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 166


 5124      6500
 5125              	.LASF261:
 5126 0b07 5F5F746D 		.ascii	"__tm_isdst\000"
 5126      5F697364 
 5126      737400
 5127              	.LASF165:
 5128 0b12 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5128      50727443 
 5128      66675369 
 5128      6F4F6666 
 5128      73657400 
 5129              	.LASF83:
 5130 0b26 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 5130      53574954 
 5130      43485F43 
 5130      4C454152 
 5130      3000
 5131              	.LASF337:
 5132 0b38 5F776373 		.ascii	"_wcsrtombs_state\000"
 5132      72746F6D 
 5132      62735F73 
 5132      74617465 
 5132      00
 5133              	.LASF380:
 5134 0b49 43617053 		.ascii	"CapSense_ProcessAllWidgets\000"
 5134      656E7365 
 5134      5F50726F 
 5134      63657373 
 5134      416C6C57 
 5135              	.LASF179:
 5136 0b64 63707573 		.ascii	"cpussRam2Ctl0\000"
 5136      7352616D 
 5136      3243746C 
 5136      3000
 5137              	.LASF338:
 5138 0b72 5F685F65 		.ascii	"_h_errno\000"
 5138      72726E6F 
 5138      00
 5139              	.LASF370:
 5140 0b7b 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 5140      41525F53 
 5140      746F7043 
 5140      6F6E7665 
 5140      727400
 5141              	.LASF27:
 5142 0b8e 494E5452 		.ascii	"INTR_MASKED\000"
 5142      5F4D4153 
 5142      4B454400 
 5143              	.LASF54:
 5144 0b9a 53544152 		.ascii	"START_CTRL\000"
 5144      545F4354 
 5144      524C00
 5145              	.LASF223:
 5146 0ba5 74784275 		.ascii	"txBuf\000"
 5146      6600
 5147              	.LASF44:
 5148 0bab 5644445F 		.ascii	"VDD_INTR_MASKED\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 167


 5148      494E5452 
 5148      5F4D4153 
 5148      4B454400 
 5149              	.LASF136:
 5150 0bbb 666C6173 		.ascii	"flashProgramDelay\000"
 5150      6850726F 
 5150      6772616D 
 5150      44656C61 
 5150      7900
 5151              	.LASF158:
 5152 0bcd 70657269 		.ascii	"periDiv16CtlOffset\000"
 5152      44697631 
 5152      3643746C 
 5152      4F666673 
 5152      657400
 5153              	.LASF257:
 5154 0be0 5F5F746D 		.ascii	"__tm_mon\000"
 5154      5F6D6F6E 
 5154      00
 5155              	.LASF7:
 5156 0be9 73686F72 		.ascii	"short unsigned int\000"
 5156      7420756E 
 5156      7369676E 
 5156      65642069 
 5156      6E7400
 5157              	.LASF216:
 5158 0bfc 72785269 		.ascii	"rxRingBuf\000"
 5158      6E674275 
 5158      6600
 5159              	.LASF95:
 5160 0c06 6C6F6E67 		.ascii	"long double\000"
 5160      20646F75 
 5160      626C6500 
 5161              	.LASF373:
 5162 0c12 73707269 		.ascii	"sprintf\000"
 5162      6E746600 
 5163              	.LASF18:
 5164 0c1a 75696E74 		.ascii	"uint16_t\000"
 5164      31365F74 
 5164      00
 5165              	.LASF100:
 5166 0c23 70726F74 		.ascii	"protBase\000"
 5166      42617365 
 5166      00
 5167              	.LASF45:
 5168 0c2c 5644445F 		.ascii	"VDD_INTR_SET\000"
 5168      494E5452 
 5168      5F534554 
 5168      00
 5169              	.LASF150:
 5170 0c39 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 5170      5472436D 
 5170      64477253 
 5170      656C4D73 
 5170      6B00
 5171              	.LASF308:
 5172 0c4b 5F617465 		.ascii	"_atexit0\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 168


 5172      78697430 
 5172      00
 5173              	.LASF199:
 5174 0c54 73616D70 		.ascii	"sampleTime01\000"
 5174      6C655469 
 5174      6D653031 
 5174      00
 5175              	.LASF124:
 5176 0c61 73727373 		.ascii	"srssNumHfroot\000"
 5176      4E756D48 
 5176      66726F6F 
 5176      7400
 5177              	.LASF208:
 5178 0c6f 6D757853 		.ascii	"muxSwitch\000"
 5178      77697463 
 5178      6800
 5179              	.LASF140:
 5180 0c79 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5180      6843746C 
 5180      4D61696E 
 5180      57733246 
 5180      72657100 
 5181              	.LASF149:
 5182 0c8d 70657269 		.ascii	"periTrCmdOffset\000"
 5182      5472436D 
 5182      644F6666 
 5182      73657400 
 5183              	.LASF267:
 5184 0c9d 5F617465 		.ascii	"_atexit\000"
 5184      78697400 
 5185              	.LASF288:
 5186 0ca5 5F6D6273 		.ascii	"_mbstate\000"
 5186      74617465 
 5186      00
 5187              	.LASF239:
 5188 0cae 5F5F7763 		.ascii	"__wch\000"
 5188      6800
 5189              	.LASF21:
 5190 0cb4 73697A65 		.ascii	"sizetype\000"
 5190      74797065 
 5190      00
 5191              	.LASF190:
 5192 0cbd 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 5192      41525F52 
 5192      45545552 
 5192      4E5F5354 
 5192      41545553 
 5193              	.LASF175:
 5194 0cd2 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 5194      73436D34 
 5194      4E6D6943 
 5194      746C4F66 
 5194      66736574 
 5195              	.LASF170:
 5196 0ce7 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5196      73436D34 
 5196      50777243 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 169


 5196      746C4F66 
 5196      66736574 
 5197              	.LASF157:
 5198 0cfc 70657269 		.ascii	"periDiv8CtlOffset\000"
 5198      44697638 
 5198      43746C4F 
 5198      66667365 
 5198      7400
 5199              	.LASF56:
 5200 0d0e 52455345 		.ascii	"RESERVED2\000"
 5200      52564544 
 5200      3200
 5201              	.LASF58:
 5202 0d18 52455345 		.ascii	"RESERVED3\000"
 5202      52564544 
 5202      3300
 5203              	.LASF60:
 5204 0d22 52455345 		.ascii	"RESERVED4\000"
 5204      52564544 
 5204      3400
 5205              	.LASF74:
 5206 0d2c 52455345 		.ascii	"RESERVED5\000"
 5206      52564544 
 5206      3500
 5207              	.LASF76:
 5208 0d36 52455345 		.ascii	"RESERVED6\000"
 5208      52564544 
 5208      3600
 5209              	.LASF342:
 5210 0d40 43795F53 		.ascii	"Cy_SAR_Disable\000"
 5210      41525F44 
 5210      69736162 
 5210      6C6500
 5211              	.LASF81:
 5212 0d4f 52455345 		.ascii	"RESERVED8\000"
 5212      52564544 
 5212      3800
 5213              	.LASF84:
 5214 0d59 52455345 		.ascii	"RESERVED9\000"
 5214      52564544 
 5214      3900
 5215              	.LASF362:
 5216 0d63 4144435F 		.ascii	"ADC_allConfigs\000"
 5216      616C6C43 
 5216      6F6E6669 
 5216      677300
 5217              	.LASF68:
 5218 0d72 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 5218      52415445 
 5218      5F494E54 
 5218      525F4D41 
 5218      534B4544 
 5219              	.LASF86:
 5220 0d87 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 5220      53574954 
 5220      43485F53 
 5220      515F4354 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 170


 5220      524C00
 5221              	.LASF9:
 5222 0d9a 6C6F6E67 		.ascii	"long int\000"
 5222      20696E74 
 5222      00
 5223              	.LASF106:
 5224 0da3 63707573 		.ascii	"cpussVersion\000"
 5224      73566572 
 5224      73696F6E 
 5224      00
 5225              	.LASF359:
 5226 0db0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5226      52784275 
 5226      66666572 
 5226      00
 5227              	.LASF110:
 5228 0dbd 6770696F 		.ascii	"gpioVersion\000"
 5228      56657273 
 5228      696F6E00 
 5229              	.LASF109:
 5230 0dc9 666C6173 		.ascii	"flashcVersion\000"
 5230      68635665 
 5230      7273696F 
 5230      6E00
 5231              	.LASF131:
 5232 0dd7 70726F74 		.ascii	"protBusMasterMask\000"
 5232      4275734D 
 5232      61737465 
 5232      724D6173 
 5232      6B00
 5233              	.LASF311:
 5234 0de9 5F5F7366 		.ascii	"__sf\000"
 5234      00
 5235              	.LASF250:
 5236 0dee 5F736967 		.ascii	"_sign\000"
 5236      6E00
 5237              	.LASF36:
 5238 0df4 4750494F 		.ascii	"GPIO_PRT_V1_Type\000"
 5238      5F505254 
 5238      5F56315F 
 5238      54797065 
 5238      00
 5239              	.LASF51:
 5240 0e05 52414E47 		.ascii	"RANGE_THRES\000"
 5240      455F5448 
 5240      52455300 
 5241              	.LASF298:
 5242 0e11 5F637572 		.ascii	"_current_locale\000"
 5242      72656E74 
 5242      5F6C6F63 
 5242      616C6500 
 5243              	.LASF183:
 5244 0e21 63686172 		.ascii	"char_t\000"
 5244      5F7400
 5245              	.LASF286:
 5246 0e28 5F646174 		.ascii	"_data\000"
 5246      6100
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 171


 5247              	.LASF57:
 5248 0e2e 4348414E 		.ascii	"CHAN_WORK\000"
 5248      5F574F52 
 5248      4B00
 5249              	.LASF240:
 5250 0e38 5F5F7763 		.ascii	"__wchb\000"
 5250      686200
 5251              	.LASF34:
 5252 0e3f 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5252      494E5F47 
 5252      50494F35 
 5252      5600
 5253              	.LASF258:
 5254 0e4d 5F5F746D 		.ascii	"__tm_year\000"
 5254      5F796561 
 5254      7200
 5255              	.LASF225:
 5256 0e57 74784C65 		.ascii	"txLeftToTransmit\000"
 5256      6674546F 
 5256      5472616E 
 5256      736D6974 
 5256      00
 5257              	.LASF323:
 5258 0e68 5F6C6F63 		.ascii	"_localtime_buf\000"
 5258      616C7469 
 5258      6D655F62 
 5258      756600
 5259              	.LASF24:
 5260 0e77 4F55545F 		.ascii	"OUT_INV\000"
 5260      494E5600 
 5261              	.LASF341:
 5262 0e7f 5F756E75 		.ascii	"_unused\000"
 5262      73656400 
 5263              	.LASF3:
 5264 0e87 5F5F7569 		.ascii	"__uint8_t\000"
 5264      6E74385F 
 5264      7400
 5265              	.LASF307:
 5266 0e91 5F6E6577 		.ascii	"_new\000"
 5266      00
 5267              	.LASF232:
 5268 0e96 6D697363 		.ascii	"miscConfig\000"
 5268      436F6E66 
 5268      696700
 5269              	.LASF249:
 5270 0ea1 5F6D6178 		.ascii	"_maxwds\000"
 5270      77647300 
 5271              	.LASF330:
 5272 0ea9 5F6C3634 		.ascii	"_l64a_buf\000"
 5272      615F6275 
 5272      6600
 5273              	.LASF297:
 5274 0eb3 5F637572 		.ascii	"_current_category\000"
 5274      72656E74 
 5274      5F636174 
 5274      65676F72 
 5274      7900
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 172


 5275              	.LASF161:
 5276 0ec5 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5276      50727449 
 5276      6E747243 
 5276      66674F66 
 5276      66736574 
 5277              	.LASF127:
 5278 0eda 70617373 		.ascii	"passSarChannels\000"
 5278      53617243 
 5278      68616E6E 
 5278      656C7300 
 5279              	.LASF160:
 5280 0eea 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 5280      44697632 
 5280      345F3543 
 5280      746C4F66 
 5280      66736574 
 5281              	.LASF174:
 5282 0eff 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 5282      73436D30 
 5282      4E6D6943 
 5282      746C4F66 
 5282      66736574 
 5283              	.LASF2:
 5284 0f14 5F5F696E 		.ascii	"__int8_t\000"
 5284      74385F74 
 5284      00
 5285              	.LASF167:
 5286 0f1d 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5286      73436D34 
 5286      436C6F63 
 5286      6B43746C 
 5286      4F666673 
 5287              	.LASF245:
 5288 0f34 5F5F554C 		.ascii	"__ULong\000"
 5288      6F6E6700 
 5289              	.LASF172:
 5290 0f3c 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5290      73547269 
 5290      6D526F6D 
 5290      43746C4F 
 5290      66667365 
 5291              	.LASF200:
 5292 0f52 73616D70 		.ascii	"sampleTime23\000"
 5292      6C655469 
 5292      6D653233 
 5292      00
 5293              	.LASF252:
 5294 0f5f 5F5F746D 		.ascii	"__tm\000"
 5294      00
 5295              	.LASF218:
 5296 0f64 72785269 		.ascii	"rxRingBufHead\000"
 5296      6E674275 
 5296      66486561 
 5296      6400
 5297              	.LASF287:
 5298 0f72 5F6C6F63 		.ascii	"_lock\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 173


 5298      6B00
 5299              	.LASF305:
 5300 0f78 5F637674 		.ascii	"_cvtlen\000"
 5300      6C656E00 
 5301              	.LASF111:
 5302 0f80 6873696F 		.ascii	"hsiomVersion\000"
 5302      6D566572 
 5302      73696F6E 
 5302      00
 5303              	.LASF11:
 5304 0f8d 6C6F6E67 		.ascii	"long unsigned int\000"
 5304      20756E73 
 5304      69676E65 
 5304      6420696E 
 5304      7400
 5305              	.LASF176:
 5306 0f9f 63707573 		.ascii	"cpussRomCtl\000"
 5306      73526F6D 
 5306      43746C00 
 5307              	.LASF314:
 5308 0fab 5F6E696F 		.ascii	"_niobs\000"
 5308      627300
 5309              	.LASF238:
 5310 0fb2 77696E74 		.ascii	"wint_t\000"
 5310      5F7400
 5311              	.LASF367:
 5312 0fb9 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 5312      41525F47 
 5312      65745265 
 5312      73756C74 
 5312      313600
 5313              	.LASF348:
 5314 0fcc 4144435F 		.ascii	"ADC_Stop\000"
 5314      53746F70 
 5314      00
 5315              	.LASF19:
 5316 0fd5 696E7433 		.ascii	"int32_t\000"
 5316      325F7400 
 5317              	.LASF82:
 5318 0fdd 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5318      53574954 
 5318      43483000 
 5319              	.LASF62:
 5320 0fe9 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5320      5F524553 
 5320      554C545F 
 5320      55504441 
 5320      54454400 
 5321              	.LASF353:
 5322 0ffd 4144435F 		.ascii	"ADC_GetResult16\000"
 5322      47657452 
 5322      6573756C 
 5322      74313600 
 5323              	.LASF264:
 5324 100d 5F64736F 		.ascii	"_dso_handle\000"
 5324      5F68616E 
 5324      646C6500 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 174


 5325              	.LASF352:
 5326 1019 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 5326      436F756E 
 5326      7473546F 
 5326      5F6D566F 
 5326      6C747300 
 5327              	.LASF169:
 5328 102d 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5328      73436D30 
 5328      53746174 
 5328      75734F66 
 5328      66736574 
 5329              	.LASF198:
 5330 1042 73616D70 		.ascii	"sampleCtrl\000"
 5330      6C654374 
 5330      726C00
 5331              	.LASF306:
 5332 104d 5F637674 		.ascii	"_cvtbuf\000"
 5332      62756600 
 5333              	.LASF4:
 5334 1055 756E7369 		.ascii	"unsigned char\000"
 5334      676E6564 
 5334      20636861 
 5334      7200
 5335              	.LASF89:
 5336 1063 414E415F 		.ascii	"ANA_TRIM0\000"
 5336      5452494D 
 5336      3000
 5337              	.LASF90:
 5338 106d 414E415F 		.ascii	"ANA_TRIM1\000"
 5338      5452494D 
 5338      3100
 5339              	.LASF10:
 5340 1077 5F5F7569 		.ascii	"__uint32_t\000"
 5340      6E743332 
 5340      5F7400
 5341              	.LASF93:
 5342 1082 4750494F 		.ascii	"GPIO_Type\000"
 5342      5F547970 
 5342      6500
 5343              	.LASF181:
 5344 108c 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5344      6F636B53 
 5344      74617475 
 5344      734F6666 
 5344      73657400 
 5345              	.LASF29:
 5346 10a0 494E5452 		.ascii	"INTR_CFG\000"
 5346      5F434647 
 5346      00
 5347              	.LASF332:
 5348 10a9 5F676574 		.ascii	"_getdate_err\000"
 5348      64617465 
 5348      5F657272 
 5348      00
 5349              	.LASF334:
 5350 10b6 5F6D6272 		.ascii	"_mbrtowc_state\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 175


 5350      746F7763 
 5350      5F737461 
 5350      746500
 5351              	.LASF67:
 5352 10c5 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 5352      52415445 
 5352      5F494E54 
 5352      525F4D41 
 5352      534B00
 5353              	.LASF88:
 5354 10d8 52455345 		.ascii	"RESERVED10\000"
 5354      52564544 
 5354      313000
 5355              	.LASF137:
 5356 10e3 666C6173 		.ascii	"flashEraseDelay\000"
 5356      68457261 
 5356      73654465 
 5356      6C617900 
 5357              	.LASF189:
 5358 10f3 5F426F6F 		.ascii	"_Bool\000"
 5358      6C00
 5359              	.LASF233:
 5360 10f9 636C6B44 		.ascii	"clkDivider\000"
 5360      69766964 
 5360      657200
 5361              	.LASF270:
 5362 1104 5F5F7362 		.ascii	"__sbuf\000"
 5362      756600
 5363              	.LASF66:
 5364 110b 53415455 		.ascii	"SATURATE_INTR_SET\000"
 5364      52415445 
 5364      5F494E54 
 5364      525F5345 
 5364      5400
 5365              	.LASF347:
 5366 111d 4144435F 		.ascii	"ADC_StopConvert\000"
 5366      53746F70 
 5366      436F6E76 
 5366      65727400 
 5367              	.LASF361:
 5368 112d 4144435F 		.ascii	"ADC_currentConfig\000"
 5368      63757272 
 5368      656E7443 
 5368      6F6E6669 
 5368      6700
 5369              	.LASF313:
 5370 113f 5F676C75 		.ascii	"_glue\000"
 5370      6500
 5371              	.LASF378:
 5372 1145 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5372      656E7365 
 5372      5F536361 
 5372      6E416C6C 
 5372      57696467 
 5373              	.LASF310:
 5374 115d 5F5F7367 		.ascii	"__sglue\000"
 5374      6C756500 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 176


 5375              	.LASF133:
 5376 1165 666C6173 		.ascii	"flashRwwRequired\000"
 5376      68527777 
 5376      52657175 
 5376      69726564 
 5376      00
 5377              	.LASF321:
 5378 1176 5F737472 		.ascii	"_strtok_last\000"
 5378      746F6B5F 
 5378      6C617374 
 5378      00
 5379              	.LASF328:
 5380 1183 5F6D6274 		.ascii	"_mbtowc_state\000"
 5380      6F77635F 
 5380      73746174 
 5380      6500
 5381              	.LASF162:
 5382 1191 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5382      50727443 
 5382      66674F66 
 5382      66736574 
 5382      00
 5383              	.LASF345:
 5384 11a2 70696E4E 		.ascii	"pinNum\000"
 5384      756D00
 5385              	.LASF363:
 5386 11a9 55415254 		.ascii	"UART_context\000"
 5386      5F636F6E 
 5386      74657874 
 5386      00
 5387              	.LASF43:
 5388 11b6 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5388      494E5452 
 5388      5F4D4153 
 5388      4B00
 5389              	.LASF263:
 5390 11c4 5F666E61 		.ascii	"_fnargs\000"
 5390      72677300 
 5391              	.LASF1:
 5392 11cc 7369676E 		.ascii	"signed char\000"
 5392      65642063 
 5392      68617200 
 5393              	.LASF315:
 5394 11d8 5F696F62 		.ascii	"_iobs\000"
 5394      7300
 5395              	.LASF143:
 5396 11de 64774368 		.ascii	"dwChOffset\000"
 5396      4F666673 
 5396      657400
 5397              	.LASF290:
 5398 11e9 5F726565 		.ascii	"_reent\000"
 5398      6E7400
 5399              	.LASF116:
 5400 11f0 63707573 		.ascii	"cpussIpcIrqNr\000"
 5400      73497063 
 5400      4972714E 
 5400      7200
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 177


 5401              	.LASF146:
 5402 11fe 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5402      43746C50 
 5402      7265656D 
 5402      70746162 
 5402      6C65506F 
 5403              	.LASF385:
 5404 1214 6D61696E 		.ascii	"main\000"
 5404      00
 5405              	.LASF168:
 5406 1219 63707573 		.ascii	"cpussCm4StatusOffset\000"
 5406      73436D34 
 5406      53746174 
 5406      75734F66 
 5406      66736574 
 5407              	.LASF182:
 5408 122e 63795F73 		.ascii	"cy_stc_device_t\000"
 5408      74635F64 
 5408      65766963 
 5408      655F7400 
 5409              	.LASF206:
 5410 123e 73617449 		.ascii	"satIntrMask\000"
 5410      6E74724D 
 5410      61736B00 
 5411              	.LASF349:
 5412 124a 5F5F656E 		.ascii	"__enable_irq\000"
 5412      61626C65 
 5412      5F697271 
 5412      00
 5413              	.LASF87:
 5414 1257 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 5414      53574954 
 5414      43485F53 
 5414      54415455 
 5414      5300
 5415              	.LASF265:
 5416 1269 5F666E74 		.ascii	"_fntypes\000"
 5416      79706573 
 5416      00
 5417              	.LASF113:
 5418 1272 70657269 		.ascii	"periVersion\000"
 5418      56657273 
 5418      696F6E00 
 5419              	.LASF272:
 5420 127e 5F73697A 		.ascii	"_size\000"
 5420      6500
 5421              	.LASF210:
 5422 1284 636F6E66 		.ascii	"configRouting\000"
 5422      6967526F 
 5422      7574696E 
 5422      6700
 5423              	.LASF103:
 5424 1292 70617373 		.ascii	"passBase\000"
 5424      42617365 
 5424      00
 5425              	.LASF354:
 5426 129b 4144435F 		.ascii	"ADC_Result\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 178


 5426      52657375 
 5426      6C7400
 5427              	.LASF35:
 5428 12a6 52455345 		.ascii	"RESERVED1\000"
 5428      52564544 
 5428      3100
 5429              	.LASF159:
 5430 12b0 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 5430      44697631 
 5430      365F3543 
 5430      746C4F66 
 5430      66736574 
 5431              	.LASF79:
 5432 12c5 53544154 		.ascii	"STATUS\000"
 5432      555300
 5433              	.LASF283:
 5434 12cc 5F6E6275 		.ascii	"_nbuf\000"
 5434      6600
 5435              	.LASF320:
 5436 12d2 5F756E75 		.ascii	"_unused_rand\000"
 5436      7365645F 
 5436      72616E64 
 5436      00
 5437              	.LASF142:
 5438 12df 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5438      6843746C 
 5438      4D61696E 
 5438      57733446 
 5438      72657100 
 5439              	.LASF55:
 5440 12f3 4348414E 		.ascii	"CHAN_CONFIG\000"
 5440      5F434F4E 
 5440      46494700 
 5441              	.LASF78:
 5442 12ff 52455345 		.ascii	"RESERVED7\000"
 5442      52564544 
 5442      3700
 5443              	.LASF196:
 5444 1309 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 5444      6E5F7361 
 5444      725F7261 
 5444      6E67655F 
 5444      64657465 
 5445              	.LASF289:
 5446 132c 5F666C61 		.ascii	"_flags2\000"
 5446      67733200 
 5447              	.LASF266:
 5448 1334 5F69735F 		.ascii	"_is_cxa\000"
 5448      63786100 
 5449              	.LASF220:
 5450 133c 72784275 		.ascii	"rxBuf\000"
 5450      6600
 5451              	.LASF317:
 5452 1342 5F736565 		.ascii	"_seed\000"
 5452      6400
 5453              	.LASF325:
 5454 1348 5F72616E 		.ascii	"_rand_next\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccKTKl8E.s 			page 179


 5454      645F6E65 
 5454      787400
 5455              	.LASF280:
 5456 1353 5F736565 		.ascii	"_seek\000"
 5456      6B00
 5457              	.LASF248:
 5458 1359 5F6E6578 		.ascii	"_next\000"
 5458      7400
 5459              	.LASF49:
 5460 135f 53414D50 		.ascii	"SAMPLE_TIME01\000"
 5460      4C455F54 
 5460      494D4530 
 5460      3100
 5461              	.LASF112:
 5462 136d 69706356 		.ascii	"ipcVersion\000"
 5462      65727369 
 5462      6F6E00
 5463              	.LASF294:
 5464 1378 5F737464 		.ascii	"_stderr\000"
 5464      65727200 
 5465              	.LASF340:
 5466 1380 5F6E6D61 		.ascii	"_nmalloc\000"
 5466      6C6C6F63 
 5466      00
 5467              	.LASF282:
 5468 1389 5F756275 		.ascii	"_ubuf\000"
 5468      6600
 5469              	.LASF221:
 5470 138f 72784275 		.ascii	"rxBufSize\000"
 5470      6653697A 
 5470      6500
 5471              	.LASF47:
 5472 1399 4354524C 		.ascii	"CTRL\000"
 5472      00
 5473              	.LASF365:
 5474 139e 766F6963 		.ascii	"voice\000"
 5474      6500
 5475              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
