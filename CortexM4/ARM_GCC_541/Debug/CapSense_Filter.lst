ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"CapSense_Filter.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  21              		.align	2
  22              		.global	CapSense_FtInitialize
  23              		.thumb
  24              		.thumb_func
  25              		.type	CapSense_FtInitialize, %function
  26              	CapSense_FtInitialize:
  27              	.LFB132:
  28              		.file 1 "Generated_Source\\PSoC6\\CapSense_Filter.c"
   1:Generated_Source\PSoC6/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC6/CapSense_Filter.c **** * \version 3.0
   4:Generated_Source\PSoC6/CapSense_Filter.c **** *
   5:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC6/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC6/CapSense_Filter.c **** *
   9:Generated_Source\PSoC6/CapSense_Filter.c **** * \see CapSense v3.0 Datasheet
  10:Generated_Source\PSoC6/CapSense_Filter.c **** *
  11:Generated_Source\PSoC6/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC6/CapSense_Filter.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC6/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC6/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC6/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC6/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC6/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC6/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC6/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC6/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC6/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC6/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC6/CapSense_Filter.c **** *
  26:Generated_Source\PSoC6/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC6/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC6/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 2


  30:Generated_Source\PSoC6/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC6/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC6/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC6/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC6/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC6/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC6/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC6/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/CapSense_Filter.c **** 
  40:Generated_Source\PSoC6/CapSense_Filter.c **** #include "stddef.h"
  41:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Filter.h"
  42:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC6/CapSense_Filter.c **** 
  44:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  45:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  46:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  47:Generated_Source\PSoC6/CapSense_Filter.c **** 
  48:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  49:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  50:Generated_Source\PSoC6/CapSense_Filter.c **** #endif
  51:Generated_Source\PSoC6/CapSense_Filter.c **** 
  52:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  53:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  54:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  55:Generated_Source\PSoC6/CapSense_Filter.c **** *
  56:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  57:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  58:Generated_Source\PSoC6/CapSense_Filter.c **** *
  59:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  60:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  61:Generated_Source\PSoC6/CapSense_Filter.c **** *
  62:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  63:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  64:Generated_Source\PSoC6/CapSense_Filter.c **** {
  29              		.loc 1 64 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE132:
  37              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  38 0002 00BF     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  39              		.align	2
  40              		.global	CapSense_FtInitializeBaselineChannel
  41              		.thumb
  42              		.thumb_func
  43              		.type	CapSense_FtInitializeBaselineChannel, %function
  44              	CapSense_FtInitializeBaselineChannel:
  45              	.LFB141:
  65:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  66:Generated_Source\PSoC6/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  67:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  68:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  69:Generated_Source\PSoC6/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 3


  70:Generated_Source\PSoC6/CapSense_Filter.c **** }
  71:Generated_Source\PSoC6/CapSense_Filter.c **** 
  72:Generated_Source\PSoC6/CapSense_Filter.c **** 
  73:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  74:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  75:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  76:Generated_Source\PSoC6/CapSense_Filter.c **** *
  77:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  78:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  79:Generated_Source\PSoC6/CapSense_Filter.c **** *
  80:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  81:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  82:Generated_Source\PSoC6/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  83:Generated_Source\PSoC6/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  84:Generated_Source\PSoC6/CapSense_Filter.c **** *
  85:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  86:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  87:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  88:Generated_Source\PSoC6/CapSense_Filter.c **** *
  89:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  90:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  91:Generated_Source\PSoC6/CapSense_Filter.c **** *
  92:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
  93:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  94:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
  95:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
  96:Generated_Source\PSoC6/CapSense_Filter.c **** *
  97:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  98:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateAllBaselines(void)
  99:Generated_Source\PSoC6/CapSense_Filter.c **** {
 100:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 101:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 102:Generated_Source\PSoC6/CapSense_Filter.c **** 
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 104:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 105:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 106:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107:Generated_Source\PSoC6/CapSense_Filter.c **** 
 108:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 109:Generated_Source\PSoC6/CapSense_Filter.c **** }
 110:Generated_Source\PSoC6/CapSense_Filter.c **** 
 111:Generated_Source\PSoC6/CapSense_Filter.c **** 
 112:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 114:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 115:Generated_Source\PSoC6/CapSense_Filter.c **** *
 116:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 117:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input parameter.
 118:Generated_Source\PSoC6/CapSense_Filter.c **** *
 119:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC6/CapSense_Filter.c **** *
 123:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 126:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 4


 127:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC6/CapSense_Filter.c **** *
 130:Generated_Source\PSoC6/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC6/CapSense_Filter.c **** *
 137:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 141:Generated_Source\PSoC6/CapSense_Filter.c **** *
 142:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC6/CapSense_Filter.c **** {
 145:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC6/CapSense_Filter.c **** 
 148:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 150:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC6/CapSense_Filter.c **** 
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC6/CapSense_Filter.c **** }
 161:Generated_Source\PSoC6/CapSense_Filter.c **** 
 162:Generated_Source\PSoC6/CapSense_Filter.c **** 
 163:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC6/CapSense_Filter.c **** *
 167:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC6/CapSense_Filter.c **** *
 170:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC6/CapSense_Filter.c **** *
 175:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC6/CapSense_Filter.c **** *
 179:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC6/CapSense_Filter.c **** *
 182:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   widgetId
 183:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 5


 184:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC6/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC6/CapSense_Filter.c **** *
 188:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   sensorId
 189:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC6/CapSense_Filter.c **** *
 194:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC6/CapSense_Filter.c **** *
 199:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC6/CapSense_Filter.c **** {
 202:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 203:Generated_Source\PSoC6/CapSense_Filter.c **** 
 204:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC6/CapSense_Filter.c **** 
 213:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC6/CapSense_Filter.c ****         if (CY_RET_SUCCESS != result)
 215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC6/CapSense_Filter.c ****             result = CY_RET_BAD_DATA;
 217:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC6/CapSense_Filter.c **** 
 221:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC6/CapSense_Filter.c **** }
 223:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC6/CapSense_Filter.c **** *
 228:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC6/CapSense_Filter.c **** *
 231:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC6/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC6/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC6/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC6/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC6/CapSense_Filter.c **** *
 237:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrWidgetRam
 238:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 240:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 6


 241:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensor
 242:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC6/CapSense_Filter.c **** *
 245:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType
 246:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC6/CapSense_Filter.c **** *
 248:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS if baseline updating was successful;
 251:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC6/CapSense_Filter.c **** *    baseline and its inversion doesn't matched
 253:Generated_Source\PSoC6/CapSense_Filter.c **** *
 254:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC6/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC6/CapSense_Filter.c **** {
 260:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 265:Generated_Source\PSoC6/CapSense_Filter.c **** 
 266:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC6/CapSense_Filter.c **** 
 270:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC6/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC6/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC6/CapSense_Filter.c **** 
 282:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC6/CapSense_Filter.c **** 
 295:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
 297:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 7


 298:Generated_Source\PSoC6/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC6/CapSense_Filter.c **** 
 316:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC6/CapSense_Filter.c **** 
 328:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC6/CapSense_Filter.c **** 
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC6/CapSense_Filter.c **** 
 339:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 342:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 344:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC6/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 354:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 8


 355:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC6/CapSense_Filter.c **** 
 357:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC6/CapSense_Filter.c **** 
 363:Generated_Source\PSoC6/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC6/CapSense_Filter.c **** 
 368:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 370:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 371:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 373:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC6/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC6/CapSense_Filter.c **** 
 378:Generated_Source\PSoC6/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC6/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC6/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC6/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC6/CapSense_Filter.c **** 
 383:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC6/CapSense_Filter.c **** 
 385:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC6/CapSense_Filter.c **** 
 390:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC6/CapSense_Filter.c **** 
 396:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC6/CapSense_Filter.c **** }
 399:Generated_Source\PSoC6/CapSense_Filter.c **** 
 400:Generated_Source\PSoC6/CapSense_Filter.c **** 
 401:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC6/CapSense_Filter.c **** *
 405:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC6/CapSense_Filter.c **** *
 408:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC6/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
 411:Generated_Source\PSoC6/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 9


 412:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 413:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 414:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC6/CapSense_Filter.c **** *
 418:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC6/CapSense_Filter.c **** {
 421:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC6/CapSense_Filter.c **** 
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC6/CapSense_Filter.c **** }
 428:Generated_Source\PSoC6/CapSense_Filter.c **** 
 429:Generated_Source\PSoC6/CapSense_Filter.c **** 
 430:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6/CapSense_Filter.c **** *
 434:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC6/CapSense_Filter.c **** *
 438:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 442:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 443:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC6/CapSense_Filter.c **** *
 447:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 448:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC6/CapSense_Filter.c **** *
 454:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC6/CapSense_Filter.c **** {
 457:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC6/CapSense_Filter.c **** 
 460:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
 468:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 10


 469:Generated_Source\PSoC6/CapSense_Filter.c **** }
 470:Generated_Source\PSoC6/CapSense_Filter.c **** 
 471:Generated_Source\PSoC6/CapSense_Filter.c **** 
 472:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC6/CapSense_Filter.c **** *
 476:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC6/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC6/CapSense_Filter.c **** *
 480:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC6/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC6/CapSense_Filter.c **** *
 484:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId
 485:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC6/CapSense_Filter.c **** *
 491:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId
 492:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC6/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC6/CapSense_Filter.c **** *
 498:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC6/CapSense_Filter.c **** {
 501:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC6/CapSense_Filter.c **** 
 505:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC6/CapSense_Filter.c **** }
 511:Generated_Source\PSoC6/CapSense_Filter.c **** 
 512:Generated_Source\PSoC6/CapSense_Filter.c **** 
 513:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC6/CapSense_Filter.c **** *
 517:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 518:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 519:Generated_Source\PSoC6/CapSense_Filter.c **** *
 520:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 521:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 522:Generated_Source\PSoC6/CapSense_Filter.c **** *
 523:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 524:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 525:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 11


 526:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 527:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 528:Generated_Source\PSoC6/CapSense_Filter.c **** {
 529:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 530:Generated_Source\PSoC6/CapSense_Filter.c **** 
 531:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 533:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 534:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 535:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 536:Generated_Source\PSoC6/CapSense_Filter.c **** }
 537:Generated_Source\PSoC6/CapSense_Filter.c **** 
 538:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 540:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 541:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6/CapSense_Filter.c **** *
 543:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 544:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 545:Generated_Source\PSoC6/CapSense_Filter.c **** *
 546:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 547:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 548:Generated_Source\PSoC6/CapSense_Filter.c **** *
 549:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 550:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 551:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 552:Generated_Source\PSoC6/CapSense_Filter.c **** *
 553:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 555:Generated_Source\PSoC6/CapSense_Filter.c **** {
  46              		.loc 1 555 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.LVL0:
 556:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 557:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  52              		.loc 1 557 0
  53 0000 C9B2     		uxtb	r1, r1
  54              	.LVL1:
  55 0002 0629     		cmp	r1, #6
  56 0004 02D0     		beq	.L3
 558:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 559:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 560:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 561:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  57              		.loc 1 561 0
  58 0006 8318     		adds	r3, r0, r2
  59 0008 0021     		movs	r1, #0
  60 000a 1971     		strb	r1, [r3, #4]
  61              	.L3:
 562:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 563:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 564:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 565:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 566:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 12


 567:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 568:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 569:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 570:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 571:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 572:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 573:Generated_Source\PSoC6/CapSense_Filter.c ****     #else
 574:Generated_Source\PSoC6/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 575:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 577:Generated_Source\PSoC6/CapSense_Filter.c **** 
 578:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  62              		.loc 1 578 0
  63 000c 30F81210 		ldrh	r1, [r0, r2, lsl #1]
  64 0010 00EB4203 		add	r3, r0, r2, lsl #1
  65 0014 5980     		strh	r1, [r3, #2]	@ movhi
 579:Generated_Source\PSoC6/CapSense_Filter.c **** 
 580:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 581:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 582:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
 583:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 584:Generated_Source\PSoC6/CapSense_Filter.c **** 
 585:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  66              		.loc 1 585 0
  67 0016 0244     		add	r2, r2, r0
  68              	.LVL2:
  69 0018 0023     		movs	r3, #0
  70 001a 1372     		strb	r3, [r2, #8]
  71 001c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE141:
  74              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  75 001e 00BF     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_FtInitializeBaseline
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_FtInitializeBaseline, %function
  81              	CapSense_FtInitializeBaseline:
  82              	.LFB140:
 528:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
  83              		.loc 1 528 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL3:
  88 0000 70B5     		push	{r4, r5, r6, lr}
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 0646     		mov	r6, r0
  95 0004 0D46     		mov	r5, r1
  96              	.LVL4:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
  97              		.loc 1 532 0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 13


  98 0006 0123     		movs	r3, #1
  99 0008 05E0     		b	.L5
 100              	.LVL5:
 101              	.L6:
 534:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 102              		.loc 1 534 0
 103 000a 2246     		mov	r2, r4
 104 000c 2946     		mov	r1, r5
 105 000e 3046     		mov	r0, r6
 106 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 107              	.LVL6:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 108              		.loc 1 532 0
 109 0014 2346     		mov	r3, r4
 110              	.LVL7:
 111              	.L5:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 112              		.loc 1 532 0 is_stmt 0 discriminator 1
 113 0016 5C1E     		subs	r4, r3, #1
 114              	.LVL8:
 115 0018 002B     		cmp	r3, #0
 116 001a F6D1     		bne	.L6
 536:Generated_Source\PSoC6/CapSense_Filter.c **** 
 117              		.loc 1 536 0 is_stmt 1
 118 001c 70BD     		pop	{r4, r5, r6, pc}
 119              		.cfi_endproc
 120              	.LFE140:
 121              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 122 001e 00BF     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 123              		.align	2
 124              		.global	CapSense_InitializeSensorBaseline
 125              		.thumb
 126              		.thumb_func
 127              		.type	CapSense_InitializeSensorBaseline, %function
 128              	CapSense_InitializeSensorBaseline:
 129              	.LFB139:
 500:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 130              		.loc 1 500 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              	.LVL9:
 135 0000 08B5     		push	{r3, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
 139              	.LVL10:
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 140              		.loc 1 506 0
 141 0002 064B     		ldr	r3, .L10
 142 0004 03EB4013 		add	r3, r3, r0, lsl #5
 143 0008 9868     		ldr	r0, [r3, #8]
 144              	.LVL11:
 507:Generated_Source\PSoC6/CapSense_Filter.c **** 
 145              		.loc 1 507 0
 146 000a 01EB8101 		add	r1, r1, r1, lsl #2
 147              	.LVL12:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 14


 148 000e 4A00     		lsls	r2, r1, #1
 149              	.LVL13:
 509:Generated_Source\PSoC6/CapSense_Filter.c **** }
 150              		.loc 1 509 0
 151 0010 997E     		ldrb	r1, [r3, #26]	@ zero_extendqisi2
 152 0012 1044     		add	r0, r0, r2
 153              	.LVL14:
 154 0014 FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 155              	.LVL15:
 156 0018 08BD     		pop	{r3, pc}
 157              	.L11:
 158 001a 00BF     		.align	2
 159              	.L10:
 160 001c 00000000 		.word	CapSense_dsFlash
 161              		.cfi_endproc
 162              	.LFE139:
 163              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 164              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 165              		.align	2
 166              		.global	CapSense_InitializeWidgetBaseline
 167              		.thumb
 168              		.thumb_func
 169              		.type	CapSense_InitializeWidgetBaseline, %function
 170              	CapSense_InitializeWidgetBaseline:
 171              	.LFB138:
 456:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 172              		.loc 1 456 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL16:
 177 0000 38B5     		push	{r3, r4, r5, lr}
 178              		.cfi_def_cfa_offset 16
 179              		.cfi_offset 3, -16
 180              		.cfi_offset 4, -12
 181              		.cfi_offset 5, -8
 182              		.cfi_offset 14, -4
 183 0002 0546     		mov	r5, r0
 184              	.LVL17:
 463:Generated_Source\PSoC6/CapSense_Filter.c **** 
 185              		.loc 1 463 0
 186 0004 064B     		ldr	r3, .L16
 187 0006 03EB4013 		add	r3, r3, r0, lsl #5
 188 000a 1B8B     		ldrh	r3, [r3, #24]
 189              	.LVL18:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 190              		.loc 1 465 0
 191 000c 04E0     		b	.L13
 192              	.LVL19:
 193              	.L14:
 467:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 194              		.loc 1 467 0
 195 000e 2146     		mov	r1, r4
 196 0010 2846     		mov	r0, r5
 197 0012 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 198              	.LVL20:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 15


 199              		.loc 1 465 0
 200 0016 2346     		mov	r3, r4
 201              	.LVL21:
 202              	.L13:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 203              		.loc 1 465 0 is_stmt 0 discriminator 1
 204 0018 5C1E     		subs	r4, r3, #1
 205              	.LVL22:
 206 001a 002B     		cmp	r3, #0
 207 001c F7D1     		bne	.L14
 469:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208              		.loc 1 469 0 is_stmt 1
 209 001e 38BD     		pop	{r3, r4, r5, pc}
 210              	.LVL23:
 211              	.L17:
 212              		.align	2
 213              	.L16:
 214 0020 00000000 		.word	CapSense_dsFlash
 215              		.cfi_endproc
 216              	.LFE138:
 217              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 218              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 219              		.align	2
 220              		.global	CapSense_InitializeAllBaselines
 221              		.thumb
 222              		.thumb_func
 223              		.type	CapSense_InitializeAllBaselines, %function
 224              	CapSense_InitializeAllBaselines:
 225              	.LFB137:
 420:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 226              		.loc 1 420 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 10B5     		push	{r4, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 234              	.LVL24:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 235              		.loc 1 423 0
 236 0002 0223     		movs	r3, #2
 237 0004 03E0     		b	.L19
 238              	.LVL25:
 239              	.L20:
 425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 240              		.loc 1 425 0
 241 0006 2046     		mov	r0, r4
 242 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 243              	.LVL26:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 244              		.loc 1 423 0
 245 000c 2346     		mov	r3, r4
 246              	.LVL27:
 247              	.L19:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 248              		.loc 1 423 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 16


 249 000e 5C1E     		subs	r4, r3, #1
 250              	.LVL28:
 251 0010 002B     		cmp	r3, #0
 252 0012 F8D1     		bne	.L20
 427:Generated_Source\PSoC6/CapSense_Filter.c **** 
 253              		.loc 1 427 0 is_stmt 1
 254 0014 10BD     		pop	{r4, pc}
 255              		.cfi_endproc
 256              	.LFE137:
 257              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 258 0016 00BF     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 259              		.align	2
 260              		.global	CapSense_FtIIR1stOrder
 261              		.thumb
 262              		.thumb_func
 263              		.type	CapSense_FtIIR1stOrder, %function
 264              	CapSense_FtIIR1stOrder:
 265              	.LFB142:
 586:Generated_Source\PSoC6/CapSense_Filter.c **** }
 587:Generated_Source\PSoC6/CapSense_Filter.c **** 
 588:Generated_Source\PSoC6/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 589:Generated_Source\PSoC6/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 590:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 591:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 592:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 593:Generated_Source\PSoC6/CapSense_Filter.c **** *
 594:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 595:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the 
 596:Generated_Source\PSoC6/CapSense_Filter.c **** *  sensors of all the widgets.
 597:Generated_Source\PSoC6/CapSense_Filter.c **** *
 598:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 599:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the 
 600:Generated_Source\PSoC6/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines. 
 601:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense 
 602:Generated_Source\PSoC6/CapSense_Filter.c **** *  operation initialization.
 603:Generated_Source\PSoC6/CapSense_Filter.c **** *
 604:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 605:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 606:Generated_Source\PSoC6/CapSense_Filter.c **** {
 607:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 608:Generated_Source\PSoC6/CapSense_Filter.c **** 
 609:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 610:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 611:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 612:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613:Generated_Source\PSoC6/CapSense_Filter.c **** }
 614:Generated_Source\PSoC6/CapSense_Filter.c **** 
 615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 618:Generated_Source\PSoC6/CapSense_Filter.c **** *
 619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 620:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 621:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 622:Generated_Source\PSoC6/CapSense_Filter.c **** *
 623:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 624:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 17


 625:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 626:Generated_Source\PSoC6/CapSense_Filter.c **** *
 627:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 628:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all 
 629:Generated_Source\PSoC6/CapSense_Filter.c **** *  the sensors in the widget.
 630:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 631:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 632:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 633:Generated_Source\PSoC6/CapSense_Filter.c **** *
 634:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 635:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 636:Generated_Source\PSoC6/CapSense_Filter.c **** {
 637:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 638:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 639:Generated_Source\PSoC6/CapSense_Filter.c **** 
 640:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 641:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 642:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 643:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 644:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
 645:Generated_Source\PSoC6/CapSense_Filter.c ****     
 646:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 647:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 648:Generated_Source\PSoC6/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 649:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 650:Generated_Source\PSoC6/CapSense_Filter.c **** 
 651:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 652:Generated_Source\PSoC6/CapSense_Filter.c **** 
 653:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 654:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 655:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 656:Generated_Source\PSoC6/CapSense_Filter.c **** 
 657:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 658:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 659:Generated_Source\PSoC6/CapSense_Filter.c **** 
 660:Generated_Source\PSoC6/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
 661:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 662:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 663:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 664:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 665:Generated_Source\PSoC6/CapSense_Filter.c **** 
 666:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 667:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 668:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 669:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 670:Generated_Source\PSoC6/CapSense_Filter.c **** 
 671:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 672:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 673:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 674:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 675:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 676:Generated_Source\PSoC6/CapSense_Filter.c **** 
 677:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 678:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 679:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 680:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 681:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 18


 682:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 683:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
 684:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 685:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 686:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 687:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 688:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 689:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 690:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 691:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 692:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 693:Generated_Source\PSoC6/CapSense_Filter.c **** 
 694:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 696:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 697:Generated_Source\PSoC6/CapSense_Filter.c **** 
 698:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 699:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 700:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 701:Generated_Source\PSoC6/CapSense_Filter.c **** 
 702:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
 703:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 704:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 705:Generated_Source\PSoC6/CapSense_Filter.c **** 
 706:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 707:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 709:Generated_Source\PSoC6/CapSense_Filter.c **** 
 710:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 711:Generated_Source\PSoC6/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 712:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 713:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 714:Generated_Source\PSoC6/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 715:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 716:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 717:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 718:Generated_Source\PSoC6/CapSense_Filter.c **** }
 719:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 720:Generated_Source\PSoC6/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 721:Generated_Source\PSoC6/CapSense_Filter.c **** 
 722:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 723:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 724:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 725:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 726:Generated_Source\PSoC6/CapSense_Filter.c **** *
 727:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initialize the IIR filter history.
 728:Generated_Source\PSoC6/CapSense_Filter.c **** *
 729:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initialize the IIR filter history.
 730:Generated_Source\PSoC6/CapSense_Filter.c **** *
 731:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 732:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 733:Generated_Source\PSoC6/CapSense_Filter.c **** *
 734:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 735:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 736:Generated_Source\PSoC6/CapSense_Filter.c **** {
 737:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 738:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 19


 739:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 740:Generated_Source\PSoC6/CapSense_Filter.c **** 
 741:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 742:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 743:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 744:Generated_Source\PSoC6/CapSense_Filter.c **** 
 745:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 746:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 747:Generated_Source\PSoC6/CapSense_Filter.c **** 
 748:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 749:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 750:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 751:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 752:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 753:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 754:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 755:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 756:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 757:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 758:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 759:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 760:Generated_Source\PSoC6/CapSense_Filter.c **** 
 761:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 762:Generated_Source\PSoC6/CapSense_Filter.c **** }
 763:Generated_Source\PSoC6/CapSense_Filter.c **** 
 764:Generated_Source\PSoC6/CapSense_Filter.c **** 
 765:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 766:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 767:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 768:Generated_Source\PSoC6/CapSense_Filter.c **** *
 769:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 770:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 771:Generated_Source\PSoC6/CapSense_Filter.c **** *
 772:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 773:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 774:Generated_Source\PSoC6/CapSense_Filter.c **** *
 775:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 776:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 777:Generated_Source\PSoC6/CapSense_Filter.c **** *
 778:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 779:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 780:Generated_Source\PSoC6/CapSense_Filter.c **** {
 781:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 782:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 783:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 784:Generated_Source\PSoC6/CapSense_Filter.c **** 
 785:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 786:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 787:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 788:Generated_Source\PSoC6/CapSense_Filter.c **** 
 789:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 790:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 791:Generated_Source\PSoC6/CapSense_Filter.c **** 
 792:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 793:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 794:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 795:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 20


 796:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 797:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 798:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 799:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 800:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 801:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 802:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 803:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 804:Generated_Source\PSoC6/CapSense_Filter.c **** 
 805:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 806:Generated_Source\PSoC6/CapSense_Filter.c **** }
 807:Generated_Source\PSoC6/CapSense_Filter.c **** 
 808:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 809:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 810:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6/CapSense_Filter.c **** *
 812:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the IIR filter history.
 813:Generated_Source\PSoC6/CapSense_Filter.c **** *
 814:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the IIR filter history.
 815:Generated_Source\PSoC6/CapSense_Filter.c **** *
 816:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 817:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 818:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 819:Generated_Source\PSoC6/CapSense_Filter.c **** *
 820:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 821:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 822:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 823:Generated_Source\PSoC6/CapSense_Filter.c **** {
 824:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 825:Generated_Source\PSoC6/CapSense_Filter.c **** 
 826:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 827:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 828:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 829:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 830:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 832:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 833:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 834:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 835:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 836:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 837:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 838:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 839:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 840:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 841:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 842:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 843:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 844:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 845:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 846:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 847:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 848:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 849:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 850:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 851:Generated_Source\PSoC6/CapSense_Filter.c **** }
 852:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 21


 853:Generated_Source\PSoC6/CapSense_Filter.c **** 
 854:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 855:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 856:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 857:Generated_Source\PSoC6/CapSense_Filter.c **** *
 858:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Run the IIR filter.
 859:Generated_Source\PSoC6/CapSense_Filter.c **** *
 860:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Run the IIR filter.
 861:Generated_Source\PSoC6/CapSense_Filter.c **** *
 862:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 863:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 864:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 865:Generated_Source\PSoC6/CapSense_Filter.c **** *
 866:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 867:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 868:Generated_Source\PSoC6/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 869:Generated_Source\PSoC6/CapSense_Filter.c **** {
 870:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 871:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
 872:Generated_Source\PSoC6/CapSense_Filter.c **** 
 873:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 874:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 875:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 876:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 877:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 878:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 879:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
 880:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 881:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 882:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 883:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 884:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 885:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 886:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = CY_LO8
 887:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 888:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 889:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 890:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 891:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 892:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 893:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 894:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 895:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 896:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 897:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 898:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 899:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 900:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 901:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 902:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 903:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 904:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 905:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 906:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 907:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 908:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp >>
 909:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = CY_LO8(temp)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 22


 910:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 911:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 912:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 913:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 914:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 915:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 916:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp);
 917:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 918:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 919:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 920:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 921:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 922:Generated_Source\PSoC6/CapSense_Filter.c **** }
 923:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 924:Generated_Source\PSoC6/CapSense_Filter.c **** 
 925:Generated_Source\PSoC6/CapSense_Filter.c **** 
 926:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 927:Generated_Source\PSoC6/CapSense_Filter.c **** 
 928:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 929:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 930:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 931:Generated_Source\PSoC6/CapSense_Filter.c **** *
 932:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter history.
 933:Generated_Source\PSoC6/CapSense_Filter.c **** *
 934:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter history.
 935:Generated_Source\PSoC6/CapSense_Filter.c **** *
 936:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 937:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 938:Generated_Source\PSoC6/CapSense_Filter.c **** *
 939:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 940:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 941:Generated_Source\PSoC6/CapSense_Filter.c **** {
 942:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 943:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 944:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 945:Generated_Source\PSoC6/CapSense_Filter.c **** 
 946:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 947:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 948:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 949:Generated_Source\PSoC6/CapSense_Filter.c **** 
 950:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 951:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 952:Generated_Source\PSoC6/CapSense_Filter.c **** 
 953:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 954:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 955:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 956:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 957:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 958:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 959:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 960:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 961:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 962:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 963:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 964:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 965:Generated_Source\PSoC6/CapSense_Filter.c **** 
 966:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 23


 967:Generated_Source\PSoC6/CapSense_Filter.c **** }
 968:Generated_Source\PSoC6/CapSense_Filter.c **** 
 969:Generated_Source\PSoC6/CapSense_Filter.c **** 
 970:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 971:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
 972:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 973:Generated_Source\PSoC6/CapSense_Filter.c **** *
 974:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input
 975:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 976:Generated_Source\PSoC6/CapSense_Filter.c **** *
 977:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input
 978:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 979:Generated_Source\PSoC6/CapSense_Filter.c **** *
 980:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 981:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 982:Generated_Source\PSoC6/CapSense_Filter.c **** *
 983:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 984:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
 985:Generated_Source\PSoC6/CapSense_Filter.c **** {
 986:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 987:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 988:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 989:Generated_Source\PSoC6/CapSense_Filter.c **** 
 990:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 991:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 992:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 993:Generated_Source\PSoC6/CapSense_Filter.c **** 
 994:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 995:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 996:Generated_Source\PSoC6/CapSense_Filter.c **** 
 997:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 998:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 999:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1000:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1001:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1002:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1003:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1004:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1005:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1006:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1007:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1008:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1009:Generated_Source\PSoC6/CapSense_Filter.c **** 
1010:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1011:Generated_Source\PSoC6/CapSense_Filter.c **** }
1012:Generated_Source\PSoC6/CapSense_Filter.c **** 
1013:Generated_Source\PSoC6/CapSense_Filter.c **** 
1014:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1015:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1016:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1017:Generated_Source\PSoC6/CapSense_Filter.c **** *
1018:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter.
1019:Generated_Source\PSoC6/CapSense_Filter.c **** *
1020:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter.
1021:Generated_Source\PSoC6/CapSense_Filter.c **** *
1022:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1023:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 24


1024:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1025:Generated_Source\PSoC6/CapSense_Filter.c **** *
1026:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1027:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1028:Generated_Source\PSoC6/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1029:Generated_Source\PSoC6/CapSense_Filter.c **** {
1030:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1031:Generated_Source\PSoC6/CapSense_Filter.c **** 
1032:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1033:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1034:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1035:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1036:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1037:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1038:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1039:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1040:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1041:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1042:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1043:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1044:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1045:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1046:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1047:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1048:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC6/CapSense_Filter.c **** }
1050:Generated_Source\PSoC6/CapSense_Filter.c **** 
1051:Generated_Source\PSoC6/CapSense_Filter.c **** 
1052:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1053:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1054:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1055:Generated_Source\PSoC6/CapSense_Filter.c **** *
1056:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the Median filter.
1057:Generated_Source\PSoC6/CapSense_Filter.c **** *
1058:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the Median filter.
1059:Generated_Source\PSoC6/CapSense_Filter.c **** *
1060:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1061:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1062:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1063:Generated_Source\PSoC6/CapSense_Filter.c **** *
1064:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1065:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1066:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1067:Generated_Source\PSoC6/CapSense_Filter.c **** {
1068:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1069:Generated_Source\PSoC6/CapSense_Filter.c **** 
1070:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
1071:Generated_Source\PSoC6/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1072:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 temp;
1073:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1074:Generated_Source\PSoC6/CapSense_Filter.c **** 
1075:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1076:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1077:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1078:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1079:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1080:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 25


1081:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1082:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1083:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1084:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1085:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1086:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1087:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1088:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1089:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1090:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1091:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1092:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1093:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1094:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1095:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1096:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1097:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1099:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC6/CapSense_Filter.c **** }
1103:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1104:Generated_Source\PSoC6/CapSense_Filter.c **** 
1105:Generated_Source\PSoC6/CapSense_Filter.c **** 
1106:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1107:Generated_Source\PSoC6/CapSense_Filter.c **** 
1108:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1109:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1110:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1111:Generated_Source\PSoC6/CapSense_Filter.c **** *
1112:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter history.
1113:Generated_Source\PSoC6/CapSense_Filter.c **** *
1114:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter history.
1115:Generated_Source\PSoC6/CapSense_Filter.c **** *
1116:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1117:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1118:Generated_Source\PSoC6/CapSense_Filter.c **** *
1119:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1120:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1121:Generated_Source\PSoC6/CapSense_Filter.c **** {
1122:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1123:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1124:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1125:Generated_Source\PSoC6/CapSense_Filter.c **** 
1126:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1127:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1128:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1129:Generated_Source\PSoC6/CapSense_Filter.c **** 
1130:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1131:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1132:Generated_Source\PSoC6/CapSense_Filter.c **** 
1133:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1134:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1135:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1136:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1137:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 26


1138:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1139:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1140:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1141:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1142:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1143:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1144:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1145:Generated_Source\PSoC6/CapSense_Filter.c **** 
1146:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1147:Generated_Source\PSoC6/CapSense_Filter.c **** }
1148:Generated_Source\PSoC6/CapSense_Filter.c **** 
1149:Generated_Source\PSoC6/CapSense_Filter.c **** 
1150:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1151:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1152:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1153:Generated_Source\PSoC6/CapSense_Filter.c **** *
1154:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input
1155:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1156:Generated_Source\PSoC6/CapSense_Filter.c **** *
1157:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input
1158:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1159:Generated_Source\PSoC6/CapSense_Filter.c **** *
1160:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1161:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1162:Generated_Source\PSoC6/CapSense_Filter.c **** *
1163:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1164:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
1165:Generated_Source\PSoC6/CapSense_Filter.c **** {
1166:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1167:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1168:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1169:Generated_Source\PSoC6/CapSense_Filter.c **** 
1170:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1171:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1172:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1173:Generated_Source\PSoC6/CapSense_Filter.c **** 
1174:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1175:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1176:Generated_Source\PSoC6/CapSense_Filter.c **** 
1177:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1178:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1179:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1180:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1181:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1182:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1183:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1184:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1185:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1186:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1187:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1188:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1189:Generated_Source\PSoC6/CapSense_Filter.c **** 
1190:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1191:Generated_Source\PSoC6/CapSense_Filter.c **** }
1192:Generated_Source\PSoC6/CapSense_Filter.c **** 
1193:Generated_Source\PSoC6/CapSense_Filter.c **** 
1194:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 27


1195:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1196:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Filter.c **** *
1198:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter.
1199:Generated_Source\PSoC6/CapSense_Filter.c **** *
1200:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter.
1201:Generated_Source\PSoC6/CapSense_Filter.c **** *
1202:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1203:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1204:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1205:Generated_Source\PSoC6/CapSense_Filter.c **** *
1206:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1207:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1208:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1209:Generated_Source\PSoC6/CapSense_Filter.c **** {
1210:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1211:Generated_Source\PSoC6/CapSense_Filter.c **** 
1212:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1213:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1214:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1216:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1217:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1218:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1219:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1220:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1221:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1222:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1223:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1224:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1225:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1226:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1227:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1228:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1229:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1230:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
1231:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1232:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1233:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1234:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1235:Generated_Source\PSoC6/CapSense_Filter.c **** }
1236:Generated_Source\PSoC6/CapSense_Filter.c **** 
1237:Generated_Source\PSoC6/CapSense_Filter.c **** 
1238:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1239:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1240:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6/CapSense_Filter.c **** *
1242:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the average filter.
1243:Generated_Source\PSoC6/CapSense_Filter.c **** *
1244:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the average filter.
1245:Generated_Source\PSoC6/CapSense_Filter.c **** *
1246:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1247:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1248:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1249:Generated_Source\PSoC6/CapSense_Filter.c **** *
1250:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1251:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 28


1252:Generated_Source\PSoC6/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1253:Generated_Source\PSoC6/CapSense_Filter.c **** {
1254:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1255:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
1256:Generated_Source\PSoC6/CapSense_Filter.c **** 
1257:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1258:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1259:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1260:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1261:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1262:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1263:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1264:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1265:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1266:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1267:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1268:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1269:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1270:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1271:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1272:Generated_Source\PSoC6/CapSense_Filter.c **** 
1273:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1274:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1275:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1276:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1277:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1278:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1279:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1280:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1281:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1282:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1284:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1285:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1286:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1287:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1288:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1289:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1290:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1291:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1292:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1293:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1294:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1295:Generated_Source\PSoC6/CapSense_Filter.c **** 
1296:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1297:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1298:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
1299:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1300:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1301:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1302:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1303:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1304:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1305:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1306:Generated_Source\PSoC6/CapSense_Filter.c **** }
1307:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1308:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 29


1309:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1310:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1311:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1312:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1313:Generated_Source\PSoC6/CapSense_Filter.c **** *
1314:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter history.
1315:Generated_Source\PSoC6/CapSense_Filter.c **** *
1316:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter history.
1317:Generated_Source\PSoC6/CapSense_Filter.c **** *
1318:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1319:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1320:Generated_Source\PSoC6/CapSense_Filter.c **** *
1321:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1322:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1323:Generated_Source\PSoC6/CapSense_Filter.c **** {
1324:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1325:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1326:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1327:Generated_Source\PSoC6/CapSense_Filter.c **** 
1328:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1329:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1330:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1331:Generated_Source\PSoC6/CapSense_Filter.c **** 
1332:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1333:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1334:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1335:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1336:Generated_Source\PSoC6/CapSense_Filter.c **** }
1337:Generated_Source\PSoC6/CapSense_Filter.c **** 
1338:Generated_Source\PSoC6/CapSense_Filter.c **** 
1339:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1340:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1341:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1342:Generated_Source\PSoC6/CapSense_Filter.c **** *
1343:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the ALP filter algorithm on a sensor indicated by an input
1344:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1345:Generated_Source\PSoC6/CapSense_Filter.c **** *
1346:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the ALP filter algorithm on a sensor indicated by an input
1347:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1348:Generated_Source\PSoC6/CapSense_Filter.c **** *
1349:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1350:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1351:Generated_Source\PSoC6/CapSense_Filter.c **** *
1352:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1353:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1354:Generated_Source\PSoC6/CapSense_Filter.c **** {
1355:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1356:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1357:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1358:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1359:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1360:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1361:Generated_Source\PSoC6/CapSense_Filter.c **** 
1362:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1363:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1364:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1365:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 30


1366:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1367:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1368:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1369:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1370:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1371:Generated_Source\PSoC6/CapSense_Filter.c **** 
1372:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1373:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1374:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1375:Generated_Source\PSoC6/CapSense_Filter.c **** 
1376:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1377:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1378:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1379:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1380:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1381:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1382:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1383:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1384:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1385:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1386:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1387:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1388:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1389:Generated_Source\PSoC6/CapSense_Filter.c **** }
1390:Generated_Source\PSoC6/CapSense_Filter.c **** 
1391:Generated_Source\PSoC6/CapSense_Filter.c **** 
1392:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1393:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1394:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1395:Generated_Source\PSoC6/CapSense_Filter.c **** *
1396:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter.
1397:Generated_Source\PSoC6/CapSense_Filter.c **** *
1398:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter.
1399:Generated_Source\PSoC6/CapSense_Filter.c **** *
1400:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1401:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1402:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1403:Generated_Source\PSoC6/CapSense_Filter.c **** *
1404:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1405:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1406:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1407:Generated_Source\PSoC6/CapSense_Filter.c ****                                             uint32 wdType)
1408:Generated_Source\PSoC6/CapSense_Filter.c **** {
1409:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1410:Generated_Source\PSoC6/CapSense_Filter.c **** 
1411:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1412:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1413:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1414:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1415:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1416:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1417:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1418:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1419:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1420:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1421:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1422:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 31


1423:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1424:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1426:Generated_Source\PSoC6/CapSense_Filter.c **** }
1427:Generated_Source\PSoC6/CapSense_Filter.c **** 
1428:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1430:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC6/CapSense_Filter.c **** *
1432:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Prepares ALP configuration structure and runs the filter.
1433:Generated_Source\PSoC6/CapSense_Filter.c **** *
1434:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Prepares ALP configuration structure and runs the filter.
1435:Generated_Source\PSoC6/CapSense_Filter.c **** *
1436:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1437:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrRamWdgt       The pointer to the RAM widget object.
1438:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1439:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1440:Generated_Source\PSoC6/CapSense_Filter.c **** *
1441:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1442:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1443:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1444:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1445:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1446:Generated_Source\PSoC6/CapSense_Filter.c **** {
1447:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1448:Generated_Source\PSoC6/CapSense_Filter.c **** 
1449:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
1450:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1451:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1452:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1453:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1454:Generated_Source\PSoC6/CapSense_Filter.c **** 
1455:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1456:Generated_Source\PSoC6/CapSense_Filter.c **** }
1457:Generated_Source\PSoC6/CapSense_Filter.c **** 
1458:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1459:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1460:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1461:Generated_Source\PSoC6/CapSense_Filter.c **** *
1462:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the ALP filter.
1463:Generated_Source\PSoC6/CapSense_Filter.c **** *
1464:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the ALP filter.
1465:Generated_Source\PSoC6/CapSense_Filter.c **** *
1466:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1467:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrAlpFilterConfig The pointer to the filter configuration object of the sensor.
1468:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1469:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1470:Generated_Source\PSoC6/CapSense_Filter.c **** *
1471:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1472:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1473:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1474:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1475:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1476:Generated_Source\PSoC6/CapSense_Filter.c **** {
1477:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1478:Generated_Source\PSoC6/CapSense_Filter.c **** 
1479:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 32


1480:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1481:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1482:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1483:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1484:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1485:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1486:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1487:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1488:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1489:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1490:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1491:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1492:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1493:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1494:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1495:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1496:Generated_Source\PSoC6/CapSense_Filter.c **** }
1497:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1498:Generated_Source\PSoC6/CapSense_Filter.c **** 
1499:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1500:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1501:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1502:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1503:Generated_Source\PSoC6/CapSense_Filter.c **** *
1504:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1505:Generated_Source\PSoC6/CapSense_Filter.c **** *
1506:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1507:Generated_Source\PSoC6/CapSense_Filter.c **** *
1508:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1509:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR
1510:Generated_Source\PSoC6/CapSense_Filter.c **** *           filter history.
1511:Generated_Source\PSoC6/CapSense_Filter.c **** *
1512:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1513:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1514:Generated_Source\PSoC6/CapSense_Filter.c **** {
1515:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1516:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1517:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1518:Generated_Source\PSoC6/CapSense_Filter.c **** 
1519:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1520:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1521:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1522:Generated_Source\PSoC6/CapSense_Filter.c **** 
1523:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1524:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1525:Generated_Source\PSoC6/CapSense_Filter.c **** 
1526:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1527:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1528:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1529:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1530:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1531:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1532:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1533:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1534:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1535:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1536:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 33


1537:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1538:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1539:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1540:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1541:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1542:Generated_Source\PSoC6/CapSense_Filter.c **** 
1543:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1544:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1545:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1546:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1547:Generated_Source\PSoC6/CapSense_Filter.c **** }
1548:Generated_Source\PSoC6/CapSense_Filter.c **** 
1549:Generated_Source\PSoC6/CapSense_Filter.c **** 
1550:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1551:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1552:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1553:Generated_Source\PSoC6/CapSense_Filter.c **** *
1554:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1555:Generated_Source\PSoC6/CapSense_Filter.c **** *
1556:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1557:Generated_Source\PSoC6/CapSense_Filter.c **** *
1558:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1559:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1560:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1561:Generated_Source\PSoC6/CapSense_Filter.c **** *
1562:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1563:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1564:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1565:Generated_Source\PSoC6/CapSense_Filter.c **** {
1566:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1567:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1568:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1569:Generated_Source\PSoC6/CapSense_Filter.c **** 
1570:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1571:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1572:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
1573:Generated_Source\PSoC6/CapSense_Filter.c **** 
1574:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1575:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1577:Generated_Source\PSoC6/CapSense_Filter.c **** }
1578:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1579:Generated_Source\PSoC6/CapSense_Filter.c **** 
1580:Generated_Source\PSoC6/CapSense_Filter.c **** 
1581:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1582:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1583:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
1584:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1585:Generated_Source\PSoC6/CapSense_Filter.c **** *
1586:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by
1587:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1588:Generated_Source\PSoC6/CapSense_Filter.c **** *
1589:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by
1590:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1591:Generated_Source\PSoC6/CapSense_Filter.c **** *
1592:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1593:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 34


1594:Generated_Source\PSoC6/CapSense_Filter.c **** *
1595:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1596:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1597:Generated_Source\PSoC6/CapSense_Filter.c **** {
1598:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1599:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1600:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1601:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1602:Generated_Source\PSoC6/CapSense_Filter.c **** 
1603:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1604:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1605:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1606:Generated_Source\PSoC6/CapSense_Filter.c **** 
1607:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1608:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1609:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1610:Generated_Source\PSoC6/CapSense_Filter.c **** 
1611:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1612:Generated_Source\PSoC6/CapSense_Filter.c **** }
1613:Generated_Source\PSoC6/CapSense_Filter.c **** 
1614:Generated_Source\PSoC6/CapSense_Filter.c **** 
1615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1618:Generated_Source\PSoC6/CapSense_Filter.c **** *
1619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the noise-envelope filter
1620:Generated_Source\PSoC6/CapSense_Filter.c **** *
1621:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the noise-envelope filter
1622:Generated_Source\PSoC6/CapSense_Filter.c **** *
1623:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1624:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1625:Generated_Source\PSoC6/CapSense_Filter.c **** *
1626:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1627:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1628:Generated_Source\PSoC6/CapSense_Filter.c **** {
1629:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1630:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1631:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1632:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1633:Generated_Source\PSoC6/CapSense_Filter.c **** 
1634:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1635:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1636:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1637:Generated_Source\PSoC6/CapSense_Filter.c **** 
1638:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1639:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1640:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1641:Generated_Source\PSoC6/CapSense_Filter.c **** 
1642:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1643:Generated_Source\PSoC6/CapSense_Filter.c **** }
1644:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1645:Generated_Source\PSoC6/CapSense_Filter.c **** 
1646:Generated_Source\PSoC6/CapSense_Filter.c **** 
1647:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1648:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1649:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1650:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 35


1651:Generated_Source\PSoC6/CapSense_Filter.c **** *
1652:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the median value from the three passed arguments.
1653:Generated_Source\PSoC6/CapSense_Filter.c **** *
1654:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the median value from the three passed arguments.
1655:Generated_Source\PSoC6/CapSense_Filter.c **** *
1656:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x1 The first value to be compared.
1657:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x2 The second value to be compared.
1658:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x3 The third value to be compared.
1659:Generated_Source\PSoC6/CapSense_Filter.c **** *
1660:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the median value of input arguments.
1661:Generated_Source\PSoC6/CapSense_Filter.c **** *
1662:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1663:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1664:Generated_Source\PSoC6/CapSense_Filter.c **** {
1665:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 tmp;
1666:Generated_Source\PSoC6/CapSense_Filter.c **** 
1667:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x1 > x2)
1668:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1669:Generated_Source\PSoC6/CapSense_Filter.c ****         tmp = x2;
1670:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x1;
1671:Generated_Source\PSoC6/CapSense_Filter.c ****         x1 = tmp;
1672:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1673:Generated_Source\PSoC6/CapSense_Filter.c **** 
1674:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x2 > x3)
1675:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1676:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x3;
1677:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1678:Generated_Source\PSoC6/CapSense_Filter.c **** 
1679:Generated_Source\PSoC6/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1680:Generated_Source\PSoC6/CapSense_Filter.c **** }
1681:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1682:Generated_Source\PSoC6/CapSense_Filter.c **** 
1683:Generated_Source\PSoC6/CapSense_Filter.c **** 
1684:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1685:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1686:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1687:Generated_Source\PSoC6/CapSense_Filter.c **** *
1688:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1689:Generated_Source\PSoC6/CapSense_Filter.c **** *
1690:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1691:Generated_Source\PSoC6/CapSense_Filter.c **** *
1692:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    input      The data to be filtered.
1693:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    prevOutput The previous filtered data.
1694:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1695:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB
1696:Generated_Source\PSoC6/CapSense_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1697:Generated_Source\PSoC6/CapSense_Filter.c **** *
1698:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the filtered data.
1699:Generated_Source\PSoC6/CapSense_Filter.c **** *
1700:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1701:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1702:Generated_Source\PSoC6/CapSense_Filter.c **** {
 266              		.loc 1 1702 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 36


 271              	.LVL29:
1703:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 filteredOutput;
1704:Generated_Source\PSoC6/CapSense_Filter.c **** 
1705:Generated_Source\PSoC6/CapSense_Filter.c ****     /*
1706:Generated_Source\PSoC6/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1707:Generated_Source\PSoC6/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1708:Generated_Source\PSoC6/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1709:Generated_Source\PSoC6/CapSense_Filter.c ****     */
1710:Generated_Source\PSoC6/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 272              		.loc 1 1710 0
 273 0000 00FA03F3 		lsl	r3, r0, r3
 274              	.LVL30:
 275 0004 C2F58070 		rsb	r0, r2, #256
 276              	.LVL31:
 277 0008 01FB00F1 		mul	r1, r1, r0
 278              	.LVL32:
 279 000c 02FB0310 		mla	r0, r2, r3, r1
 280              	.LVL33:
1711:Generated_Source\PSoC6/CapSense_Filter.c **** 
1712:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1713:Generated_Source\PSoC6/CapSense_Filter.c ****     return filteredOutput;
1714:Generated_Source\PSoC6/CapSense_Filter.c **** }
 281              		.loc 1 1714 0
 282 0010 000A     		lsrs	r0, r0, #8
 283              	.LVL34:
 284 0012 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE142:
 287              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 288              		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 289              		.align	2
 290              		.global	CapSense_FtUpdateBaseline
 291              		.thumb
 292              		.thumb_func
 293              		.type	CapSense_FtUpdateBaseline, %function
 294              	CapSense_FtUpdateBaseline:
 295              	.LFB136:
 259:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 296              		.loc 1 259 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              	.LVL35:
 301 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 302              		.cfi_def_cfa_offset 24
 303              		.cfi_offset 4, -24
 304              		.cfi_offset 5, -20
 305              		.cfi_offset 6, -16
 306              		.cfi_offset 7, -12
 307              		.cfi_offset 8, -8
 308              		.cfi_offset 14, -4
 309 0004 0646     		mov	r6, r0
 310 0006 0D46     		mov	r5, r1
 311 0008 1746     		mov	r7, r2
 312              	.LVL36:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 313              		.loc 1 271 0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 37


 314 000a 0123     		movs	r3, #1
 315 000c 42E0     		b	.L24
 316              	.LVL37:
 317              	.L31:
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 318              		.loc 1 283 0
 319 000e 35F81400 		ldrh	r0, [r5, r4, lsl #1]
 320 0012 05EB4403 		add	r3, r5, r4, lsl #1
 321 0016 5988     		ldrh	r1, [r3, #2]
 322 0018 8842     		cmp	r0, r1
 323 001a 07D3     		bcc	.L25
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 324              		.loc 1 285 0
 325 001c 431A     		subs	r3, r0, r1
 326              	.LVL38:
 287:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 327              		.loc 1 287 0
 328 001e 2A19     		adds	r2, r5, r4
 329 0020 4FF0000E 		mov	lr, #0
 330 0024 82F808E0 		strb	lr, [r2, #8]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 331              		.loc 1 286 0
 332 0028 0122     		movs	r2, #1
 333 002a 01E0     		b	.L26
 334              	.LVL39:
 335              	.L25:
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 336              		.loc 1 291 0
 337 002c 0B1A     		subs	r3, r1, r0
 338              	.LVL40:
 292:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 339              		.loc 1 292 0
 340 002e 0022     		movs	r2, #0
 341              	.LVL41:
 342              	.L26:
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 343              		.loc 1 296 0
 344 0030 92B9     		cbnz	r2, .L27
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 345              		.loc 1 296 0 is_stmt 0 discriminator 1
 346 0032 96F805E0 		ldrb	lr, [r6, #5]	@ zero_extendqisi2
 347 0036 7345     		cmp	r3, lr
 348 0038 0ED9     		bls	.L27
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 349              		.loc 1 298 0 is_stmt 1
 350 003a 2B19     		adds	r3, r5, r4
 351              	.LVL42:
 352 003c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 353 003e 327A     		ldrb	r2, [r6, #8]	@ zero_extendqisi2
 354              	.LVL43:
 355 0040 9342     		cmp	r3, r2
 356 0042 05D3     		bcc	.L28
 300:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 357              		.loc 1 300 0
 358 0044 2246     		mov	r2, r4
 359 0046 3946     		mov	r1, r7
 360 0048 2846     		mov	r0, r5
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 38


 361 004a FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 362              	.LVL44:
 363 004e 20E0     		b	.L29
 364              	.L28:
 304:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 365              		.loc 1 304 0
 366 0050 2A19     		adds	r2, r5, r4
 367 0052 0133     		adds	r3, r3, #1
 368 0054 1372     		strb	r3, [r2, #8]
 369 0056 1CE0     		b	.L29
 370              	.LVL45:
 371              	.L27:
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 372              		.loc 1 311 0
 373 0058 96F804E0 		ldrb	lr, [r6, #4]	@ zero_extendqisi2
 374 005c 7345     		cmp	r3, lr
 375 005e 04D9     		bls	.L30
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 376              		.loc 1 312 0 discriminator 1
 377 0060 96F805E0 		ldrb	lr, [r6, #5]	@ zero_extendqisi2
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 378              		.loc 1 311 0 discriminator 1
 379 0064 7345     		cmp	r3, lr
 380 0066 14D8     		bhi	.L29
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 381              		.loc 1 312 0
 382 0068 9AB9     		cbnz	r2, .L29
 383              	.L30:
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 384              		.loc 1 318 0
 385 006a FBB2     		uxtb	r3, r7
 386              	.LVL46:
 387 006c 062B     		cmp	r3, #6
 388 006e 10D0     		beq	.L29
 389              	.LVL47:
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 390              		.loc 1 323 0
 391 0070 05EB0408 		add	r8, r5, r4
 392 0074 98F804E0 		ldrb	lr, [r8, #4]	@ zero_extendqisi2
 393              	.LVL48:
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 394              		.loc 1 334 0
 395 0078 0823     		movs	r3, #8
 396 007a 0122     		movs	r2, #1
 397              	.LVL49:
 398 007c 4EEA0121 		orr	r1, lr, r1, lsl #8
 399              	.LVL50:
 400 0080 FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 401              	.LVL51:
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 402              		.loc 1 340 0
 403 0084 C0F30F22 		ubfx	r2, r0, #8, #16
 404 0088 05EB4403 		add	r3, r5, r4, lsl #1
 405 008c 5A80     		strh	r2, [r3, #2]	@ movhi
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 406              		.loc 1 341 0
 407 008e 88F80400 		strb	r0, [r8, #4]
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 39


 408              	.LVL52:
 409              	.L29:
 410 0092 2346     		mov	r3, r4
 411              	.LVL53:
 412              	.L24:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 413              		.loc 1 271 0 discriminator 1
 414 0094 5C1E     		subs	r4, r3, #1
 415              	.LVL54:
 416 0096 002B     		cmp	r3, #0
 417 0098 B9D1     		bne	.L31
 398:Generated_Source\PSoC6/CapSense_Filter.c **** 
 418              		.loc 1 398 0
 419 009a 0020     		movs	r0, #0
 420 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 421              		.cfi_endproc
 422              	.LFE136:
 423              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 424              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 425              		.align	2
 426              		.global	CapSense_UpdateSensorBaseline
 427              		.thumb
 428              		.thumb_func
 429              		.type	CapSense_UpdateSensorBaseline, %function
 430              	CapSense_UpdateSensorBaseline:
 431              	.LFB135:
 201:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 432              		.loc 1 201 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LVL55:
 437 0000 10B5     		push	{r4, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
 440              		.cfi_offset 14, -4
 441              	.LVL56:
 206:Generated_Source\PSoC6/CapSense_Filter.c **** 
 442              		.loc 1 206 0
 443 0002 064B     		ldr	r3, .L35
 444 0004 03EB4010 		add	r0, r3, r0, lsl #5
 445              	.LVL57:
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 446              		.loc 1 209 0
 447 0008 8468     		ldr	r4, [r0, #8]
 448              	.LVL58:
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 449              		.loc 1 210 0
 450 000a 01EB8101 		add	r1, r1, r1, lsl #2
 451              	.LVL59:
 452 000e 4B00     		lsls	r3, r1, #1
 453              	.LVL60:
 211:Generated_Source\PSoC6/CapSense_Filter.c **** 
 454              		.loc 1 211 0
 455 0010 827E     		ldrb	r2, [r0, #26]	@ zero_extendqisi2
 456 0012 E118     		adds	r1, r4, r3
 457              	.LVL61:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 40


 458 0014 4068     		ldr	r0, [r0, #4]
 459              	.LVL62:
 460 0016 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 461              	.LVL63:
 222:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462              		.loc 1 222 0
 463 001a 10BD     		pop	{r4, pc}
 464              	.LVL64:
 465              	.L36:
 466              		.align	2
 467              	.L35:
 468 001c 00000000 		.word	CapSense_dsFlash
 469              		.cfi_endproc
 470              	.LFE135:
 471              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 472              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 473              		.align	2
 474              		.global	CapSense_UpdateWidgetBaseline
 475              		.thumb
 476              		.thumb_func
 477              		.type	CapSense_UpdateWidgetBaseline, %function
 478              	CapSense_UpdateWidgetBaseline:
 479              	.LFB134:
 144:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 480              		.loc 1 144 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              	.LVL65:
 485 0000 70B5     		push	{r4, r5, r6, lr}
 486              		.cfi_def_cfa_offset 16
 487              		.cfi_offset 4, -16
 488              		.cfi_offset 5, -12
 489              		.cfi_offset 6, -8
 490              		.cfi_offset 14, -4
 491 0002 0646     		mov	r6, r0
 492              	.LVL66:
 152:Generated_Source\PSoC6/CapSense_Filter.c **** 
 493              		.loc 1 152 0
 494 0004 084B     		ldr	r3, .L41
 495 0006 03EB4013 		add	r3, r3, r0, lsl #5
 496 000a 1B8B     		ldrh	r3, [r3, #24]
 497              	.LVL67:
 149:Generated_Source\PSoC6/CapSense_Filter.c **** 
 498              		.loc 1 149 0
 499 000c 0025     		movs	r5, #0
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 500              		.loc 1 154 0
 501 000e 05E0     		b	.L38
 502              	.LVL68:
 503              	.L39:
 156:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 504              		.loc 1 156 0
 505 0010 2146     		mov	r1, r4
 506 0012 3046     		mov	r0, r6
 507 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 508              	.LVL69:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 41


 509 0018 0543     		orrs	r5, r5, r0
 510              	.LVL70:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 511              		.loc 1 154 0
 512 001a 2346     		mov	r3, r4
 513              	.LVL71:
 514              	.L38:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 515              		.loc 1 154 0 is_stmt 0 discriminator 1
 516 001c 5C1E     		subs	r4, r3, #1
 517              	.LVL72:
 518 001e 002B     		cmp	r3, #0
 519 0020 F6D1     		bne	.L39
 160:Generated_Source\PSoC6/CapSense_Filter.c **** 
 520              		.loc 1 160 0 is_stmt 1
 521 0022 2846     		mov	r0, r5
 522 0024 70BD     		pop	{r4, r5, r6, pc}
 523              	.LVL73:
 524              	.L42:
 525 0026 00BF     		.align	2
 526              	.L41:
 527 0028 00000000 		.word	CapSense_dsFlash
 528              		.cfi_endproc
 529              	.LFE134:
 530              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 531              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 532              		.align	2
 533              		.global	CapSense_UpdateAllBaselines
 534              		.thumb
 535              		.thumb_func
 536              		.type	CapSense_UpdateAllBaselines, %function
 537              	CapSense_UpdateAllBaselines:
 538              	.LFB133:
  99:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 539              		.loc 1 99 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543 0000 38B5     		push	{r3, r4, r5, lr}
 544              		.cfi_def_cfa_offset 16
 545              		.cfi_offset 3, -16
 546              		.cfi_offset 4, -12
 547              		.cfi_offset 5, -8
 548              		.cfi_offset 14, -4
 549              	.LVL74:
 101:Generated_Source\PSoC6/CapSense_Filter.c **** 
 550              		.loc 1 101 0
 551 0002 0025     		movs	r5, #0
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 552              		.loc 1 103 0
 553 0004 0223     		movs	r3, #2
 554 0006 04E0     		b	.L44
 555              	.LVL75:
 556              	.L45:
 105:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 557              		.loc 1 105 0
 558 0008 2046     		mov	r0, r4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 42


 559 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 560              	.LVL76:
 561 000e 0543     		orrs	r5, r5, r0
 562              	.LVL77:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 563              		.loc 1 103 0
 564 0010 2346     		mov	r3, r4
 565              	.LVL78:
 566              	.L44:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 567              		.loc 1 103 0 is_stmt 0 discriminator 1
 568 0012 5C1E     		subs	r4, r3, #1
 569              	.LVL79:
 570 0014 002B     		cmp	r3, #0
 571 0016 F7D1     		bne	.L45
 109:Generated_Source\PSoC6/CapSense_Filter.c **** 
 572              		.loc 1 109 0 is_stmt 1
 573 0018 2846     		mov	r0, r5
 574 001a 38BD     		pop	{r3, r4, r5, pc}
 575              		.cfi_endproc
 576              	.LFE133:
 577              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 578              		.text
 579              	.Letext0:
 580              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 581              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 582              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 583              		.file 5 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 584              		.file 6 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 585              		.file 7 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 586              		.section	.debug_info,"",%progbits
 587              	.Ldebug_info0:
 588 0000 CE070000 		.4byte	0x7ce
 589 0004 0400     		.2byte	0x4
 590 0006 00000000 		.4byte	.Ldebug_abbrev0
 591 000a 04       		.byte	0x4
 592 000b 01       		.uleb128 0x1
 593 000c F5000000 		.4byte	.LASF95
 594 0010 0C       		.byte	0xc
 595 0011 E3020000 		.4byte	.LASF96
 596 0015 8E030000 		.4byte	.LASF97
 597 0019 00000000 		.4byte	.Ldebug_ranges0+0
 598 001d 00000000 		.4byte	0
 599 0021 00000000 		.4byte	.Ldebug_line0
 600 0025 02       		.uleb128 0x2
 601 0026 04       		.byte	0x4
 602 0027 05       		.byte	0x5
 603 0028 696E7400 		.ascii	"int\000"
 604 002c 03       		.uleb128 0x3
 605 002d 04       		.byte	0x4
 606 002e 07       		.byte	0x7
 607 002f 4B040000 		.4byte	.LASF0
 608 0033 03       		.uleb128 0x3
 609 0034 08       		.byte	0x8
 610 0035 05       		.byte	0x5
 611 0036 B8020000 		.4byte	.LASF1
 612 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 43


 613 003b 08       		.byte	0x8
 614 003c 04       		.byte	0x4
 615 003d DC030000 		.4byte	.LASF2
 616 0041 03       		.uleb128 0x3
 617 0042 01       		.byte	0x1
 618 0043 06       		.byte	0x6
 619 0044 0A040000 		.4byte	.LASF3
 620 0048 04       		.uleb128 0x4
 621 0049 3B030000 		.4byte	.LASF6
 622 004d 02       		.byte	0x2
 623 004e 1D       		.byte	0x1d
 624 004f 53000000 		.4byte	0x53
 625 0053 03       		.uleb128 0x3
 626 0054 01       		.byte	0x1
 627 0055 08       		.byte	0x8
 628 0056 E8030000 		.4byte	.LASF4
 629 005a 03       		.uleb128 0x3
 630 005b 02       		.byte	0x2
 631 005c 05       		.byte	0x5
 632 005d 9A000000 		.4byte	.LASF5
 633 0061 04       		.uleb128 0x4
 634 0062 D7010000 		.4byte	.LASF7
 635 0066 02       		.byte	0x2
 636 0067 2B       		.byte	0x2b
 637 0068 6C000000 		.4byte	0x6c
 638 006c 03       		.uleb128 0x3
 639 006d 02       		.byte	0x2
 640 006e 07       		.byte	0x7
 641 006f BF040000 		.4byte	.LASF8
 642 0073 04       		.uleb128 0x4
 643 0074 36050000 		.4byte	.LASF9
 644 0078 02       		.byte	0x2
 645 0079 3F       		.byte	0x3f
 646 007a 7E000000 		.4byte	0x7e
 647 007e 03       		.uleb128 0x3
 648 007f 04       		.byte	0x4
 649 0080 05       		.byte	0x5
 650 0081 CB020000 		.4byte	.LASF10
 651 0085 04       		.uleb128 0x4
 652 0086 B7010000 		.4byte	.LASF11
 653 008a 02       		.byte	0x2
 654 008b 41       		.byte	0x41
 655 008c 90000000 		.4byte	0x90
 656 0090 03       		.uleb128 0x3
 657 0091 04       		.byte	0x4
 658 0092 07       		.byte	0x7
 659 0093 B6050000 		.4byte	.LASF12
 660 0097 03       		.uleb128 0x3
 661 0098 08       		.byte	0x8
 662 0099 07       		.byte	0x7
 663 009a 1E040000 		.4byte	.LASF13
 664 009e 04       		.uleb128 0x4
 665 009f 34020000 		.4byte	.LASF14
 666 00a3 03       		.byte	0x3
 667 00a4 18       		.byte	0x18
 668 00a5 48000000 		.4byte	0x48
 669 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 44


 670 00aa 58040000 		.4byte	.LASF15
 671 00ae 03       		.byte	0x3
 672 00af 24       		.byte	0x24
 673 00b0 61000000 		.4byte	0x61
 674 00b4 04       		.uleb128 0x4
 675 00b5 16040000 		.4byte	.LASF16
 676 00b9 03       		.byte	0x3
 677 00ba 2C       		.byte	0x2c
 678 00bb 73000000 		.4byte	0x73
 679 00bf 04       		.uleb128 0x4
 680 00c0 35040000 		.4byte	.LASF17
 681 00c4 03       		.byte	0x3
 682 00c5 30       		.byte	0x30
 683 00c6 85000000 		.4byte	0x85
 684 00ca 03       		.uleb128 0x3
 685 00cb 04       		.byte	0x4
 686 00cc 07       		.byte	0x7
 687 00cd 0C030000 		.4byte	.LASF18
 688 00d1 03       		.uleb128 0x3
 689 00d2 01       		.byte	0x1
 690 00d3 08       		.byte	0x8
 691 00d4 C6020000 		.4byte	.LASF19
 692 00d8 03       		.uleb128 0x3
 693 00d9 04       		.byte	0x4
 694 00da 04       		.byte	0x4
 695 00db B2020000 		.4byte	.LASF20
 696 00df 03       		.uleb128 0x3
 697 00e0 08       		.byte	0x8
 698 00e1 04       		.byte	0x4
 699 00e2 CD050000 		.4byte	.LASF21
 700 00e6 05       		.uleb128 0x5
 701 00e7 00040000 		.4byte	.LASF22
 702 00eb 04       		.byte	0x4
 703 00ec E703     		.2byte	0x3e7
 704 00ee BF000000 		.4byte	0xbf
 705 00f2 05       		.uleb128 0x5
 706 00f3 3C020000 		.4byte	.LASF23
 707 00f7 04       		.byte	0x4
 708 00f8 EA03     		.2byte	0x3ea
 709 00fa 9E000000 		.4byte	0x9e
 710 00fe 05       		.uleb128 0x5
 711 00ff FF010000 		.4byte	.LASF24
 712 0103 04       		.byte	0x4
 713 0104 EB03     		.2byte	0x3eb
 714 0106 A9000000 		.4byte	0xa9
 715 010a 05       		.uleb128 0x5
 716 010b AF050000 		.4byte	.LASF25
 717 010f 04       		.byte	0x4
 718 0110 EC03     		.2byte	0x3ec
 719 0112 BF000000 		.4byte	0xbf
 720 0116 04       		.uleb128 0x4
 721 0117 15030000 		.4byte	.LASF26
 722 011b 05       		.byte	0x5
 723 011c EA       		.byte	0xea
 724 011d FE000000 		.4byte	0xfe
 725 0121 04       		.uleb128 0x4
 726 0122 16000000 		.4byte	.LASF27
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 45


 727 0126 05       		.byte	0x5
 728 0127 EE       		.byte	0xee
 729 0128 F2000000 		.4byte	0xf2
 730 012c 06       		.uleb128 0x6
 731 012d 01       		.byte	0x1
 732 012e 53000000 		.4byte	0x53
 733 0132 06       		.byte	0x6
 734 0133 61       		.byte	0x61
 735 0134 5D010000 		.4byte	0x15d
 736 0138 07       		.uleb128 0x7
 737 0139 E2010000 		.4byte	.LASF28
 738 013d 01       		.byte	0x1
 739 013e 07       		.uleb128 0x7
 740 013f A3040000 		.4byte	.LASF29
 741 0143 02       		.byte	0x2
 742 0144 07       		.uleb128 0x7
 743 0145 8A050000 		.4byte	.LASF30
 744 0149 03       		.byte	0x3
 745 014a 07       		.uleb128 0x7
 746 014b FD050000 		.4byte	.LASF31
 747 014f 04       		.byte	0x4
 748 0150 07       		.uleb128 0x7
 749 0151 AA000000 		.4byte	.LASF32
 750 0155 05       		.byte	0x5
 751 0156 07       		.uleb128 0x7
 752 0157 9A020000 		.4byte	.LASF33
 753 015b 06       		.byte	0x6
 754 015c 00       		.byte	0
 755 015d 04       		.uleb128 0x4
 756 015e DC050000 		.4byte	.LASF34
 757 0162 06       		.byte	0x6
 758 0163 68       		.byte	0x68
 759 0164 2C010000 		.4byte	0x12c
 760 0168 08       		.uleb128 0x8
 761 0169 0E       		.byte	0xe
 762 016a 06       		.byte	0x6
 763 016b 8C       		.byte	0x8c
 764 016c DD010000 		.4byte	0x1dd
 765 0170 09       		.uleb128 0x9
 766 0171 2B050000 		.4byte	.LASF35
 767 0175 06       		.byte	0x6
 768 0176 92       		.byte	0x92
 769 0177 FE000000 		.4byte	0xfe
 770 017b 00       		.byte	0
 771 017c 09       		.uleb128 0x9
 772 017d 50030000 		.4byte	.LASF36
 773 0181 06       		.byte	0x6
 774 0182 97       		.byte	0x97
 775 0183 16010000 		.4byte	0x116
 776 0187 02       		.byte	0x2
 777 0188 09       		.uleb128 0x9
 778 0189 F7010000 		.4byte	.LASF37
 779 018d 06       		.byte	0x6
 780 018e 9C       		.byte	0x9c
 781 018f F2000000 		.4byte	0xf2
 782 0193 04       		.byte	0x4
 783 0194 09       		.uleb128 0x9
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 46


 784 0195 E5000000 		.4byte	.LASF38
 785 0199 06       		.byte	0x6
 786 019a A1       		.byte	0xa1
 787 019b F2000000 		.4byte	0xf2
 788 019f 05       		.byte	0x5
 789 01a0 09       		.uleb128 0x9
 790 01a1 83030000 		.4byte	.LASF39
 791 01a5 06       		.byte	0x6
 792 01a6 A6       		.byte	0xa6
 793 01a7 F2000000 		.4byte	0xf2
 794 01ab 06       		.byte	0x6
 795 01ac 09       		.uleb128 0x9
 796 01ad 45030000 		.4byte	.LASF40
 797 01b1 06       		.byte	0x6
 798 01b2 AB       		.byte	0xab
 799 01b3 F2000000 		.4byte	0xf2
 800 01b7 07       		.byte	0x7
 801 01b8 09       		.uleb128 0x9
 802 01b9 51000000 		.4byte	.LASF41
 803 01bd 06       		.byte	0x6
 804 01be B2       		.byte	0xb2
 805 01bf 21010000 		.4byte	0x121
 806 01c3 08       		.byte	0x8
 807 01c4 09       		.uleb128 0x9
 808 01c5 57020000 		.4byte	.LASF42
 809 01c9 06       		.byte	0x6
 810 01ca BB       		.byte	0xbb
 811 01cb FE000000 		.4byte	0xfe
 812 01cf 0A       		.byte	0xa
 813 01d0 09       		.uleb128 0x9
 814 01d1 CA010000 		.4byte	.LASF43
 815 01d5 06       		.byte	0x6
 816 01d6 C0       		.byte	0xc0
 817 01d7 F2000000 		.4byte	0xf2
 818 01db 0C       		.byte	0xc
 819 01dc 00       		.byte	0
 820 01dd 04       		.uleb128 0x4
 821 01de 71060000 		.4byte	.LASF44
 822 01e2 06       		.byte	0x6
 823 01e3 C1       		.byte	0xc1
 824 01e4 68010000 		.4byte	0x168
 825 01e8 0A       		.uleb128 0xa
 826 01e9 0A       		.byte	0xa
 827 01ea 06       		.byte	0x6
 828 01eb 1201     		.2byte	0x112
 829 01ed 40020000 		.4byte	0x240
 830 01f1 0B       		.uleb128 0xb
 831 01f2 72617700 		.ascii	"raw\000"
 832 01f6 06       		.byte	0x6
 833 01f7 1701     		.2byte	0x117
 834 01f9 40020000 		.4byte	0x240
 835 01fd 00       		.byte	0
 836 01fe 0C       		.uleb128 0xc
 837 01ff 38000000 		.4byte	.LASF45
 838 0203 06       		.byte	0x6
 839 0204 1C01     		.2byte	0x11c
 840 0206 40020000 		.4byte	0x240
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 47


 841 020a 02       		.byte	0x2
 842 020b 0C       		.uleb128 0xc
 843 020c D4050000 		.4byte	.LASF46
 844 0210 06       		.byte	0x6
 845 0211 2201     		.2byte	0x122
 846 0213 50020000 		.4byte	0x250
 847 0217 04       		.byte	0x4
 848 0218 0C       		.uleb128 0xc
 849 0219 5C000000 		.4byte	.LASF47
 850 021d 06       		.byte	0x6
 851 021e 2701     		.2byte	0x127
 852 0220 16010000 		.4byte	0x116
 853 0224 06       		.byte	0x6
 854 0225 0C       		.uleb128 0xc
 855 0226 2D030000 		.4byte	.LASF48
 856 022a 06       		.byte	0x6
 857 022b 2C01     		.2byte	0x12c
 858 022d 60020000 		.4byte	0x260
 859 0231 08       		.byte	0x8
 860 0232 0C       		.uleb128 0xc
 861 0233 04050000 		.4byte	.LASF49
 862 0237 06       		.byte	0x6
 863 0238 3201     		.2byte	0x132
 864 023a 50020000 		.4byte	0x250
 865 023e 09       		.byte	0x9
 866 023f 00       		.byte	0
 867 0240 0D       		.uleb128 0xd
 868 0241 FE000000 		.4byte	0xfe
 869 0245 50020000 		.4byte	0x250
 870 0249 0E       		.uleb128 0xe
 871 024a CA000000 		.4byte	0xca
 872 024e 00       		.byte	0
 873 024f 00       		.byte	0
 874 0250 0D       		.uleb128 0xd
 875 0251 F2000000 		.4byte	0xf2
 876 0255 60020000 		.4byte	0x260
 877 0259 0E       		.uleb128 0xe
 878 025a CA000000 		.4byte	0xca
 879 025e 00       		.byte	0
 880 025f 00       		.byte	0
 881 0260 0D       		.uleb128 0xd
 882 0261 21010000 		.4byte	0x121
 883 0265 70020000 		.4byte	0x270
 884 0269 0E       		.uleb128 0xe
 885 026a CA000000 		.4byte	0xca
 886 026e 00       		.byte	0
 887 026f 00       		.byte	0
 888 0270 05       		.uleb128 0x5
 889 0271 6D040000 		.4byte	.LASF50
 890 0275 06       		.byte	0x6
 891 0276 3301     		.2byte	0x133
 892 0278 E8010000 		.4byte	0x1e8
 893 027c 0A       		.uleb128 0xa
 894 027d 20       		.byte	0x20
 895 027e 06       		.byte	0x6
 896 027f F101     		.2byte	0x1f1
 897 0281 08030000 		.4byte	0x308
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 48


 898 0285 0C       		.uleb128 0xc
 899 0286 8D000000 		.4byte	.LASF51
 900 028a 06       		.byte	0x6
 901 028b FA01     		.2byte	0x1fa
 902 028d 08030000 		.4byte	0x308
 903 0291 00       		.byte	0
 904 0292 0C       		.uleb128 0xc
 905 0293 70050000 		.4byte	.LASF52
 906 0297 06       		.byte	0x6
 907 0298 0102     		.2byte	0x201
 908 029a 0F030000 		.4byte	0x30f
 909 029e 04       		.byte	0x4
 910 029f 0C       		.uleb128 0xc
 911 02a0 19060000 		.4byte	.LASF53
 912 02a4 06       		.byte	0x6
 913 02a5 0702     		.2byte	0x207
 914 02a7 11030000 		.4byte	0x311
 915 02ab 08       		.byte	0x8
 916 02ac 0C       		.uleb128 0xc
 917 02ad 46060000 		.4byte	.LASF54
 918 02b1 06       		.byte	0x6
 919 02b2 0C02     		.2byte	0x20c
 920 02b4 0F030000 		.4byte	0x30f
 921 02b8 0C       		.byte	0xc
 922 02b9 0C       		.uleb128 0xc
 923 02ba 24020000 		.4byte	.LASF55
 924 02be 06       		.byte	0x6
 925 02bf 1302     		.2byte	0x213
 926 02c1 17030000 		.4byte	0x317
 927 02c5 10       		.byte	0x10
 928 02c6 0C       		.uleb128 0xc
 929 02c7 3E040000 		.4byte	.LASF56
 930 02cb 06       		.byte	0x6
 931 02cc 1802     		.2byte	0x218
 932 02ce 0A010000 		.4byte	0x10a
 933 02d2 14       		.byte	0x14
 934 02d3 0C       		.uleb128 0xc
 935 02d4 61000000 		.4byte	.LASF57
 936 02d8 06       		.byte	0x6
 937 02d9 1F02     		.2byte	0x21f
 938 02db FE000000 		.4byte	0xfe
 939 02df 18       		.byte	0x18
 940 02e0 0C       		.uleb128 0xc
 941 02e1 DA020000 		.4byte	.LASF58
 942 02e5 06       		.byte	0x6
 943 02e6 2A02     		.2byte	0x22a
 944 02e8 F2000000 		.4byte	0xf2
 945 02ec 1A       		.byte	0x1a
 946 02ed 0C       		.uleb128 0xc
 947 02ee 59030000 		.4byte	.LASF59
 948 02f2 06       		.byte	0x6
 949 02f3 3202     		.2byte	0x232
 950 02f5 F2000000 		.4byte	0xf2
 951 02f9 1B       		.byte	0x1b
 952 02fa 0C       		.uleb128 0xc
 953 02fb 42020000 		.4byte	.LASF60
 954 02ff 06       		.byte	0x6
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 49


 955 0300 3902     		.2byte	0x239
 956 0302 F2000000 		.4byte	0xf2
 957 0306 1C       		.byte	0x1c
 958 0307 00       		.byte	0
 959 0308 0F       		.uleb128 0xf
 960 0309 04       		.byte	0x4
 961 030a 0E030000 		.4byte	0x30e
 962 030e 10       		.uleb128 0x10
 963 030f 11       		.uleb128 0x11
 964 0310 04       		.byte	0x4
 965 0311 0F       		.uleb128 0xf
 966 0312 04       		.byte	0x4
 967 0313 70020000 		.4byte	0x270
 968 0317 0F       		.uleb128 0xf
 969 0318 04       		.byte	0x4
 970 0319 F2000000 		.4byte	0xf2
 971 031d 05       		.uleb128 0x5
 972 031e C1000000 		.4byte	.LASF61
 973 0322 06       		.byte	0x6
 974 0323 3A02     		.2byte	0x23a
 975 0325 7C020000 		.4byte	0x27c
 976 0329 0A       		.uleb128 0xa
 977 032a 40       		.byte	0x40
 978 032b 06       		.byte	0x6
 979 032c 4002     		.2byte	0x240
 980 032e 40030000 		.4byte	0x340
 981 0332 0C       		.uleb128 0xc
 982 0333 56060000 		.4byte	.LASF62
 983 0337 06       		.byte	0x6
 984 0338 4502     		.2byte	0x245
 985 033a 40030000 		.4byte	0x340
 986 033e 00       		.byte	0
 987 033f 00       		.byte	0
 988 0340 0D       		.uleb128 0xd
 989 0341 1D030000 		.4byte	0x31d
 990 0345 50030000 		.4byte	0x350
 991 0349 0E       		.uleb128 0xe
 992 034a CA000000 		.4byte	0xca
 993 034e 01       		.byte	0x1
 994 034f 00       		.byte	0
 995 0350 05       		.uleb128 0x5
 996 0351 00000000 		.4byte	.LASF63
 997 0355 06       		.byte	0x6
 998 0356 4602     		.2byte	0x246
 999 0358 29030000 		.4byte	0x329
 1000 035c 12       		.uleb128 0x12
 1001 035d EE040000 		.4byte	.LASF98
 1002 0361 01       		.byte	0x1
 1003 0362 3F       		.byte	0x3f
 1004 0363 00000000 		.4byte	.LFB132
 1005 0367 02000000 		.4byte	.LFE132-.LFB132
 1006 036b 01       		.uleb128 0x1
 1007 036c 9C       		.byte	0x9c
 1008 036d 13       		.uleb128 0x13
 1009 036e 5E020000 		.4byte	.LASF67
 1010 0372 01       		.byte	0x1
 1011 0373 2A02     		.2byte	0x22a
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 50


 1012 0375 00000000 		.4byte	.LFB141
 1013 0379 1E000000 		.4byte	.LFE141-.LFB141
 1014 037d 01       		.uleb128 0x1
 1015 037e 9C       		.byte	0x9c
 1016 037f B2030000 		.4byte	0x3b2
 1017 0383 14       		.uleb128 0x14
 1018 0384 9A060000 		.4byte	.LASF64
 1019 0388 01       		.byte	0x1
 1020 0389 2A02     		.2byte	0x22a
 1021 038b 11030000 		.4byte	0x311
 1022 038f 01       		.uleb128 0x1
 1023 0390 50       		.byte	0x50
 1024 0391 15       		.uleb128 0x15
 1025 0392 EE000000 		.4byte	.LASF65
 1026 0396 01       		.byte	0x1
 1027 0397 2A02     		.2byte	0x22a
 1028 0399 0A010000 		.4byte	0x10a
 1029 039d 00000000 		.4byte	.LLST0
 1030 03a1 15       		.uleb128 0x15
 1031 03a2 40050000 		.4byte	.LASF66
 1032 03a6 01       		.byte	0x1
 1033 03a7 2A02     		.2byte	0x22a
 1034 03a9 0A010000 		.4byte	0x10a
 1035 03ad 21000000 		.4byte	.LLST1
 1036 03b1 00       		.byte	0
 1037 03b2 13       		.uleb128 0x13
 1038 03b3 0D050000 		.4byte	.LASF68
 1039 03b7 01       		.byte	0x1
 1040 03b8 0F02     		.2byte	0x20f
 1041 03ba 00000000 		.4byte	.LFB140
 1042 03be 1E000000 		.4byte	.LFE140-.LFB140
 1043 03c2 01       		.uleb128 0x1
 1044 03c3 9C       		.byte	0x9c
 1045 03c4 15040000 		.4byte	0x415
 1046 03c8 15       		.uleb128 0x15
 1047 03c9 9A060000 		.4byte	.LASF64
 1048 03cd 01       		.byte	0x1
 1049 03ce 0F02     		.2byte	0x20f
 1050 03d0 11030000 		.4byte	0x311
 1051 03d4 42000000 		.4byte	.LLST2
 1052 03d8 15       		.uleb128 0x15
 1053 03d9 EE000000 		.4byte	.LASF65
 1054 03dd 01       		.byte	0x1
 1055 03de 0F02     		.2byte	0x20f
 1056 03e0 0A010000 		.4byte	0x10a
 1057 03e4 60000000 		.4byte	.LLST3
 1058 03e8 16       		.uleb128 0x16
 1059 03e9 61040000 		.4byte	.LASF72
 1060 03ed 01       		.byte	0x1
 1061 03ee 1102     		.2byte	0x211
 1062 03f0 0A010000 		.4byte	0x10a
 1063 03f4 7E000000 		.4byte	.LLST4
 1064 03f8 17       		.uleb128 0x17
 1065 03f9 14000000 		.4byte	.LVL6
 1066 03fd 6D030000 		.4byte	0x36d
 1067 0401 18       		.uleb128 0x18
 1068 0402 01       		.uleb128 0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 51


 1069 0403 50       		.byte	0x50
 1070 0404 02       		.uleb128 0x2
 1071 0405 76       		.byte	0x76
 1072 0406 00       		.sleb128 0
 1073 0407 18       		.uleb128 0x18
 1074 0408 01       		.uleb128 0x1
 1075 0409 51       		.byte	0x51
 1076 040a 02       		.uleb128 0x2
 1077 040b 75       		.byte	0x75
 1078 040c 00       		.sleb128 0
 1079 040d 18       		.uleb128 0x18
 1080 040e 01       		.uleb128 0x1
 1081 040f 52       		.byte	0x52
 1082 0410 02       		.uleb128 0x2
 1083 0411 74       		.byte	0x74
 1084 0412 00       		.sleb128 0
 1085 0413 00       		.byte	0
 1086 0414 00       		.byte	0
 1087 0415 13       		.uleb128 0x13
 1088 0416 61030000 		.4byte	.LASF69
 1089 041a 01       		.byte	0x1
 1090 041b F301     		.2byte	0x1f3
 1091 041d 00000000 		.4byte	.LFB139
 1092 0421 20000000 		.4byte	.LFE139-.LFB139
 1093 0425 01       		.uleb128 0x1
 1094 0426 9C       		.byte	0x9c
 1095 0427 71040000 		.4byte	0x471
 1096 042b 15       		.uleb128 0x15
 1097 042c A6050000 		.4byte	.LASF70
 1098 0430 01       		.byte	0x1
 1099 0431 F301     		.2byte	0x1f3
 1100 0433 0A010000 		.4byte	0x10a
 1101 0437 B3000000 		.4byte	.LLST5
 1102 043b 15       		.uleb128 0x15
 1103 043c 3D000000 		.4byte	.LASF71
 1104 0440 01       		.byte	0x1
 1105 0441 F301     		.2byte	0x1f3
 1106 0443 0A010000 		.4byte	0x10a
 1107 0447 D4000000 		.4byte	.LLST6
 1108 044b 16       		.uleb128 0x16
 1109 044c 9A060000 		.4byte	.LASF64
 1110 0450 01       		.byte	0x1
 1111 0451 F501     		.2byte	0x1f5
 1112 0453 11030000 		.4byte	0x311
 1113 0457 F5000000 		.4byte	.LLST7
 1114 045b 19       		.uleb128 0x19
 1115 045c F6030000 		.4byte	.LASF75
 1116 0460 01       		.byte	0x1
 1117 0461 F601     		.2byte	0x1f6
 1118 0463 71040000 		.4byte	0x471
 1119 0467 1A       		.uleb128 0x1a
 1120 0468 18000000 		.4byte	.LVL15
 1121 046c B2030000 		.4byte	0x3b2
 1122 0470 00       		.byte	0
 1123 0471 0F       		.uleb128 0xf
 1124 0472 04       		.byte	0x4
 1125 0473 77040000 		.4byte	0x477
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 52


 1126 0477 1B       		.uleb128 0x1b
 1127 0478 1D030000 		.4byte	0x31d
 1128 047c 13       		.uleb128 0x13
 1129 047d 24060000 		.4byte	.LASF73
 1130 0481 01       		.byte	0x1
 1131 0482 C701     		.2byte	0x1c7
 1132 0484 00000000 		.4byte	.LFB138
 1133 0488 24000000 		.4byte	.LFE138-.LFB138
 1134 048c 01       		.uleb128 0x1
 1135 048d 9C       		.byte	0x9c
 1136 048e E5040000 		.4byte	0x4e5
 1137 0492 15       		.uleb128 0x15
 1138 0493 A6050000 		.4byte	.LASF70
 1139 0497 01       		.byte	0x1
 1140 0498 C701     		.2byte	0x1c7
 1141 049a 0A010000 		.4byte	0x10a
 1142 049e 2F010000 		.4byte	.LLST8
 1143 04a2 16       		.uleb128 0x16
 1144 04a3 3D000000 		.4byte	.LASF71
 1145 04a7 01       		.byte	0x1
 1146 04a8 C901     		.2byte	0x1c9
 1147 04aa 0A010000 		.4byte	0x10a
 1148 04ae 5B010000 		.4byte	.LLST9
 1149 04b2 16       		.uleb128 0x16
 1150 04b3 62050000 		.4byte	.LASF74
 1151 04b7 01       		.byte	0x1
 1152 04b8 CA01     		.2byte	0x1ca
 1153 04ba 0A010000 		.4byte	0x10a
 1154 04be 8F010000 		.4byte	.LLST10
 1155 04c2 19       		.uleb128 0x19
 1156 04c3 F6030000 		.4byte	.LASF75
 1157 04c7 01       		.byte	0x1
 1158 04c8 CC01     		.2byte	0x1cc
 1159 04ca 71040000 		.4byte	0x471
 1160 04ce 17       		.uleb128 0x17
 1161 04cf 16000000 		.4byte	.LVL20
 1162 04d3 15040000 		.4byte	0x415
 1163 04d7 18       		.uleb128 0x18
 1164 04d8 01       		.uleb128 0x1
 1165 04d9 50       		.byte	0x50
 1166 04da 02       		.uleb128 0x2
 1167 04db 75       		.byte	0x75
 1168 04dc 00       		.sleb128 0
 1169 04dd 18       		.uleb128 0x18
 1170 04de 01       		.uleb128 0x1
 1171 04df 51       		.byte	0x51
 1172 04e0 02       		.uleb128 0x2
 1173 04e1 74       		.byte	0x74
 1174 04e2 00       		.sleb128 0
 1175 04e3 00       		.byte	0
 1176 04e4 00       		.byte	0
 1177 04e5 13       		.uleb128 0x13
 1178 04e6 6D000000 		.4byte	.LASF76
 1179 04ea 01       		.byte	0x1
 1180 04eb A301     		.2byte	0x1a3
 1181 04ed 00000000 		.4byte	.LFB137
 1182 04f1 16000000 		.4byte	.LFE137-.LFB137
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 53


 1183 04f5 01       		.uleb128 0x1
 1184 04f6 9C       		.byte	0x9c
 1185 04f7 1C050000 		.4byte	0x51c
 1186 04fb 16       		.uleb128 0x16
 1187 04fc A6050000 		.4byte	.LASF70
 1188 0500 01       		.byte	0x1
 1189 0501 A501     		.2byte	0x1a5
 1190 0503 0A010000 		.4byte	0x10a
 1191 0507 A2010000 		.4byte	.LLST11
 1192 050b 17       		.uleb128 0x17
 1193 050c 0C000000 		.4byte	.LVL26
 1194 0510 7C040000 		.4byte	0x47c
 1195 0514 18       		.uleb128 0x18
 1196 0515 01       		.uleb128 0x1
 1197 0516 50       		.byte	0x50
 1198 0517 02       		.uleb128 0x2
 1199 0518 74       		.byte	0x74
 1200 0519 00       		.sleb128 0
 1201 051a 00       		.byte	0
 1202 051b 00       		.byte	0
 1203 051c 1C       		.uleb128 0x1c
 1204 051d 83020000 		.4byte	.LASF81
 1205 0521 01       		.byte	0x1
 1206 0522 A506     		.2byte	0x6a5
 1207 0524 0A010000 		.4byte	0x10a
 1208 0528 00000000 		.4byte	.LFB142
 1209 052c 14000000 		.4byte	.LFE142-.LFB142
 1210 0530 01       		.uleb128 0x1
 1211 0531 9C       		.byte	0x9c
 1212 0532 83050000 		.4byte	0x583
 1213 0536 15       		.uleb128 0x15
 1214 0537 A4000000 		.4byte	.LASF77
 1215 053b 01       		.byte	0x1
 1216 053c A506     		.2byte	0x6a5
 1217 053e 0A010000 		.4byte	0x10a
 1218 0542 D7010000 		.4byte	.LLST12
 1219 0546 15       		.uleb128 0x15
 1220 0547 F2050000 		.4byte	.LASF78
 1221 054b 01       		.byte	0x1
 1222 054c A506     		.2byte	0x6a5
 1223 054e 0A010000 		.4byte	0x10a
 1224 0552 F8010000 		.4byte	.LLST13
 1225 0556 1D       		.uleb128 0x1d
 1226 0557 6E00     		.ascii	"n\000"
 1227 0559 01       		.byte	0x1
 1228 055a A506     		.2byte	0x6a5
 1229 055c 0A010000 		.4byte	0x10a
 1230 0560 01       		.uleb128 0x1
 1231 0561 52       		.byte	0x52
 1232 0562 15       		.uleb128 0x15
 1233 0563 D4020000 		.4byte	.LASF79
 1234 0567 01       		.byte	0x1
 1235 0568 A506     		.2byte	0x6a5
 1236 056a 0A010000 		.4byte	0x10a
 1237 056e 19020000 		.4byte	.LLST14
 1238 0572 16       		.uleb128 0x16
 1239 0573 A8010000 		.4byte	.LASF80
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 54


 1240 0577 01       		.byte	0x1
 1241 0578 A706     		.2byte	0x6a7
 1242 057a 0A010000 		.4byte	0x10a
 1243 057e 3A020000 		.4byte	.LLST15
 1244 0582 00       		.byte	0
 1245 0583 1E       		.uleb128 0x1e
 1246 0584 48050000 		.4byte	.LASF82
 1247 0588 01       		.byte	0x1
 1248 0589 FF       		.byte	0xff
 1249 058a 0A010000 		.4byte	0x10a
 1250 058e 00000000 		.4byte	.LFB136
 1251 0592 A0000000 		.4byte	.LFE136-.LFB136
 1252 0596 01       		.uleb128 0x1
 1253 0597 9C       		.byte	0x9c
 1254 0598 5E060000 		.4byte	0x65e
 1255 059c 15       		.uleb128 0x15
 1256 059d 4A020000 		.4byte	.LASF83
 1257 05a1 01       		.byte	0x1
 1258 05a2 0001     		.2byte	0x100
 1259 05a4 5E060000 		.4byte	0x65e
 1260 05a8 5C020000 		.4byte	.LLST16
 1261 05ac 15       		.uleb128 0x15
 1262 05ad 9A060000 		.4byte	.LASF64
 1263 05b1 01       		.byte	0x1
 1264 05b2 0101     		.2byte	0x101
 1265 05b4 11030000 		.4byte	0x311
 1266 05b8 7A020000 		.4byte	.LLST17
 1267 05bc 15       		.uleb128 0x15
 1268 05bd EE000000 		.4byte	.LASF65
 1269 05c1 01       		.byte	0x1
 1270 05c2 0201     		.2byte	0x102
 1271 05c4 0A010000 		.4byte	0x10a
 1272 05c8 98020000 		.4byte	.LLST18
 1273 05cc 16       		.uleb128 0x16
 1274 05cd C8050000 		.4byte	.LASF84
 1275 05d1 01       		.byte	0x1
 1276 05d2 0401     		.2byte	0x104
 1277 05d4 0A010000 		.4byte	0x10a
 1278 05d8 B6020000 		.4byte	.LLST19
 1279 05dc 16       		.uleb128 0x16
 1280 05dd DA000000 		.4byte	.LASF85
 1281 05e1 01       		.byte	0x1
 1282 05e2 0501     		.2byte	0x105
 1283 05e4 0A010000 		.4byte	0x10a
 1284 05e8 EC020000 		.4byte	.LLST20
 1285 05ec 16       		.uleb128 0x16
 1286 05ed 61040000 		.4byte	.LASF72
 1287 05f1 01       		.byte	0x1
 1288 05f2 0601     		.2byte	0x106
 1289 05f4 0A010000 		.4byte	0x10a
 1290 05f8 15030000 		.4byte	.LLST21
 1291 05fc 16       		.uleb128 0x16
 1292 05fd 7C050000 		.4byte	.LASF86
 1293 0601 01       		.byte	0x1
 1294 0602 0701     		.2byte	0x107
 1295 0604 0A010000 		.4byte	0x10a
 1296 0608 4A030000 		.4byte	.LLST22
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 55


 1297 060c 1F       		.uleb128 0x1f
 1298 060d 31000000 		.4byte	.LASF87
 1299 0611 01       		.byte	0x1
 1300 0612 0801     		.2byte	0x108
 1301 0614 0A010000 		.4byte	0x10a
 1302 0618 00       		.byte	0
 1303 0619 16       		.uleb128 0x16
 1304 061a C2010000 		.4byte	.LASF88
 1305 061e 01       		.byte	0x1
 1306 061f 0B01     		.2byte	0x10b
 1307 0621 0A010000 		.4byte	0x10a
 1308 0625 5E030000 		.4byte	.LLST23
 1309 0629 20       		.uleb128 0x20
 1310 062a 4E000000 		.4byte	.LVL44
 1311 062e 6D030000 		.4byte	0x36d
 1312 0632 49060000 		.4byte	0x649
 1313 0636 18       		.uleb128 0x18
 1314 0637 01       		.uleb128 0x1
 1315 0638 50       		.byte	0x50
 1316 0639 02       		.uleb128 0x2
 1317 063a 75       		.byte	0x75
 1318 063b 00       		.sleb128 0
 1319 063c 18       		.uleb128 0x18
 1320 063d 01       		.uleb128 0x1
 1321 063e 51       		.byte	0x51
 1322 063f 02       		.uleb128 0x2
 1323 0640 77       		.byte	0x77
 1324 0641 00       		.sleb128 0
 1325 0642 18       		.uleb128 0x18
 1326 0643 01       		.uleb128 0x1
 1327 0644 52       		.byte	0x52
 1328 0645 02       		.uleb128 0x2
 1329 0646 74       		.byte	0x74
 1330 0647 00       		.sleb128 0
 1331 0648 00       		.byte	0
 1332 0649 17       		.uleb128 0x17
 1333 064a 84000000 		.4byte	.LVL51
 1334 064e 1C050000 		.4byte	0x51c
 1335 0652 18       		.uleb128 0x18
 1336 0653 01       		.uleb128 0x1
 1337 0654 52       		.byte	0x52
 1338 0655 01       		.uleb128 0x1
 1339 0656 31       		.byte	0x31
 1340 0657 18       		.uleb128 0x18
 1341 0658 01       		.uleb128 0x1
 1342 0659 53       		.byte	0x53
 1343 065a 01       		.uleb128 0x1
 1344 065b 38       		.byte	0x38
 1345 065c 00       		.byte	0
 1346 065d 00       		.byte	0
 1347 065e 0F       		.uleb128 0xf
 1348 065f 04       		.byte	0x4
 1349 0660 DD010000 		.4byte	0x1dd
 1350 0664 1E       		.uleb128 0x1e
 1351 0665 06020000 		.4byte	.LASF89
 1352 0669 01       		.byte	0x1
 1353 066a C8       		.byte	0xc8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 56


 1354 066b E6000000 		.4byte	0xe6
 1355 066f 00000000 		.4byte	.LFB135
 1356 0673 20000000 		.4byte	.LFE135-.LFB135
 1357 0677 01       		.uleb128 0x1
 1358 0678 9C       		.byte	0x9c
 1359 0679 F0060000 		.4byte	0x6f0
 1360 067d 21       		.uleb128 0x21
 1361 067e A6050000 		.4byte	.LASF70
 1362 0682 01       		.byte	0x1
 1363 0683 C8       		.byte	0xc8
 1364 0684 0A010000 		.4byte	0x10a
 1365 0688 9D030000 		.4byte	.LLST24
 1366 068c 21       		.uleb128 0x21
 1367 068d 3D000000 		.4byte	.LASF71
 1368 0691 01       		.byte	0x1
 1369 0692 C8       		.byte	0xc8
 1370 0693 0A010000 		.4byte	0x10a
 1371 0697 BE030000 		.4byte	.LLST25
 1372 069b 22       		.uleb128 0x22
 1373 069c 31000000 		.4byte	.LASF87
 1374 06a0 01       		.byte	0x1
 1375 06a1 CA       		.byte	0xca
 1376 06a2 0A010000 		.4byte	0x10a
 1377 06a6 DF030000 		.4byte	.LLST26
 1378 06aa 22       		.uleb128 0x22
 1379 06ab 9A060000 		.4byte	.LASF64
 1380 06af 01       		.byte	0x1
 1381 06b0 CC       		.byte	0xcc
 1382 06b1 11030000 		.4byte	0x311
 1383 06b5 FE030000 		.4byte	.LLST27
 1384 06b9 23       		.uleb128 0x23
 1385 06ba F6030000 		.4byte	.LASF75
 1386 06be 01       		.byte	0x1
 1387 06bf CD       		.byte	0xcd
 1388 06c0 71040000 		.4byte	0x471
 1389 06c4 22       		.uleb128 0x22
 1390 06c5 4A020000 		.4byte	.LASF83
 1391 06c9 01       		.byte	0x1
 1392 06ca CE       		.byte	0xce
 1393 06cb 5E060000 		.4byte	0x65e
 1394 06cf 51040000 		.4byte	.LLST28
 1395 06d3 17       		.uleb128 0x17
 1396 06d4 1A000000 		.4byte	.LVL63
 1397 06d8 83050000 		.4byte	0x583
 1398 06dc 18       		.uleb128 0x18
 1399 06dd 01       		.uleb128 0x1
 1400 06de 51       		.byte	0x51
 1401 06df 0E       		.uleb128 0xe
 1402 06e0 F3       		.byte	0xf3
 1403 06e1 01       		.uleb128 0x1
 1404 06e2 51       		.byte	0x51
 1405 06e3 32       		.byte	0x32
 1406 06e4 24       		.byte	0x24
 1407 06e5 F3       		.byte	0xf3
 1408 06e6 01       		.uleb128 0x1
 1409 06e7 51       		.byte	0x51
 1410 06e8 22       		.byte	0x22
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 57


 1411 06e9 31       		.byte	0x31
 1412 06ea 24       		.byte	0x24
 1413 06eb 74       		.byte	0x74
 1414 06ec 00       		.sleb128 0
 1415 06ed 22       		.byte	0x22
 1416 06ee 00       		.byte	0
 1417 06ef 00       		.byte	0
 1418 06f0 1E       		.uleb128 0x1e
 1419 06f1 85040000 		.4byte	.LASF90
 1420 06f5 01       		.byte	0x1
 1421 06f6 8F       		.byte	0x8f
 1422 06f7 E6000000 		.4byte	0xe6
 1423 06fb 00000000 		.4byte	.LFB134
 1424 06ff 2C000000 		.4byte	.LFE134-.LFB134
 1425 0703 01       		.uleb128 0x1
 1426 0704 9C       		.byte	0x9c
 1427 0705 67070000 		.4byte	0x767
 1428 0709 21       		.uleb128 0x21
 1429 070a A6050000 		.4byte	.LASF70
 1430 070e 01       		.byte	0x1
 1431 070f 8F       		.byte	0x8f
 1432 0710 0A010000 		.4byte	0x10a
 1433 0714 70040000 		.4byte	.LLST29
 1434 0718 22       		.uleb128 0x22
 1435 0719 3D000000 		.4byte	.LASF71
 1436 071d 01       		.byte	0x1
 1437 071e 91       		.byte	0x91
 1438 071f 0A010000 		.4byte	0x10a
 1439 0723 9C040000 		.4byte	.LLST30
 1440 0727 22       		.uleb128 0x22
 1441 0728 62050000 		.4byte	.LASF74
 1442 072c 01       		.byte	0x1
 1443 072d 92       		.byte	0x92
 1444 072e 0A010000 		.4byte	0x10a
 1445 0732 DD040000 		.4byte	.LLST31
 1446 0736 23       		.uleb128 0x23
 1447 0737 F6030000 		.4byte	.LASF75
 1448 073b 01       		.byte	0x1
 1449 073c 94       		.byte	0x94
 1450 073d 71040000 		.4byte	0x471
 1451 0741 22       		.uleb128 0x22
 1452 0742 46000000 		.4byte	.LASF91
 1453 0746 01       		.byte	0x1
 1454 0747 95       		.byte	0x95
 1455 0748 E6000000 		.4byte	0xe6
 1456 074c F0040000 		.4byte	.LLST32
 1457 0750 17       		.uleb128 0x17
 1458 0751 18000000 		.4byte	.LVL69
 1459 0755 64060000 		.4byte	0x664
 1460 0759 18       		.uleb128 0x18
 1461 075a 01       		.uleb128 0x1
 1462 075b 50       		.byte	0x50
 1463 075c 02       		.uleb128 0x2
 1464 075d 76       		.byte	0x76
 1465 075e 00       		.sleb128 0
 1466 075f 18       		.uleb128 0x18
 1467 0760 01       		.uleb128 0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 58


 1468 0761 51       		.byte	0x51
 1469 0762 02       		.uleb128 0x2
 1470 0763 74       		.byte	0x74
 1471 0764 00       		.sleb128 0
 1472 0765 00       		.byte	0
 1473 0766 00       		.byte	0
 1474 0767 1E       		.uleb128 0x1e
 1475 0768 D2040000 		.4byte	.LASF92
 1476 076c 01       		.byte	0x1
 1477 076d 62       		.byte	0x62
 1478 076e E6000000 		.4byte	0xe6
 1479 0772 00000000 		.4byte	.LFB133
 1480 0776 1C000000 		.4byte	.LFE133-.LFB133
 1481 077a 01       		.uleb128 0x1
 1482 077b 9C       		.byte	0x9c
 1483 077c AF070000 		.4byte	0x7af
 1484 0780 22       		.uleb128 0x22
 1485 0781 A6050000 		.4byte	.LASF70
 1486 0785 01       		.byte	0x1
 1487 0786 64       		.byte	0x64
 1488 0787 0A010000 		.4byte	0x10a
 1489 078b 1A050000 		.4byte	.LLST33
 1490 078f 22       		.uleb128 0x22
 1491 0790 46000000 		.4byte	.LASF91
 1492 0794 01       		.byte	0x1
 1493 0795 65       		.byte	0x65
 1494 0796 E6000000 		.4byte	0xe6
 1495 079a 4F050000 		.4byte	.LLST34
 1496 079e 17       		.uleb128 0x17
 1497 079f 0E000000 		.4byte	.LVL76
 1498 07a3 F0060000 		.4byte	0x6f0
 1499 07a7 18       		.uleb128 0x18
 1500 07a8 01       		.uleb128 0x1
 1501 07a9 50       		.byte	0x50
 1502 07aa 02       		.uleb128 0x2
 1503 07ab 74       		.byte	0x74
 1504 07ac 00       		.sleb128 0
 1505 07ad 00       		.byte	0
 1506 07ae 00       		.byte	0
 1507 07af 24       		.uleb128 0x24
 1508 07b0 8D060000 		.4byte	.LASF93
 1509 07b4 07       		.byte	0x7
 1510 07b5 F907     		.2byte	0x7f9
 1511 07b7 BB070000 		.4byte	0x7bb
 1512 07bb 25       		.uleb128 0x25
 1513 07bc B4000000 		.4byte	0xb4
 1514 07c0 24       		.uleb128 0x24
 1515 07c1 60060000 		.4byte	.LASF94
 1516 07c5 06       		.byte	0x6
 1517 07c6 D403     		.2byte	0x3d4
 1518 07c8 CC070000 		.4byte	0x7cc
 1519 07cc 1B       		.uleb128 0x1b
 1520 07cd 50030000 		.4byte	0x350
 1521 07d1 00       		.byte	0
 1522              		.section	.debug_abbrev,"",%progbits
 1523              	.Ldebug_abbrev0:
 1524 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 59


 1525 0001 11       		.uleb128 0x11
 1526 0002 01       		.byte	0x1
 1527 0003 25       		.uleb128 0x25
 1528 0004 0E       		.uleb128 0xe
 1529 0005 13       		.uleb128 0x13
 1530 0006 0B       		.uleb128 0xb
 1531 0007 03       		.uleb128 0x3
 1532 0008 0E       		.uleb128 0xe
 1533 0009 1B       		.uleb128 0x1b
 1534 000a 0E       		.uleb128 0xe
 1535 000b 55       		.uleb128 0x55
 1536 000c 17       		.uleb128 0x17
 1537 000d 11       		.uleb128 0x11
 1538 000e 01       		.uleb128 0x1
 1539 000f 10       		.uleb128 0x10
 1540 0010 17       		.uleb128 0x17
 1541 0011 00       		.byte	0
 1542 0012 00       		.byte	0
 1543 0013 02       		.uleb128 0x2
 1544 0014 24       		.uleb128 0x24
 1545 0015 00       		.byte	0
 1546 0016 0B       		.uleb128 0xb
 1547 0017 0B       		.uleb128 0xb
 1548 0018 3E       		.uleb128 0x3e
 1549 0019 0B       		.uleb128 0xb
 1550 001a 03       		.uleb128 0x3
 1551 001b 08       		.uleb128 0x8
 1552 001c 00       		.byte	0
 1553 001d 00       		.byte	0
 1554 001e 03       		.uleb128 0x3
 1555 001f 24       		.uleb128 0x24
 1556 0020 00       		.byte	0
 1557 0021 0B       		.uleb128 0xb
 1558 0022 0B       		.uleb128 0xb
 1559 0023 3E       		.uleb128 0x3e
 1560 0024 0B       		.uleb128 0xb
 1561 0025 03       		.uleb128 0x3
 1562 0026 0E       		.uleb128 0xe
 1563 0027 00       		.byte	0
 1564 0028 00       		.byte	0
 1565 0029 04       		.uleb128 0x4
 1566 002a 16       		.uleb128 0x16
 1567 002b 00       		.byte	0
 1568 002c 03       		.uleb128 0x3
 1569 002d 0E       		.uleb128 0xe
 1570 002e 3A       		.uleb128 0x3a
 1571 002f 0B       		.uleb128 0xb
 1572 0030 3B       		.uleb128 0x3b
 1573 0031 0B       		.uleb128 0xb
 1574 0032 49       		.uleb128 0x49
 1575 0033 13       		.uleb128 0x13
 1576 0034 00       		.byte	0
 1577 0035 00       		.byte	0
 1578 0036 05       		.uleb128 0x5
 1579 0037 16       		.uleb128 0x16
 1580 0038 00       		.byte	0
 1581 0039 03       		.uleb128 0x3
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 60


 1582 003a 0E       		.uleb128 0xe
 1583 003b 3A       		.uleb128 0x3a
 1584 003c 0B       		.uleb128 0xb
 1585 003d 3B       		.uleb128 0x3b
 1586 003e 05       		.uleb128 0x5
 1587 003f 49       		.uleb128 0x49
 1588 0040 13       		.uleb128 0x13
 1589 0041 00       		.byte	0
 1590 0042 00       		.byte	0
 1591 0043 06       		.uleb128 0x6
 1592 0044 04       		.uleb128 0x4
 1593 0045 01       		.byte	0x1
 1594 0046 0B       		.uleb128 0xb
 1595 0047 0B       		.uleb128 0xb
 1596 0048 49       		.uleb128 0x49
 1597 0049 13       		.uleb128 0x13
 1598 004a 3A       		.uleb128 0x3a
 1599 004b 0B       		.uleb128 0xb
 1600 004c 3B       		.uleb128 0x3b
 1601 004d 0B       		.uleb128 0xb
 1602 004e 01       		.uleb128 0x1
 1603 004f 13       		.uleb128 0x13
 1604 0050 00       		.byte	0
 1605 0051 00       		.byte	0
 1606 0052 07       		.uleb128 0x7
 1607 0053 28       		.uleb128 0x28
 1608 0054 00       		.byte	0
 1609 0055 03       		.uleb128 0x3
 1610 0056 0E       		.uleb128 0xe
 1611 0057 1C       		.uleb128 0x1c
 1612 0058 0B       		.uleb128 0xb
 1613 0059 00       		.byte	0
 1614 005a 00       		.byte	0
 1615 005b 08       		.uleb128 0x8
 1616 005c 13       		.uleb128 0x13
 1617 005d 01       		.byte	0x1
 1618 005e 0B       		.uleb128 0xb
 1619 005f 0B       		.uleb128 0xb
 1620 0060 3A       		.uleb128 0x3a
 1621 0061 0B       		.uleb128 0xb
 1622 0062 3B       		.uleb128 0x3b
 1623 0063 0B       		.uleb128 0xb
 1624 0064 01       		.uleb128 0x1
 1625 0065 13       		.uleb128 0x13
 1626 0066 00       		.byte	0
 1627 0067 00       		.byte	0
 1628 0068 09       		.uleb128 0x9
 1629 0069 0D       		.uleb128 0xd
 1630 006a 00       		.byte	0
 1631 006b 03       		.uleb128 0x3
 1632 006c 0E       		.uleb128 0xe
 1633 006d 3A       		.uleb128 0x3a
 1634 006e 0B       		.uleb128 0xb
 1635 006f 3B       		.uleb128 0x3b
 1636 0070 0B       		.uleb128 0xb
 1637 0071 49       		.uleb128 0x49
 1638 0072 13       		.uleb128 0x13
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 61


 1639 0073 38       		.uleb128 0x38
 1640 0074 0B       		.uleb128 0xb
 1641 0075 00       		.byte	0
 1642 0076 00       		.byte	0
 1643 0077 0A       		.uleb128 0xa
 1644 0078 13       		.uleb128 0x13
 1645 0079 01       		.byte	0x1
 1646 007a 0B       		.uleb128 0xb
 1647 007b 0B       		.uleb128 0xb
 1648 007c 3A       		.uleb128 0x3a
 1649 007d 0B       		.uleb128 0xb
 1650 007e 3B       		.uleb128 0x3b
 1651 007f 05       		.uleb128 0x5
 1652 0080 01       		.uleb128 0x1
 1653 0081 13       		.uleb128 0x13
 1654 0082 00       		.byte	0
 1655 0083 00       		.byte	0
 1656 0084 0B       		.uleb128 0xb
 1657 0085 0D       		.uleb128 0xd
 1658 0086 00       		.byte	0
 1659 0087 03       		.uleb128 0x3
 1660 0088 08       		.uleb128 0x8
 1661 0089 3A       		.uleb128 0x3a
 1662 008a 0B       		.uleb128 0xb
 1663 008b 3B       		.uleb128 0x3b
 1664 008c 05       		.uleb128 0x5
 1665 008d 49       		.uleb128 0x49
 1666 008e 13       		.uleb128 0x13
 1667 008f 38       		.uleb128 0x38
 1668 0090 0B       		.uleb128 0xb
 1669 0091 00       		.byte	0
 1670 0092 00       		.byte	0
 1671 0093 0C       		.uleb128 0xc
 1672 0094 0D       		.uleb128 0xd
 1673 0095 00       		.byte	0
 1674 0096 03       		.uleb128 0x3
 1675 0097 0E       		.uleb128 0xe
 1676 0098 3A       		.uleb128 0x3a
 1677 0099 0B       		.uleb128 0xb
 1678 009a 3B       		.uleb128 0x3b
 1679 009b 05       		.uleb128 0x5
 1680 009c 49       		.uleb128 0x49
 1681 009d 13       		.uleb128 0x13
 1682 009e 38       		.uleb128 0x38
 1683 009f 0B       		.uleb128 0xb
 1684 00a0 00       		.byte	0
 1685 00a1 00       		.byte	0
 1686 00a2 0D       		.uleb128 0xd
 1687 00a3 01       		.uleb128 0x1
 1688 00a4 01       		.byte	0x1
 1689 00a5 49       		.uleb128 0x49
 1690 00a6 13       		.uleb128 0x13
 1691 00a7 01       		.uleb128 0x1
 1692 00a8 13       		.uleb128 0x13
 1693 00a9 00       		.byte	0
 1694 00aa 00       		.byte	0
 1695 00ab 0E       		.uleb128 0xe
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 62


 1696 00ac 21       		.uleb128 0x21
 1697 00ad 00       		.byte	0
 1698 00ae 49       		.uleb128 0x49
 1699 00af 13       		.uleb128 0x13
 1700 00b0 2F       		.uleb128 0x2f
 1701 00b1 0B       		.uleb128 0xb
 1702 00b2 00       		.byte	0
 1703 00b3 00       		.byte	0
 1704 00b4 0F       		.uleb128 0xf
 1705 00b5 0F       		.uleb128 0xf
 1706 00b6 00       		.byte	0
 1707 00b7 0B       		.uleb128 0xb
 1708 00b8 0B       		.uleb128 0xb
 1709 00b9 49       		.uleb128 0x49
 1710 00ba 13       		.uleb128 0x13
 1711 00bb 00       		.byte	0
 1712 00bc 00       		.byte	0
 1713 00bd 10       		.uleb128 0x10
 1714 00be 26       		.uleb128 0x26
 1715 00bf 00       		.byte	0
 1716 00c0 00       		.byte	0
 1717 00c1 00       		.byte	0
 1718 00c2 11       		.uleb128 0x11
 1719 00c3 0F       		.uleb128 0xf
 1720 00c4 00       		.byte	0
 1721 00c5 0B       		.uleb128 0xb
 1722 00c6 0B       		.uleb128 0xb
 1723 00c7 00       		.byte	0
 1724 00c8 00       		.byte	0
 1725 00c9 12       		.uleb128 0x12
 1726 00ca 2E       		.uleb128 0x2e
 1727 00cb 00       		.byte	0
 1728 00cc 3F       		.uleb128 0x3f
 1729 00cd 19       		.uleb128 0x19
 1730 00ce 03       		.uleb128 0x3
 1731 00cf 0E       		.uleb128 0xe
 1732 00d0 3A       		.uleb128 0x3a
 1733 00d1 0B       		.uleb128 0xb
 1734 00d2 3B       		.uleb128 0x3b
 1735 00d3 0B       		.uleb128 0xb
 1736 00d4 27       		.uleb128 0x27
 1737 00d5 19       		.uleb128 0x19
 1738 00d6 11       		.uleb128 0x11
 1739 00d7 01       		.uleb128 0x1
 1740 00d8 12       		.uleb128 0x12
 1741 00d9 06       		.uleb128 0x6
 1742 00da 40       		.uleb128 0x40
 1743 00db 18       		.uleb128 0x18
 1744 00dc 9742     		.uleb128 0x2117
 1745 00de 19       		.uleb128 0x19
 1746 00df 00       		.byte	0
 1747 00e0 00       		.byte	0
 1748 00e1 13       		.uleb128 0x13
 1749 00e2 2E       		.uleb128 0x2e
 1750 00e3 01       		.byte	0x1
 1751 00e4 3F       		.uleb128 0x3f
 1752 00e5 19       		.uleb128 0x19
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 63


 1753 00e6 03       		.uleb128 0x3
 1754 00e7 0E       		.uleb128 0xe
 1755 00e8 3A       		.uleb128 0x3a
 1756 00e9 0B       		.uleb128 0xb
 1757 00ea 3B       		.uleb128 0x3b
 1758 00eb 05       		.uleb128 0x5
 1759 00ec 27       		.uleb128 0x27
 1760 00ed 19       		.uleb128 0x19
 1761 00ee 11       		.uleb128 0x11
 1762 00ef 01       		.uleb128 0x1
 1763 00f0 12       		.uleb128 0x12
 1764 00f1 06       		.uleb128 0x6
 1765 00f2 40       		.uleb128 0x40
 1766 00f3 18       		.uleb128 0x18
 1767 00f4 9742     		.uleb128 0x2117
 1768 00f6 19       		.uleb128 0x19
 1769 00f7 01       		.uleb128 0x1
 1770 00f8 13       		.uleb128 0x13
 1771 00f9 00       		.byte	0
 1772 00fa 00       		.byte	0
 1773 00fb 14       		.uleb128 0x14
 1774 00fc 05       		.uleb128 0x5
 1775 00fd 00       		.byte	0
 1776 00fe 03       		.uleb128 0x3
 1777 00ff 0E       		.uleb128 0xe
 1778 0100 3A       		.uleb128 0x3a
 1779 0101 0B       		.uleb128 0xb
 1780 0102 3B       		.uleb128 0x3b
 1781 0103 05       		.uleb128 0x5
 1782 0104 49       		.uleb128 0x49
 1783 0105 13       		.uleb128 0x13
 1784 0106 02       		.uleb128 0x2
 1785 0107 18       		.uleb128 0x18
 1786 0108 00       		.byte	0
 1787 0109 00       		.byte	0
 1788 010a 15       		.uleb128 0x15
 1789 010b 05       		.uleb128 0x5
 1790 010c 00       		.byte	0
 1791 010d 03       		.uleb128 0x3
 1792 010e 0E       		.uleb128 0xe
 1793 010f 3A       		.uleb128 0x3a
 1794 0110 0B       		.uleb128 0xb
 1795 0111 3B       		.uleb128 0x3b
 1796 0112 05       		.uleb128 0x5
 1797 0113 49       		.uleb128 0x49
 1798 0114 13       		.uleb128 0x13
 1799 0115 02       		.uleb128 0x2
 1800 0116 17       		.uleb128 0x17
 1801 0117 00       		.byte	0
 1802 0118 00       		.byte	0
 1803 0119 16       		.uleb128 0x16
 1804 011a 34       		.uleb128 0x34
 1805 011b 00       		.byte	0
 1806 011c 03       		.uleb128 0x3
 1807 011d 0E       		.uleb128 0xe
 1808 011e 3A       		.uleb128 0x3a
 1809 011f 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 64


 1810 0120 3B       		.uleb128 0x3b
 1811 0121 05       		.uleb128 0x5
 1812 0122 49       		.uleb128 0x49
 1813 0123 13       		.uleb128 0x13
 1814 0124 02       		.uleb128 0x2
 1815 0125 17       		.uleb128 0x17
 1816 0126 00       		.byte	0
 1817 0127 00       		.byte	0
 1818 0128 17       		.uleb128 0x17
 1819 0129 898201   		.uleb128 0x4109
 1820 012c 01       		.byte	0x1
 1821 012d 11       		.uleb128 0x11
 1822 012e 01       		.uleb128 0x1
 1823 012f 31       		.uleb128 0x31
 1824 0130 13       		.uleb128 0x13
 1825 0131 00       		.byte	0
 1826 0132 00       		.byte	0
 1827 0133 18       		.uleb128 0x18
 1828 0134 8A8201   		.uleb128 0x410a
 1829 0137 00       		.byte	0
 1830 0138 02       		.uleb128 0x2
 1831 0139 18       		.uleb128 0x18
 1832 013a 9142     		.uleb128 0x2111
 1833 013c 18       		.uleb128 0x18
 1834 013d 00       		.byte	0
 1835 013e 00       		.byte	0
 1836 013f 19       		.uleb128 0x19
 1837 0140 34       		.uleb128 0x34
 1838 0141 00       		.byte	0
 1839 0142 03       		.uleb128 0x3
 1840 0143 0E       		.uleb128 0xe
 1841 0144 3A       		.uleb128 0x3a
 1842 0145 0B       		.uleb128 0xb
 1843 0146 3B       		.uleb128 0x3b
 1844 0147 05       		.uleb128 0x5
 1845 0148 49       		.uleb128 0x49
 1846 0149 13       		.uleb128 0x13
 1847 014a 00       		.byte	0
 1848 014b 00       		.byte	0
 1849 014c 1A       		.uleb128 0x1a
 1850 014d 898201   		.uleb128 0x4109
 1851 0150 00       		.byte	0
 1852 0151 11       		.uleb128 0x11
 1853 0152 01       		.uleb128 0x1
 1854 0153 31       		.uleb128 0x31
 1855 0154 13       		.uleb128 0x13
 1856 0155 00       		.byte	0
 1857 0156 00       		.byte	0
 1858 0157 1B       		.uleb128 0x1b
 1859 0158 26       		.uleb128 0x26
 1860 0159 00       		.byte	0
 1861 015a 49       		.uleb128 0x49
 1862 015b 13       		.uleb128 0x13
 1863 015c 00       		.byte	0
 1864 015d 00       		.byte	0
 1865 015e 1C       		.uleb128 0x1c
 1866 015f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 65


 1867 0160 01       		.byte	0x1
 1868 0161 3F       		.uleb128 0x3f
 1869 0162 19       		.uleb128 0x19
 1870 0163 03       		.uleb128 0x3
 1871 0164 0E       		.uleb128 0xe
 1872 0165 3A       		.uleb128 0x3a
 1873 0166 0B       		.uleb128 0xb
 1874 0167 3B       		.uleb128 0x3b
 1875 0168 05       		.uleb128 0x5
 1876 0169 27       		.uleb128 0x27
 1877 016a 19       		.uleb128 0x19
 1878 016b 49       		.uleb128 0x49
 1879 016c 13       		.uleb128 0x13
 1880 016d 11       		.uleb128 0x11
 1881 016e 01       		.uleb128 0x1
 1882 016f 12       		.uleb128 0x12
 1883 0170 06       		.uleb128 0x6
 1884 0171 40       		.uleb128 0x40
 1885 0172 18       		.uleb128 0x18
 1886 0173 9742     		.uleb128 0x2117
 1887 0175 19       		.uleb128 0x19
 1888 0176 01       		.uleb128 0x1
 1889 0177 13       		.uleb128 0x13
 1890 0178 00       		.byte	0
 1891 0179 00       		.byte	0
 1892 017a 1D       		.uleb128 0x1d
 1893 017b 05       		.uleb128 0x5
 1894 017c 00       		.byte	0
 1895 017d 03       		.uleb128 0x3
 1896 017e 08       		.uleb128 0x8
 1897 017f 3A       		.uleb128 0x3a
 1898 0180 0B       		.uleb128 0xb
 1899 0181 3B       		.uleb128 0x3b
 1900 0182 05       		.uleb128 0x5
 1901 0183 49       		.uleb128 0x49
 1902 0184 13       		.uleb128 0x13
 1903 0185 02       		.uleb128 0x2
 1904 0186 18       		.uleb128 0x18
 1905 0187 00       		.byte	0
 1906 0188 00       		.byte	0
 1907 0189 1E       		.uleb128 0x1e
 1908 018a 2E       		.uleb128 0x2e
 1909 018b 01       		.byte	0x1
 1910 018c 3F       		.uleb128 0x3f
 1911 018d 19       		.uleb128 0x19
 1912 018e 03       		.uleb128 0x3
 1913 018f 0E       		.uleb128 0xe
 1914 0190 3A       		.uleb128 0x3a
 1915 0191 0B       		.uleb128 0xb
 1916 0192 3B       		.uleb128 0x3b
 1917 0193 0B       		.uleb128 0xb
 1918 0194 27       		.uleb128 0x27
 1919 0195 19       		.uleb128 0x19
 1920 0196 49       		.uleb128 0x49
 1921 0197 13       		.uleb128 0x13
 1922 0198 11       		.uleb128 0x11
 1923 0199 01       		.uleb128 0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 66


 1924 019a 12       		.uleb128 0x12
 1925 019b 06       		.uleb128 0x6
 1926 019c 40       		.uleb128 0x40
 1927 019d 18       		.uleb128 0x18
 1928 019e 9742     		.uleb128 0x2117
 1929 01a0 19       		.uleb128 0x19
 1930 01a1 01       		.uleb128 0x1
 1931 01a2 13       		.uleb128 0x13
 1932 01a3 00       		.byte	0
 1933 01a4 00       		.byte	0
 1934 01a5 1F       		.uleb128 0x1f
 1935 01a6 34       		.uleb128 0x34
 1936 01a7 00       		.byte	0
 1937 01a8 03       		.uleb128 0x3
 1938 01a9 0E       		.uleb128 0xe
 1939 01aa 3A       		.uleb128 0x3a
 1940 01ab 0B       		.uleb128 0xb
 1941 01ac 3B       		.uleb128 0x3b
 1942 01ad 05       		.uleb128 0x5
 1943 01ae 49       		.uleb128 0x49
 1944 01af 13       		.uleb128 0x13
 1945 01b0 1C       		.uleb128 0x1c
 1946 01b1 0B       		.uleb128 0xb
 1947 01b2 00       		.byte	0
 1948 01b3 00       		.byte	0
 1949 01b4 20       		.uleb128 0x20
 1950 01b5 898201   		.uleb128 0x4109
 1951 01b8 01       		.byte	0x1
 1952 01b9 11       		.uleb128 0x11
 1953 01ba 01       		.uleb128 0x1
 1954 01bb 31       		.uleb128 0x31
 1955 01bc 13       		.uleb128 0x13
 1956 01bd 01       		.uleb128 0x1
 1957 01be 13       		.uleb128 0x13
 1958 01bf 00       		.byte	0
 1959 01c0 00       		.byte	0
 1960 01c1 21       		.uleb128 0x21
 1961 01c2 05       		.uleb128 0x5
 1962 01c3 00       		.byte	0
 1963 01c4 03       		.uleb128 0x3
 1964 01c5 0E       		.uleb128 0xe
 1965 01c6 3A       		.uleb128 0x3a
 1966 01c7 0B       		.uleb128 0xb
 1967 01c8 3B       		.uleb128 0x3b
 1968 01c9 0B       		.uleb128 0xb
 1969 01ca 49       		.uleb128 0x49
 1970 01cb 13       		.uleb128 0x13
 1971 01cc 02       		.uleb128 0x2
 1972 01cd 17       		.uleb128 0x17
 1973 01ce 00       		.byte	0
 1974 01cf 00       		.byte	0
 1975 01d0 22       		.uleb128 0x22
 1976 01d1 34       		.uleb128 0x34
 1977 01d2 00       		.byte	0
 1978 01d3 03       		.uleb128 0x3
 1979 01d4 0E       		.uleb128 0xe
 1980 01d5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 67


 1981 01d6 0B       		.uleb128 0xb
 1982 01d7 3B       		.uleb128 0x3b
 1983 01d8 0B       		.uleb128 0xb
 1984 01d9 49       		.uleb128 0x49
 1985 01da 13       		.uleb128 0x13
 1986 01db 02       		.uleb128 0x2
 1987 01dc 17       		.uleb128 0x17
 1988 01dd 00       		.byte	0
 1989 01de 00       		.byte	0
 1990 01df 23       		.uleb128 0x23
 1991 01e0 34       		.uleb128 0x34
 1992 01e1 00       		.byte	0
 1993 01e2 03       		.uleb128 0x3
 1994 01e3 0E       		.uleb128 0xe
 1995 01e4 3A       		.uleb128 0x3a
 1996 01e5 0B       		.uleb128 0xb
 1997 01e6 3B       		.uleb128 0x3b
 1998 01e7 0B       		.uleb128 0xb
 1999 01e8 49       		.uleb128 0x49
 2000 01e9 13       		.uleb128 0x13
 2001 01ea 00       		.byte	0
 2002 01eb 00       		.byte	0
 2003 01ec 24       		.uleb128 0x24
 2004 01ed 34       		.uleb128 0x34
 2005 01ee 00       		.byte	0
 2006 01ef 03       		.uleb128 0x3
 2007 01f0 0E       		.uleb128 0xe
 2008 01f1 3A       		.uleb128 0x3a
 2009 01f2 0B       		.uleb128 0xb
 2010 01f3 3B       		.uleb128 0x3b
 2011 01f4 05       		.uleb128 0x5
 2012 01f5 49       		.uleb128 0x49
 2013 01f6 13       		.uleb128 0x13
 2014 01f7 3F       		.uleb128 0x3f
 2015 01f8 19       		.uleb128 0x19
 2016 01f9 3C       		.uleb128 0x3c
 2017 01fa 19       		.uleb128 0x19
 2018 01fb 00       		.byte	0
 2019 01fc 00       		.byte	0
 2020 01fd 25       		.uleb128 0x25
 2021 01fe 35       		.uleb128 0x35
 2022 01ff 00       		.byte	0
 2023 0200 49       		.uleb128 0x49
 2024 0201 13       		.uleb128 0x13
 2025 0202 00       		.byte	0
 2026 0203 00       		.byte	0
 2027 0204 00       		.byte	0
 2028              		.section	.debug_loc,"",%progbits
 2029              	.Ldebug_loc0:
 2030              	.LLST0:
 2031 0000 00000000 		.4byte	.LVL0
 2032 0004 02000000 		.4byte	.LVL1
 2033 0008 0100     		.2byte	0x1
 2034 000a 51       		.byte	0x51
 2035 000b 02000000 		.4byte	.LVL1
 2036 000f 1E000000 		.4byte	.LFE141
 2037 0013 0400     		.2byte	0x4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 68


 2038 0015 F3       		.byte	0xf3
 2039 0016 01       		.uleb128 0x1
 2040 0017 51       		.byte	0x51
 2041 0018 9F       		.byte	0x9f
 2042 0019 00000000 		.4byte	0
 2043 001d 00000000 		.4byte	0
 2044              	.LLST1:
 2045 0021 00000000 		.4byte	.LVL0
 2046 0025 18000000 		.4byte	.LVL2
 2047 0029 0100     		.2byte	0x1
 2048 002b 52       		.byte	0x52
 2049 002c 18000000 		.4byte	.LVL2
 2050 0030 1E000000 		.4byte	.LFE141
 2051 0034 0400     		.2byte	0x4
 2052 0036 F3       		.byte	0xf3
 2053 0037 01       		.uleb128 0x1
 2054 0038 52       		.byte	0x52
 2055 0039 9F       		.byte	0x9f
 2056 003a 00000000 		.4byte	0
 2057 003e 00000000 		.4byte	0
 2058              	.LLST2:
 2059 0042 00000000 		.4byte	.LVL3
 2060 0046 0A000000 		.4byte	.LVL5
 2061 004a 0100     		.2byte	0x1
 2062 004c 50       		.byte	0x50
 2063 004d 0A000000 		.4byte	.LVL5
 2064 0051 1E000000 		.4byte	.LFE140
 2065 0055 0100     		.2byte	0x1
 2066 0057 56       		.byte	0x56
 2067 0058 00000000 		.4byte	0
 2068 005c 00000000 		.4byte	0
 2069              	.LLST3:
 2070 0060 00000000 		.4byte	.LVL3
 2071 0064 0A000000 		.4byte	.LVL5
 2072 0068 0100     		.2byte	0x1
 2073 006a 51       		.byte	0x51
 2074 006b 0A000000 		.4byte	.LVL5
 2075 006f 1E000000 		.4byte	.LFE140
 2076 0073 0100     		.2byte	0x1
 2077 0075 55       		.byte	0x55
 2078 0076 00000000 		.4byte	0
 2079 007a 00000000 		.4byte	0
 2080              	.LLST4:
 2081 007e 06000000 		.4byte	.LVL4
 2082 0082 0A000000 		.4byte	.LVL5
 2083 0086 0200     		.2byte	0x2
 2084 0088 31       		.byte	0x31
 2085 0089 9F       		.byte	0x9f
 2086 008a 0A000000 		.4byte	.LVL5
 2087 008e 16000000 		.4byte	.LVL7
 2088 0092 0100     		.2byte	0x1
 2089 0094 54       		.byte	0x54
 2090 0095 16000000 		.4byte	.LVL7
 2091 0099 18000000 		.4byte	.LVL8
 2092 009d 0100     		.2byte	0x1
 2093 009f 53       		.byte	0x53
 2094 00a0 18000000 		.4byte	.LVL8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 69


 2095 00a4 1E000000 		.4byte	.LFE140
 2096 00a8 0100     		.2byte	0x1
 2097 00aa 54       		.byte	0x54
 2098 00ab 00000000 		.4byte	0
 2099 00af 00000000 		.4byte	0
 2100              	.LLST5:
 2101 00b3 00000000 		.4byte	.LVL9
 2102 00b7 0A000000 		.4byte	.LVL11
 2103 00bb 0100     		.2byte	0x1
 2104 00bd 50       		.byte	0x50
 2105 00be 0A000000 		.4byte	.LVL11
 2106 00c2 20000000 		.4byte	.LFE139
 2107 00c6 0400     		.2byte	0x4
 2108 00c8 F3       		.byte	0xf3
 2109 00c9 01       		.uleb128 0x1
 2110 00ca 50       		.byte	0x50
 2111 00cb 9F       		.byte	0x9f
 2112 00cc 00000000 		.4byte	0
 2113 00d0 00000000 		.4byte	0
 2114              	.LLST6:
 2115 00d4 00000000 		.4byte	.LVL9
 2116 00d8 0E000000 		.4byte	.LVL12
 2117 00dc 0100     		.2byte	0x1
 2118 00de 51       		.byte	0x51
 2119 00df 0E000000 		.4byte	.LVL12
 2120 00e3 20000000 		.4byte	.LFE139
 2121 00e7 0400     		.2byte	0x4
 2122 00e9 F3       		.byte	0xf3
 2123 00ea 01       		.uleb128 0x1
 2124 00eb 51       		.byte	0x51
 2125 00ec 9F       		.byte	0x9f
 2126 00ed 00000000 		.4byte	0
 2127 00f1 00000000 		.4byte	0
 2128              	.LLST7:
 2129 00f5 02000000 		.4byte	.LVL10
 2130 00f9 0A000000 		.4byte	.LVL11
 2131 00fd 0200     		.2byte	0x2
 2132 00ff 30       		.byte	0x30
 2133 0100 9F       		.byte	0x9f
 2134 0101 0A000000 		.4byte	.LVL11
 2135 0105 10000000 		.4byte	.LVL13
 2136 0109 0100     		.2byte	0x1
 2137 010b 50       		.byte	0x50
 2138 010c 10000000 		.4byte	.LVL13
 2139 0110 14000000 		.4byte	.LVL14
 2140 0114 0600     		.2byte	0x6
 2141 0116 70       		.byte	0x70
 2142 0117 00       		.sleb128 0
 2143 0118 72       		.byte	0x72
 2144 0119 00       		.sleb128 0
 2145 011a 22       		.byte	0x22
 2146 011b 9F       		.byte	0x9f
 2147 011c 14000000 		.4byte	.LVL14
 2148 0120 17000000 		.4byte	.LVL15-1
 2149 0124 0100     		.2byte	0x1
 2150 0126 50       		.byte	0x50
 2151 0127 00000000 		.4byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 70


 2152 012b 00000000 		.4byte	0
 2153              	.LLST8:
 2154 012f 00000000 		.4byte	.LVL16
 2155 0133 0E000000 		.4byte	.LVL19
 2156 0137 0100     		.2byte	0x1
 2157 0139 50       		.byte	0x50
 2158 013a 0E000000 		.4byte	.LVL19
 2159 013e 20000000 		.4byte	.LVL23
 2160 0142 0100     		.2byte	0x1
 2161 0144 55       		.byte	0x55
 2162 0145 20000000 		.4byte	.LVL23
 2163 0149 24000000 		.4byte	.LFE138
 2164 014d 0400     		.2byte	0x4
 2165 014f F3       		.byte	0xf3
 2166 0150 01       		.uleb128 0x1
 2167 0151 50       		.byte	0x50
 2168 0152 9F       		.byte	0x9f
 2169 0153 00000000 		.4byte	0
 2170 0157 00000000 		.4byte	0
 2171              	.LLST9:
 2172 015b 0C000000 		.4byte	.LVL18
 2173 015f 0E000000 		.4byte	.LVL19
 2174 0163 0100     		.2byte	0x1
 2175 0165 53       		.byte	0x53
 2176 0166 0E000000 		.4byte	.LVL19
 2177 016a 18000000 		.4byte	.LVL21
 2178 016e 0100     		.2byte	0x1
 2179 0170 54       		.byte	0x54
 2180 0171 18000000 		.4byte	.LVL21
 2181 0175 1A000000 		.4byte	.LVL22
 2182 0179 0100     		.2byte	0x1
 2183 017b 53       		.byte	0x53
 2184 017c 1A000000 		.4byte	.LVL22
 2185 0180 20000000 		.4byte	.LVL23
 2186 0184 0100     		.2byte	0x1
 2187 0186 54       		.byte	0x54
 2188 0187 00000000 		.4byte	0
 2189 018b 00000000 		.4byte	0
 2190              	.LLST10:
 2191 018f 0C000000 		.4byte	.LVL18
 2192 0193 0E000000 		.4byte	.LVL19
 2193 0197 0100     		.2byte	0x1
 2194 0199 53       		.byte	0x53
 2195 019a 00000000 		.4byte	0
 2196 019e 00000000 		.4byte	0
 2197              	.LLST11:
 2198 01a2 02000000 		.4byte	.LVL24
 2199 01a6 06000000 		.4byte	.LVL25
 2200 01aa 0200     		.2byte	0x2
 2201 01ac 32       		.byte	0x32
 2202 01ad 9F       		.byte	0x9f
 2203 01ae 06000000 		.4byte	.LVL25
 2204 01b2 0E000000 		.4byte	.LVL27
 2205 01b6 0100     		.2byte	0x1
 2206 01b8 54       		.byte	0x54
 2207 01b9 0E000000 		.4byte	.LVL27
 2208 01bd 10000000 		.4byte	.LVL28
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 71


 2209 01c1 0100     		.2byte	0x1
 2210 01c3 53       		.byte	0x53
 2211 01c4 10000000 		.4byte	.LVL28
 2212 01c8 16000000 		.4byte	.LFE137
 2213 01cc 0100     		.2byte	0x1
 2214 01ce 54       		.byte	0x54
 2215 01cf 00000000 		.4byte	0
 2216 01d3 00000000 		.4byte	0
 2217              	.LLST12:
 2218 01d7 00000000 		.4byte	.LVL29
 2219 01db 08000000 		.4byte	.LVL31
 2220 01df 0100     		.2byte	0x1
 2221 01e1 50       		.byte	0x50
 2222 01e2 08000000 		.4byte	.LVL31
 2223 01e6 14000000 		.4byte	.LFE142
 2224 01ea 0400     		.2byte	0x4
 2225 01ec F3       		.byte	0xf3
 2226 01ed 01       		.uleb128 0x1
 2227 01ee 50       		.byte	0x50
 2228 01ef 9F       		.byte	0x9f
 2229 01f0 00000000 		.4byte	0
 2230 01f4 00000000 		.4byte	0
 2231              	.LLST13:
 2232 01f8 00000000 		.4byte	.LVL29
 2233 01fc 0C000000 		.4byte	.LVL32
 2234 0200 0100     		.2byte	0x1
 2235 0202 51       		.byte	0x51
 2236 0203 0C000000 		.4byte	.LVL32
 2237 0207 14000000 		.4byte	.LFE142
 2238 020b 0400     		.2byte	0x4
 2239 020d F3       		.byte	0xf3
 2240 020e 01       		.uleb128 0x1
 2241 020f 51       		.byte	0x51
 2242 0210 9F       		.byte	0x9f
 2243 0211 00000000 		.4byte	0
 2244 0215 00000000 		.4byte	0
 2245              	.LLST14:
 2246 0219 00000000 		.4byte	.LVL29
 2247 021d 04000000 		.4byte	.LVL30
 2248 0221 0100     		.2byte	0x1
 2249 0223 53       		.byte	0x53
 2250 0224 04000000 		.4byte	.LVL30
 2251 0228 14000000 		.4byte	.LFE142
 2252 022c 0400     		.2byte	0x4
 2253 022e F3       		.byte	0xf3
 2254 022f 01       		.uleb128 0x1
 2255 0230 53       		.byte	0x53
 2256 0231 9F       		.byte	0x9f
 2257 0232 00000000 		.4byte	0
 2258 0236 00000000 		.4byte	0
 2259              	.LLST15:
 2260 023a 10000000 		.4byte	.LVL33
 2261 023e 12000000 		.4byte	.LVL34
 2262 0242 0500     		.2byte	0x5
 2263 0244 70       		.byte	0x70
 2264 0245 00       		.sleb128 0
 2265 0246 38       		.byte	0x38
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 72


 2266 0247 25       		.byte	0x25
 2267 0248 9F       		.byte	0x9f
 2268 0249 12000000 		.4byte	.LVL34
 2269 024d 14000000 		.4byte	.LFE142
 2270 0251 0100     		.2byte	0x1
 2271 0253 50       		.byte	0x50
 2272 0254 00000000 		.4byte	0
 2273 0258 00000000 		.4byte	0
 2274              	.LLST16:
 2275 025c 00000000 		.4byte	.LVL35
 2276 0260 0E000000 		.4byte	.LVL37
 2277 0264 0100     		.2byte	0x1
 2278 0266 50       		.byte	0x50
 2279 0267 0E000000 		.4byte	.LVL37
 2280 026b A0000000 		.4byte	.LFE136
 2281 026f 0100     		.2byte	0x1
 2282 0271 56       		.byte	0x56
 2283 0272 00000000 		.4byte	0
 2284 0276 00000000 		.4byte	0
 2285              	.LLST17:
 2286 027a 00000000 		.4byte	.LVL35
 2287 027e 0E000000 		.4byte	.LVL37
 2288 0282 0100     		.2byte	0x1
 2289 0284 51       		.byte	0x51
 2290 0285 0E000000 		.4byte	.LVL37
 2291 0289 A0000000 		.4byte	.LFE136
 2292 028d 0100     		.2byte	0x1
 2293 028f 55       		.byte	0x55
 2294 0290 00000000 		.4byte	0
 2295 0294 00000000 		.4byte	0
 2296              	.LLST18:
 2297 0298 00000000 		.4byte	.LVL35
 2298 029c 0E000000 		.4byte	.LVL37
 2299 02a0 0100     		.2byte	0x1
 2300 02a2 52       		.byte	0x52
 2301 02a3 0E000000 		.4byte	.LVL37
 2302 02a7 A0000000 		.4byte	.LFE136
 2303 02ab 0100     		.2byte	0x1
 2304 02ad 57       		.byte	0x57
 2305 02ae 00000000 		.4byte	0
 2306 02b2 00000000 		.4byte	0
 2307              	.LLST19:
 2308 02b6 1E000000 		.4byte	.LVL38
 2309 02ba 2C000000 		.4byte	.LVL39
 2310 02be 0200     		.2byte	0x2
 2311 02c0 31       		.byte	0x31
 2312 02c1 9F       		.byte	0x9f
 2313 02c2 2E000000 		.4byte	.LVL40
 2314 02c6 30000000 		.4byte	.LVL41
 2315 02ca 0200     		.2byte	0x2
 2316 02cc 30       		.byte	0x30
 2317 02cd 9F       		.byte	0x9f
 2318 02ce 30000000 		.4byte	.LVL41
 2319 02d2 40000000 		.4byte	.LVL43
 2320 02d6 0100     		.2byte	0x1
 2321 02d8 52       		.byte	0x52
 2322 02d9 58000000 		.4byte	.LVL45
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 73


 2323 02dd 7C000000 		.4byte	.LVL49
 2324 02e1 0100     		.2byte	0x1
 2325 02e3 52       		.byte	0x52
 2326 02e4 00000000 		.4byte	0
 2327 02e8 00000000 		.4byte	0
 2328              	.LLST20:
 2329 02ec 1E000000 		.4byte	.LVL38
 2330 02f0 2C000000 		.4byte	.LVL39
 2331 02f4 0100     		.2byte	0x1
 2332 02f6 53       		.byte	0x53
 2333 02f7 2E000000 		.4byte	.LVL40
 2334 02fb 3C000000 		.4byte	.LVL42
 2335 02ff 0100     		.2byte	0x1
 2336 0301 53       		.byte	0x53
 2337 0302 58000000 		.4byte	.LVL45
 2338 0306 6C000000 		.4byte	.LVL46
 2339 030a 0100     		.2byte	0x1
 2340 030c 53       		.byte	0x53
 2341 030d 00000000 		.4byte	0
 2342 0311 00000000 		.4byte	0
 2343              	.LLST21:
 2344 0315 0A000000 		.4byte	.LVL36
 2345 0319 0E000000 		.4byte	.LVL37
 2346 031d 0200     		.2byte	0x2
 2347 031f 31       		.byte	0x31
 2348 0320 9F       		.byte	0x9f
 2349 0321 0E000000 		.4byte	.LVL37
 2350 0325 94000000 		.4byte	.LVL53
 2351 0329 0100     		.2byte	0x1
 2352 032b 54       		.byte	0x54
 2353 032c 94000000 		.4byte	.LVL53
 2354 0330 96000000 		.4byte	.LVL54
 2355 0334 0100     		.2byte	0x1
 2356 0336 53       		.byte	0x53
 2357 0337 96000000 		.4byte	.LVL54
 2358 033b A0000000 		.4byte	.LFE136
 2359 033f 0100     		.2byte	0x1
 2360 0341 54       		.byte	0x54
 2361 0342 00000000 		.4byte	0
 2362 0346 00000000 		.4byte	0
 2363              	.LLST22:
 2364 034a 78000000 		.4byte	.LVL48
 2365 034e 92000000 		.4byte	.LVL52
 2366 0352 0200     		.2byte	0x2
 2367 0354 31       		.byte	0x31
 2368 0355 9F       		.byte	0x9f
 2369 0356 00000000 		.4byte	0
 2370 035a 00000000 		.4byte	0
 2371              	.LLST23:
 2372 035e 70000000 		.4byte	.LVL47
 2373 0362 78000000 		.4byte	.LVL48
 2374 0366 0500     		.2byte	0x5
 2375 0368 71       		.byte	0x71
 2376 0369 00       		.sleb128 0
 2377 036a 38       		.byte	0x38
 2378 036b 24       		.byte	0x24
 2379 036c 9F       		.byte	0x9f
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 74


 2380 036d 78000000 		.4byte	.LVL48
 2381 0371 80000000 		.4byte	.LVL50
 2382 0375 0800     		.2byte	0x8
 2383 0377 71       		.byte	0x71
 2384 0378 00       		.sleb128 0
 2385 0379 38       		.byte	0x38
 2386 037a 24       		.byte	0x24
 2387 037b 7E       		.byte	0x7e
 2388 037c 00       		.sleb128 0
 2389 037d 21       		.byte	0x21
 2390 037e 9F       		.byte	0x9f
 2391 037f 80000000 		.4byte	.LVL50
 2392 0383 83000000 		.4byte	.LVL51-1
 2393 0387 0100     		.2byte	0x1
 2394 0389 51       		.byte	0x51
 2395 038a 84000000 		.4byte	.LVL51
 2396 038e 92000000 		.4byte	.LVL52
 2397 0392 0100     		.2byte	0x1
 2398 0394 50       		.byte	0x50
 2399 0395 00000000 		.4byte	0
 2400 0399 00000000 		.4byte	0
 2401              	.LLST24:
 2402 039d 00000000 		.4byte	.LVL55
 2403 03a1 08000000 		.4byte	.LVL57
 2404 03a5 0100     		.2byte	0x1
 2405 03a7 50       		.byte	0x50
 2406 03a8 08000000 		.4byte	.LVL57
 2407 03ac 20000000 		.4byte	.LFE135
 2408 03b0 0400     		.2byte	0x4
 2409 03b2 F3       		.byte	0xf3
 2410 03b3 01       		.uleb128 0x1
 2411 03b4 50       		.byte	0x50
 2412 03b5 9F       		.byte	0x9f
 2413 03b6 00000000 		.4byte	0
 2414 03ba 00000000 		.4byte	0
 2415              	.LLST25:
 2416 03be 00000000 		.4byte	.LVL55
 2417 03c2 0E000000 		.4byte	.LVL59
 2418 03c6 0100     		.2byte	0x1
 2419 03c8 51       		.byte	0x51
 2420 03c9 0E000000 		.4byte	.LVL59
 2421 03cd 20000000 		.4byte	.LFE135
 2422 03d1 0400     		.2byte	0x4
 2423 03d3 F3       		.byte	0xf3
 2424 03d4 01       		.uleb128 0x1
 2425 03d5 51       		.byte	0x51
 2426 03d6 9F       		.byte	0x9f
 2427 03d7 00000000 		.4byte	0
 2428 03db 00000000 		.4byte	0
 2429              	.LLST26:
 2430 03df 02000000 		.4byte	.LVL56
 2431 03e3 1A000000 		.4byte	.LVL63
 2432 03e7 0200     		.2byte	0x2
 2433 03e9 30       		.byte	0x30
 2434 03ea 9F       		.byte	0x9f
 2435 03eb 1A000000 		.4byte	.LVL63
 2436 03ef 20000000 		.4byte	.LFE135
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 75


 2437 03f3 0100     		.2byte	0x1
 2438 03f5 50       		.byte	0x50
 2439 03f6 00000000 		.4byte	0
 2440 03fa 00000000 		.4byte	0
 2441              	.LLST27:
 2442 03fe 02000000 		.4byte	.LVL56
 2443 0402 0A000000 		.4byte	.LVL58
 2444 0406 0200     		.2byte	0x2
 2445 0408 30       		.byte	0x30
 2446 0409 9F       		.byte	0x9f
 2447 040a 0A000000 		.4byte	.LVL58
 2448 040e 10000000 		.4byte	.LVL60
 2449 0412 0100     		.2byte	0x1
 2450 0414 54       		.byte	0x54
 2451 0415 10000000 		.4byte	.LVL60
 2452 0419 14000000 		.4byte	.LVL61
 2453 041d 0600     		.2byte	0x6
 2454 041f 74       		.byte	0x74
 2455 0420 00       		.sleb128 0
 2456 0421 73       		.byte	0x73
 2457 0422 00       		.sleb128 0
 2458 0423 22       		.byte	0x22
 2459 0424 9F       		.byte	0x9f
 2460 0425 14000000 		.4byte	.LVL61
 2461 0429 19000000 		.4byte	.LVL63-1
 2462 042d 0100     		.2byte	0x1
 2463 042f 51       		.byte	0x51
 2464 0430 19000000 		.4byte	.LVL63-1
 2465 0434 1C000000 		.4byte	.LVL64
 2466 0438 0F00     		.2byte	0xf
 2467 043a F3       		.byte	0xf3
 2468 043b 01       		.uleb128 0x1
 2469 043c 51       		.byte	0x51
 2470 043d 32       		.byte	0x32
 2471 043e 24       		.byte	0x24
 2472 043f F3       		.byte	0xf3
 2473 0440 01       		.uleb128 0x1
 2474 0441 51       		.byte	0x51
 2475 0442 22       		.byte	0x22
 2476 0443 31       		.byte	0x31
 2477 0444 24       		.byte	0x24
 2478 0445 74       		.byte	0x74
 2479 0446 00       		.sleb128 0
 2480 0447 22       		.byte	0x22
 2481 0448 9F       		.byte	0x9f
 2482 0449 00000000 		.4byte	0
 2483 044d 00000000 		.4byte	0
 2484              	.LLST28:
 2485 0451 08000000 		.4byte	.LVL57
 2486 0455 16000000 		.4byte	.LVL62
 2487 0459 0200     		.2byte	0x2
 2488 045b 70       		.byte	0x70
 2489 045c 04       		.sleb128 4
 2490 045d 16000000 		.4byte	.LVL62
 2491 0461 19000000 		.4byte	.LVL63-1
 2492 0465 0100     		.2byte	0x1
 2493 0467 50       		.byte	0x50
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 76


 2494 0468 00000000 		.4byte	0
 2495 046c 00000000 		.4byte	0
 2496              	.LLST29:
 2497 0470 00000000 		.4byte	.LVL65
 2498 0474 10000000 		.4byte	.LVL68
 2499 0478 0100     		.2byte	0x1
 2500 047a 50       		.byte	0x50
 2501 047b 10000000 		.4byte	.LVL68
 2502 047f 26000000 		.4byte	.LVL73
 2503 0483 0100     		.2byte	0x1
 2504 0485 56       		.byte	0x56
 2505 0486 26000000 		.4byte	.LVL73
 2506 048a 2C000000 		.4byte	.LFE134
 2507 048e 0400     		.2byte	0x4
 2508 0490 F3       		.byte	0xf3
 2509 0491 01       		.uleb128 0x1
 2510 0492 50       		.byte	0x50
 2511 0493 9F       		.byte	0x9f
 2512 0494 00000000 		.4byte	0
 2513 0498 00000000 		.4byte	0
 2514              	.LLST30:
 2515 049c 0C000000 		.4byte	.LVL67
 2516 04a0 10000000 		.4byte	.LVL68
 2517 04a4 0100     		.2byte	0x1
 2518 04a6 53       		.byte	0x53
 2519 04a7 10000000 		.4byte	.LVL68
 2520 04ab 1C000000 		.4byte	.LVL71
 2521 04af 0100     		.2byte	0x1
 2522 04b1 54       		.byte	0x54
 2523 04b2 1C000000 		.4byte	.LVL71
 2524 04b6 1E000000 		.4byte	.LVL72
 2525 04ba 0100     		.2byte	0x1
 2526 04bc 53       		.byte	0x53
 2527 04bd 1E000000 		.4byte	.LVL72
 2528 04c1 26000000 		.4byte	.LVL73
 2529 04c5 0100     		.2byte	0x1
 2530 04c7 54       		.byte	0x54
 2531 04c8 26000000 		.4byte	.LVL73
 2532 04cc 2C000000 		.4byte	.LFE134
 2533 04d0 0300     		.2byte	0x3
 2534 04d2 73       		.byte	0x73
 2535 04d3 7F       		.sleb128 -1
 2536 04d4 9F       		.byte	0x9f
 2537 04d5 00000000 		.4byte	0
 2538 04d9 00000000 		.4byte	0
 2539              	.LLST31:
 2540 04dd 0C000000 		.4byte	.LVL67
 2541 04e1 10000000 		.4byte	.LVL68
 2542 04e5 0100     		.2byte	0x1
 2543 04e7 53       		.byte	0x53
 2544 04e8 00000000 		.4byte	0
 2545 04ec 00000000 		.4byte	0
 2546              	.LLST32:
 2547 04f0 04000000 		.4byte	.LVL66
 2548 04f4 10000000 		.4byte	.LVL68
 2549 04f8 0200     		.2byte	0x2
 2550 04fa 30       		.byte	0x30
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 77


 2551 04fb 9F       		.byte	0x9f
 2552 04fc 10000000 		.4byte	.LVL68
 2553 0500 26000000 		.4byte	.LVL73
 2554 0504 0100     		.2byte	0x1
 2555 0506 55       		.byte	0x55
 2556 0507 26000000 		.4byte	.LVL73
 2557 050b 2C000000 		.4byte	.LFE134
 2558 050f 0100     		.2byte	0x1
 2559 0511 50       		.byte	0x50
 2560 0512 00000000 		.4byte	0
 2561 0516 00000000 		.4byte	0
 2562              	.LLST33:
 2563 051a 02000000 		.4byte	.LVL74
 2564 051e 08000000 		.4byte	.LVL75
 2565 0522 0200     		.2byte	0x2
 2566 0524 32       		.byte	0x32
 2567 0525 9F       		.byte	0x9f
 2568 0526 08000000 		.4byte	.LVL75
 2569 052a 12000000 		.4byte	.LVL78
 2570 052e 0100     		.2byte	0x1
 2571 0530 54       		.byte	0x54
 2572 0531 12000000 		.4byte	.LVL78
 2573 0535 14000000 		.4byte	.LVL79
 2574 0539 0100     		.2byte	0x1
 2575 053b 53       		.byte	0x53
 2576 053c 14000000 		.4byte	.LVL79
 2577 0540 1C000000 		.4byte	.LFE133
 2578 0544 0100     		.2byte	0x1
 2579 0546 54       		.byte	0x54
 2580 0547 00000000 		.4byte	0
 2581 054b 00000000 		.4byte	0
 2582              	.LLST34:
 2583 054f 02000000 		.4byte	.LVL74
 2584 0553 08000000 		.4byte	.LVL75
 2585 0557 0200     		.2byte	0x2
 2586 0559 30       		.byte	0x30
 2587 055a 9F       		.byte	0x9f
 2588 055b 08000000 		.4byte	.LVL75
 2589 055f 1C000000 		.4byte	.LFE133
 2590 0563 0100     		.2byte	0x1
 2591 0565 55       		.byte	0x55
 2592 0566 00000000 		.4byte	0
 2593 056a 00000000 		.4byte	0
 2594              		.section	.debug_aranges,"",%progbits
 2595 0000 6C000000 		.4byte	0x6c
 2596 0004 0200     		.2byte	0x2
 2597 0006 00000000 		.4byte	.Ldebug_info0
 2598 000a 04       		.byte	0x4
 2599 000b 00       		.byte	0
 2600 000c 0000     		.2byte	0
 2601 000e 0000     		.2byte	0
 2602 0010 00000000 		.4byte	.LFB132
 2603 0014 02000000 		.4byte	.LFE132-.LFB132
 2604 0018 00000000 		.4byte	.LFB141
 2605 001c 1E000000 		.4byte	.LFE141-.LFB141
 2606 0020 00000000 		.4byte	.LFB140
 2607 0024 1E000000 		.4byte	.LFE140-.LFB140
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 78


 2608 0028 00000000 		.4byte	.LFB139
 2609 002c 20000000 		.4byte	.LFE139-.LFB139
 2610 0030 00000000 		.4byte	.LFB138
 2611 0034 24000000 		.4byte	.LFE138-.LFB138
 2612 0038 00000000 		.4byte	.LFB137
 2613 003c 16000000 		.4byte	.LFE137-.LFB137
 2614 0040 00000000 		.4byte	.LFB142
 2615 0044 14000000 		.4byte	.LFE142-.LFB142
 2616 0048 00000000 		.4byte	.LFB136
 2617 004c A0000000 		.4byte	.LFE136-.LFB136
 2618 0050 00000000 		.4byte	.LFB135
 2619 0054 20000000 		.4byte	.LFE135-.LFB135
 2620 0058 00000000 		.4byte	.LFB134
 2621 005c 2C000000 		.4byte	.LFE134-.LFB134
 2622 0060 00000000 		.4byte	.LFB133
 2623 0064 1C000000 		.4byte	.LFE133-.LFB133
 2624 0068 00000000 		.4byte	0
 2625 006c 00000000 		.4byte	0
 2626              		.section	.debug_ranges,"",%progbits
 2627              	.Ldebug_ranges0:
 2628 0000 00000000 		.4byte	.LFB132
 2629 0004 02000000 		.4byte	.LFE132
 2630 0008 00000000 		.4byte	.LFB141
 2631 000c 1E000000 		.4byte	.LFE141
 2632 0010 00000000 		.4byte	.LFB140
 2633 0014 1E000000 		.4byte	.LFE140
 2634 0018 00000000 		.4byte	.LFB139
 2635 001c 20000000 		.4byte	.LFE139
 2636 0020 00000000 		.4byte	.LFB138
 2637 0024 24000000 		.4byte	.LFE138
 2638 0028 00000000 		.4byte	.LFB137
 2639 002c 16000000 		.4byte	.LFE137
 2640 0030 00000000 		.4byte	.LFB142
 2641 0034 14000000 		.4byte	.LFE142
 2642 0038 00000000 		.4byte	.LFB136
 2643 003c A0000000 		.4byte	.LFE136
 2644 0040 00000000 		.4byte	.LFB135
 2645 0044 20000000 		.4byte	.LFE135
 2646 0048 00000000 		.4byte	.LFB134
 2647 004c 2C000000 		.4byte	.LFE134
 2648 0050 00000000 		.4byte	.LFB133
 2649 0054 1C000000 		.4byte	.LFE133
 2650 0058 00000000 		.4byte	0
 2651 005c 00000000 		.4byte	0
 2652              		.section	.debug_line,"",%progbits
 2653              	.Ldebug_line0:
 2654 0000 22030000 		.section	.debug_str,"MS",%progbits,1
 2654      0200EB01 
 2654      00000201 
 2654      FB0E0D00 
 2654      01010101 
 2655              	.LASF63:
 2656 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2656      656E7365 
 2656      5F464C41 
 2656      53485F53 
 2656      54525543 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 79


 2657              	.LASF27:
 2658 0016 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2658      656E7365 
 2658      5F4C4F57 
 2658      5F42534C 
 2658      4E5F5253 
 2659              	.LASF87:
 2660 0031 72657375 		.ascii	"result\000"
 2660      6C7400
 2661              	.LASF45:
 2662 0038 62736C6E 		.ascii	"bsln\000"
 2662      00
 2663              	.LASF71:
 2664 003d 73656E73 		.ascii	"sensorId\000"
 2664      6F724964 
 2664      00
 2665              	.LASF91:
 2666 0046 62736C6E 		.ascii	"bslnStatus\000"
 2666      53746174 
 2666      757300
 2667              	.LASF41:
 2668 0051 6C6F7742 		.ascii	"lowBslnRst\000"
 2668      736C6E52 
 2668      737400
 2669              	.LASF47:
 2670 005c 64696666 		.ascii	"diff\000"
 2670      00
 2671              	.LASF57:
 2672 0061 746F7461 		.ascii	"totalNumSns\000"
 2672      6C4E756D 
 2672      536E7300 
 2673              	.LASF76:
 2674 006d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2674      656E7365 
 2674      5F496E69 
 2674      7469616C 
 2674      697A6541 
 2675              	.LASF51:
 2676 008d 70747232 		.ascii	"ptr2SnsFlash\000"
 2676      536E7346 
 2676      6C617368 
 2676      00
 2677              	.LASF5:
 2678 009a 73686F72 		.ascii	"short int\000"
 2678      7420696E 
 2678      7400
 2679              	.LASF77:
 2680 00a4 696E7075 		.ascii	"input\000"
 2680      7400
 2681              	.LASF32:
 2682 00aa 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2682      656E7365 
 2682      5F57445F 
 2682      544F5543 
 2682      48504144 
 2683              	.LASF61:
 2684 00c1 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 80


 2684      656E7365 
 2684      5F464C41 
 2684      53485F57 
 2684      445F5354 
 2685              	.LASF85:
 2686 00da 64696666 		.ascii	"difference\000"
 2686      6572656E 
 2686      636500
 2687              	.LASF38:
 2688 00e5 6E4E6F69 		.ascii	"nNoiseTh\000"
 2688      73655468 
 2688      00
 2689              	.LASF65:
 2690 00ee 77645479 		.ascii	"wdType\000"
 2690      706500
 2691              	.LASF95:
 2692 00f5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2692      43313120 
 2692      352E342E 
 2692      31203230 
 2692      31363036 
 2693 0128 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2693      20726576 
 2693      6973696F 
 2693      6E203233 
 2693      37373135 
 2694 015b 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 2694      70202D6D 
 2694      6670753D 
 2694      66707634 
 2694      2D73702D 
 2695 018e 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2695      6F6E7320 
 2695      2D666661 
 2695      742D6C74 
 2695      6F2D6F62 
 2696              	.LASF80:
 2697 01a8 66696C74 		.ascii	"filteredOutput\000"
 2697      65726564 
 2697      4F757470 
 2697      757400
 2698              	.LASF11:
 2699 01b7 5F5F7569 		.ascii	"__uint32_t\000"
 2699      6E743332 
 2699      5F7400
 2700              	.LASF88:
 2701 01c2 68697374 		.ascii	"history\000"
 2701      6F727900 
 2702              	.LASF43:
 2703 01ca 736E7343 		.ascii	"snsClkSource\000"
 2703      6C6B536F 
 2703      75726365 
 2703      00
 2704              	.LASF7:
 2705 01d7 5F5F7569 		.ascii	"__uint16_t\000"
 2705      6E743136 
 2705      5F7400
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 81


 2706              	.LASF28:
 2707 01e2 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2707      656E7365 
 2707      5F57445F 
 2707      42555454 
 2707      4F4E5F45 
 2708              	.LASF37:
 2709 01f7 6E6F6973 		.ascii	"noiseTh\000"
 2709      65546800 
 2710              	.LASF24:
 2711 01ff 75696E74 		.ascii	"uint16\000"
 2711      313600
 2712              	.LASF89:
 2713 0206 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2713      656E7365 
 2713      5F557064 
 2713      61746553 
 2713      656E736F 
 2714              	.LASF55:
 2715 0224 70747232 		.ascii	"ptr2DebounceArr\000"
 2715      4465626F 
 2715      756E6365 
 2715      41727200 
 2716              	.LASF14:
 2717 0234 75696E74 		.ascii	"uint8_t\000"
 2717      385F7400 
 2718              	.LASF23:
 2719 023c 75696E74 		.ascii	"uint8\000"
 2719      3800
 2720              	.LASF60:
 2721 0242 6E756D52 		.ascii	"numRows\000"
 2721      6F777300 
 2722              	.LASF83:
 2723 024a 70747257 		.ascii	"ptrWidgetRam\000"
 2723      69646765 
 2723      7452616D 
 2723      00
 2724              	.LASF42:
 2725 0257 736E7343 		.ascii	"snsClk\000"
 2725      6C6B00
 2726              	.LASF67:
 2727 025e 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2727      656E7365 
 2727      5F467449 
 2727      6E697469 
 2727      616C697A 
 2728              	.LASF81:
 2729 0283 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2729      656E7365 
 2729      5F467449 
 2729      49523173 
 2729      744F7264 
 2730              	.LASF33:
 2731 029a 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2731      656E7365 
 2731      5F57445F 
 2731      50524F58 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 82


 2731      494D4954 
 2732              	.LASF20:
 2733 02b2 666C6F61 		.ascii	"float\000"
 2733      7400
 2734              	.LASF1:
 2735 02b8 6C6F6E67 		.ascii	"long long int\000"
 2735      206C6F6E 
 2735      6720696E 
 2735      7400
 2736              	.LASF19:
 2737 02c6 63686172 		.ascii	"char\000"
 2737      00
 2738              	.LASF10:
 2739 02cb 6C6F6E67 		.ascii	"long int\000"
 2739      20696E74 
 2739      00
 2740              	.LASF79:
 2741 02d4 73686966 		.ascii	"shift\000"
 2741      7400
 2742              	.LASF58:
 2743 02da 77646774 		.ascii	"wdgtType\000"
 2743      54797065 
 2743      00
 2744              	.LASF96:
 2745 02e3 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Filter.c\000"
 2745      72617465 
 2745      645F536F 
 2745      75726365 
 2745      5C50536F 
 2746              	.LASF18:
 2747 030c 73697A65 		.ascii	"sizetype\000"
 2747      74797065 
 2747      00
 2748              	.LASF26:
 2749 0315 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2749      656E7365 
 2749      5F544852 
 2749      4553484F 
 2749      4C445F54 
 2750              	.LASF48:
 2751 032d 6E656742 		.ascii	"negBslnRstCnt\000"
 2751      736C6E52 
 2751      7374436E 
 2751      7400
 2752              	.LASF6:
 2753 033b 5F5F7569 		.ascii	"__uint8_t\000"
 2753      6E74385F 
 2753      7400
 2754              	.LASF40:
 2755 0345 6F6E4465 		.ascii	"onDebounce\000"
 2755      626F756E 
 2755      636500
 2756              	.LASF36:
 2757 0350 66696E67 		.ascii	"fingerTh\000"
 2757      65725468 
 2757      00
 2758              	.LASF59:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 83


 2759 0359 6E756D43 		.ascii	"numCols\000"
 2759      6F6C7300 
 2760              	.LASF69:
 2761 0361 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2761      656E7365 
 2761      5F496E69 
 2761      7469616C 
 2761      697A6553 
 2762              	.LASF39:
 2763 0383 68797374 		.ascii	"hysteresis\000"
 2763      65726573 
 2763      697300
 2764              	.LASF97:
 2765 038e 433A5C55 		.ascii	"C:\\Users\\zinch\\Documents\\PSoC Creator\\Workspac"
 2765      73657273 
 2765      5C7A696E 
 2765      63685C44 
 2765      6F63756D 
 2766 03bc 6530315C 		.ascii	"e01\\VoiceRepeater_onPSoC6.cydsn\000"
 2766      566F6963 
 2766      65526570 
 2766      65617465 
 2766      725F6F6E 
 2767              	.LASF2:
 2768 03dc 6C6F6E67 		.ascii	"long double\000"
 2768      20646F75 
 2768      626C6500 
 2769              	.LASF4:
 2770 03e8 756E7369 		.ascii	"unsigned char\000"
 2770      676E6564 
 2770      20636861 
 2770      7200
 2771              	.LASF75:
 2772 03f6 70747257 		.ascii	"ptrWidget\000"
 2772      69646765 
 2772      7400
 2773              	.LASF22:
 2774 0400 63795F73 		.ascii	"cy_status\000"
 2774      74617475 
 2774      7300
 2775              	.LASF3:
 2776 040a 7369676E 		.ascii	"signed char\000"
 2776      65642063 
 2776      68617200 
 2777              	.LASF16:
 2778 0416 696E7433 		.ascii	"int32_t\000"
 2778      325F7400 
 2779              	.LASF13:
 2780 041e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2780      206C6F6E 
 2780      6720756E 
 2780      7369676E 
 2780      65642069 
 2781              	.LASF17:
 2782 0435 75696E74 		.ascii	"uint32_t\000"
 2782      33325F74 
 2782      00
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 84


 2783              	.LASF56:
 2784 043e 73746174 		.ascii	"staticConfig\000"
 2784      6963436F 
 2784      6E666967 
 2784      00
 2785              	.LASF0:
 2786 044b 756E7369 		.ascii	"unsigned int\000"
 2786      676E6564 
 2786      20696E74 
 2786      00
 2787              	.LASF15:
 2788 0458 75696E74 		.ascii	"uint16_t\000"
 2788      31365F74 
 2788      00
 2789              	.LASF72:
 2790 0461 66726571 		.ascii	"freqChannel\000"
 2790      4368616E 
 2790      6E656C00 
 2791              	.LASF50:
 2792 046d 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2792      656E7365 
 2792      5F52414D 
 2792      5F534E53 
 2792      5F535452 
 2793              	.LASF90:
 2794 0485 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2794      656E7365 
 2794      5F557064 
 2794      61746557 
 2794      69646765 
 2795              	.LASF29:
 2796 04a3 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2796      656E7365 
 2796      5F57445F 
 2796      4C494E45 
 2796      41525F53 
 2797              	.LASF8:
 2798 04bf 73686F72 		.ascii	"short unsigned int\000"
 2798      7420756E 
 2798      7369676E 
 2798      65642069 
 2798      6E7400
 2799              	.LASF92:
 2800 04d2 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2800      656E7365 
 2800      5F557064 
 2800      61746541 
 2800      6C6C4261 
 2801              	.LASF98:
 2802 04ee 43617053 		.ascii	"CapSense_FtInitialize\000"
 2802      656E7365 
 2802      5F467449 
 2802      6E697469 
 2802      616C697A 
 2803              	.LASF49:
 2804 0504 69646163 		.ascii	"idacComp\000"
 2804      436F6D70 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 85


 2804      00
 2805              	.LASF68:
 2806 050d 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2806      656E7365 
 2806      5F467449 
 2806      6E697469 
 2806      616C697A 
 2807              	.LASF35:
 2808 052b 7265736F 		.ascii	"resolution\000"
 2808      6C757469 
 2808      6F6E00
 2809              	.LASF9:
 2810 0536 5F5F696E 		.ascii	"__int32_t\000"
 2810      7433325F 
 2810      7400
 2811              	.LASF66:
 2812 0540 6368616E 		.ascii	"channel\000"
 2812      6E656C00 
 2813              	.LASF82:
 2814 0548 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2814      656E7365 
 2814      5F467455 
 2814      70646174 
 2814      65426173 
 2815              	.LASF74:
 2816 0562 73656E73 		.ascii	"sensorsNumber\000"
 2816      6F72734E 
 2816      756D6265 
 2816      7200
 2817              	.LASF52:
 2818 0570 70747232 		.ascii	"ptr2WdgtRam\000"
 2818      57646774 
 2818      52616D00 
 2819              	.LASF86:
 2820 057c 62617365 		.ascii	"baselineCoeff\000"
 2820      6C696E65 
 2820      436F6566 
 2820      6600
 2821              	.LASF30:
 2822 058a 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2822      656E7365 
 2822      5F57445F 
 2822      52414449 
 2822      414C5F53 
 2823              	.LASF70:
 2824 05a6 77696467 		.ascii	"widgetId\000"
 2824      65744964 
 2824      00
 2825              	.LASF25:
 2826 05af 75696E74 		.ascii	"uint32\000"
 2826      333200
 2827              	.LASF12:
 2828 05b6 6C6F6E67 		.ascii	"long unsigned int\000"
 2828      20756E73 
 2828      69676E65 
 2828      6420696E 
 2828      7400
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 86


 2829              	.LASF84:
 2830 05c8 7369676E 		.ascii	"sign\000"
 2830      00
 2831              	.LASF21:
 2832 05cd 646F7562 		.ascii	"double\000"
 2832      6C6500
 2833              	.LASF46:
 2834 05d4 62736C6E 		.ascii	"bslnExt\000"
 2834      45787400 
 2835              	.LASF34:
 2836 05dc 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2836      656E7365 
 2836      5F57445F 
 2836      54595045 
 2836      5F454E55 
 2837              	.LASF78:
 2838 05f2 70726576 		.ascii	"prevOutput\000"
 2838      4F757470 
 2838      757400
 2839              	.LASF31:
 2840 05fd 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2840      656E7365 
 2840      5F57445F 
 2840      4D415452 
 2840      49585F42 
 2841              	.LASF53:
 2842 0619 70747232 		.ascii	"ptr2SnsRam\000"
 2842      536E7352 
 2842      616D00
 2843              	.LASF73:
 2844 0624 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 2844      656E7365 
 2844      5F496E69 
 2844      7469616C 
 2844      697A6557 
 2845              	.LASF54:
 2846 0646 70747232 		.ascii	"ptr2FltrHistory\000"
 2846      466C7472 
 2846      48697374 
 2846      6F727900 
 2847              	.LASF62:
 2848 0656 77646774 		.ascii	"wdgtArray\000"
 2848      41727261 
 2848      7900
 2849              	.LASF94:
 2850 0660 43617053 		.ascii	"CapSense_dsFlash\000"
 2850      656E7365 
 2850      5F647346 
 2850      6C617368 
 2850      00
 2851              	.LASF44:
 2852 0671 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2852      656E7365 
 2852      5F52414D 
 2852      5F57445F 
 2852      42415345 
 2853              	.LASF93:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccXJW8de.s 			page 87


 2854 068d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2854      52784275 
 2854      66666572 
 2854      00
 2855              	.LASF64:
 2856 069a 70747253 		.ascii	"ptrSensor\000"
 2856      656E736F 
 2856      7200
 2857              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
