ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Filter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_FtInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_FtInitialize, %function
  25              	CapSense_FtInitialize:
  26              	.LFB45:
  27              		.file 1 "Generated_Source\\PSoC6\\CapSense_Filter.c"
   1:Generated_Source\PSoC6/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC6/CapSense_Filter.c **** * \version 3.0
   4:Generated_Source\PSoC6/CapSense_Filter.c **** *
   5:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC6/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC6/CapSense_Filter.c **** *
   9:Generated_Source\PSoC6/CapSense_Filter.c **** * \see CapSense v3.0 Datasheet
  10:Generated_Source\PSoC6/CapSense_Filter.c **** *
  11:Generated_Source\PSoC6/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC6/CapSense_Filter.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC6/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC6/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC6/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC6/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC6/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC6/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC6/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC6/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC6/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC6/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC6/CapSense_Filter.c **** *
  26:Generated_Source\PSoC6/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC6/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC6/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC6/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 2


  31:Generated_Source\PSoC6/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC6/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC6/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC6/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC6/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC6/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC6/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/CapSense_Filter.c **** 
  40:Generated_Source\PSoC6/CapSense_Filter.c **** #include "stddef.h"
  41:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Filter.h"
  42:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC6/CapSense_Filter.c **** 
  44:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  45:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  46:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  47:Generated_Source\PSoC6/CapSense_Filter.c **** 
  48:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  49:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  50:Generated_Source\PSoC6/CapSense_Filter.c **** #endif
  51:Generated_Source\PSoC6/CapSense_Filter.c **** 
  52:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  53:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  54:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  55:Generated_Source\PSoC6/CapSense_Filter.c **** *
  56:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  57:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  58:Generated_Source\PSoC6/CapSense_Filter.c **** *
  59:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  60:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  61:Generated_Source\PSoC6/CapSense_Filter.c **** *
  62:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  63:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  64:Generated_Source\PSoC6/CapSense_Filter.c **** {
  28              		.loc 1 64 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  65:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  66:Generated_Source\PSoC6/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  67:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  68:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  69:Generated_Source\PSoC6/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
  70:Generated_Source\PSoC6/CapSense_Filter.c **** }
  33              		.loc 1 70 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE45:
  38              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  39 0002 C046     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  40              		.align	2
  41              		.global	CapSense_FtInitializeBaselineChannel
  42              		.code	16
  43              		.thumb_func
  44              		.type	CapSense_FtInitializeBaselineChannel, %function
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 3


  45              	CapSense_FtInitializeBaselineChannel:
  46              	.LFB54:
  71:Generated_Source\PSoC6/CapSense_Filter.c **** 
  72:Generated_Source\PSoC6/CapSense_Filter.c **** 
  73:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  74:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  75:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  76:Generated_Source\PSoC6/CapSense_Filter.c **** *
  77:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  78:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  79:Generated_Source\PSoC6/CapSense_Filter.c **** *
  80:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  81:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  82:Generated_Source\PSoC6/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  83:Generated_Source\PSoC6/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  84:Generated_Source\PSoC6/CapSense_Filter.c **** *
  85:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  86:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  87:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  88:Generated_Source\PSoC6/CapSense_Filter.c **** *
  89:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  90:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  91:Generated_Source\PSoC6/CapSense_Filter.c **** *
  92:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
  93:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  94:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
  95:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
  96:Generated_Source\PSoC6/CapSense_Filter.c **** *
  97:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  98:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateAllBaselines(void)
  99:Generated_Source\PSoC6/CapSense_Filter.c **** {
 100:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 101:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 102:Generated_Source\PSoC6/CapSense_Filter.c **** 
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 104:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 105:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 106:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107:Generated_Source\PSoC6/CapSense_Filter.c **** 
 108:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 109:Generated_Source\PSoC6/CapSense_Filter.c **** }
 110:Generated_Source\PSoC6/CapSense_Filter.c **** 
 111:Generated_Source\PSoC6/CapSense_Filter.c **** 
 112:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 114:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 115:Generated_Source\PSoC6/CapSense_Filter.c **** *
 116:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 117:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input parameter.
 118:Generated_Source\PSoC6/CapSense_Filter.c **** *
 119:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC6/CapSense_Filter.c **** *
 123:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 4


 126:Generated_Source\PSoC6/CapSense_Filter.c **** *
 127:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC6/CapSense_Filter.c **** *
 130:Generated_Source\PSoC6/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC6/CapSense_Filter.c **** *
 137:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 141:Generated_Source\PSoC6/CapSense_Filter.c **** *
 142:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC6/CapSense_Filter.c **** {
 145:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC6/CapSense_Filter.c **** 
 148:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 150:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC6/CapSense_Filter.c **** 
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC6/CapSense_Filter.c **** }
 161:Generated_Source\PSoC6/CapSense_Filter.c **** 
 162:Generated_Source\PSoC6/CapSense_Filter.c **** 
 163:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC6/CapSense_Filter.c **** *
 167:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC6/CapSense_Filter.c **** *
 170:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC6/CapSense_Filter.c **** *
 175:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC6/CapSense_Filter.c **** *
 179:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC6/CapSense_Filter.c **** *
 182:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   widgetId
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 5


 183:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
 184:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC6/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC6/CapSense_Filter.c **** *
 188:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   sensorId
 189:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC6/CapSense_Filter.c **** *
 194:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC6/CapSense_Filter.c **** *
 199:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC6/CapSense_Filter.c **** {
 202:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 203:Generated_Source\PSoC6/CapSense_Filter.c **** 
 204:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC6/CapSense_Filter.c **** 
 213:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC6/CapSense_Filter.c ****         if (CY_RET_SUCCESS != result)
 215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC6/CapSense_Filter.c ****             result = CY_RET_BAD_DATA;
 217:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC6/CapSense_Filter.c **** 
 221:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC6/CapSense_Filter.c **** }
 223:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC6/CapSense_Filter.c **** *
 228:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC6/CapSense_Filter.c **** *
 231:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC6/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC6/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC6/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC6/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC6/CapSense_Filter.c **** *
 237:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrWidgetRam
 238:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 6


 240:Generated_Source\PSoC6/CapSense_Filter.c **** *
 241:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensor
 242:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC6/CapSense_Filter.c **** *
 245:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType
 246:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC6/CapSense_Filter.c **** *
 248:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS if baseline updating was successful;
 251:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC6/CapSense_Filter.c **** *    baseline and its inversion doesn't matched
 253:Generated_Source\PSoC6/CapSense_Filter.c **** *
 254:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC6/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC6/CapSense_Filter.c **** {
 260:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 265:Generated_Source\PSoC6/CapSense_Filter.c **** 
 266:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC6/CapSense_Filter.c **** 
 270:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC6/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC6/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC6/CapSense_Filter.c **** 
 282:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC6/CapSense_Filter.c **** 
 295:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 7


 297:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC6/CapSense_Filter.c **** 
 316:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC6/CapSense_Filter.c **** 
 328:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC6/CapSense_Filter.c **** 
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC6/CapSense_Filter.c **** 
 339:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 342:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 344:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC6/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 8


 354:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
 355:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC6/CapSense_Filter.c **** 
 357:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC6/CapSense_Filter.c **** 
 363:Generated_Source\PSoC6/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC6/CapSense_Filter.c **** 
 368:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 370:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 371:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 373:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC6/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC6/CapSense_Filter.c **** 
 378:Generated_Source\PSoC6/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC6/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC6/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC6/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC6/CapSense_Filter.c **** 
 383:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC6/CapSense_Filter.c **** 
 385:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC6/CapSense_Filter.c **** 
 390:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC6/CapSense_Filter.c **** 
 396:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC6/CapSense_Filter.c **** }
 399:Generated_Source\PSoC6/CapSense_Filter.c **** 
 400:Generated_Source\PSoC6/CapSense_Filter.c **** 
 401:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC6/CapSense_Filter.c **** *
 405:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC6/CapSense_Filter.c **** *
 408:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC6/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 9


 411:Generated_Source\PSoC6/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
 412:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 413:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 414:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC6/CapSense_Filter.c **** *
 418:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC6/CapSense_Filter.c **** {
 421:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC6/CapSense_Filter.c **** 
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC6/CapSense_Filter.c **** }
 428:Generated_Source\PSoC6/CapSense_Filter.c **** 
 429:Generated_Source\PSoC6/CapSense_Filter.c **** 
 430:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6/CapSense_Filter.c **** *
 434:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC6/CapSense_Filter.c **** *
 438:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 442:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 443:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC6/CapSense_Filter.c **** *
 447:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 448:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC6/CapSense_Filter.c **** *
 454:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC6/CapSense_Filter.c **** {
 457:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC6/CapSense_Filter.c **** 
 460:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 10


 468:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 469:Generated_Source\PSoC6/CapSense_Filter.c **** }
 470:Generated_Source\PSoC6/CapSense_Filter.c **** 
 471:Generated_Source\PSoC6/CapSense_Filter.c **** 
 472:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC6/CapSense_Filter.c **** *
 476:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC6/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC6/CapSense_Filter.c **** *
 480:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC6/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC6/CapSense_Filter.c **** *
 484:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId
 485:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC6/CapSense_Filter.c **** *
 491:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId
 492:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC6/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC6/CapSense_Filter.c **** *
 498:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC6/CapSense_Filter.c **** {
 501:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC6/CapSense_Filter.c **** 
 505:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC6/CapSense_Filter.c **** }
 511:Generated_Source\PSoC6/CapSense_Filter.c **** 
 512:Generated_Source\PSoC6/CapSense_Filter.c **** 
 513:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC6/CapSense_Filter.c **** *
 517:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 518:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 519:Generated_Source\PSoC6/CapSense_Filter.c **** *
 520:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 521:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 522:Generated_Source\PSoC6/CapSense_Filter.c **** *
 523:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 524:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 11


 525:Generated_Source\PSoC6/CapSense_Filter.c **** *
 526:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 527:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 528:Generated_Source\PSoC6/CapSense_Filter.c **** {
 529:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 530:Generated_Source\PSoC6/CapSense_Filter.c **** 
 531:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 533:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 534:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 535:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 536:Generated_Source\PSoC6/CapSense_Filter.c **** }
 537:Generated_Source\PSoC6/CapSense_Filter.c **** 
 538:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 540:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 541:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6/CapSense_Filter.c **** *
 543:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 544:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 545:Generated_Source\PSoC6/CapSense_Filter.c **** *
 546:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 547:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 548:Generated_Source\PSoC6/CapSense_Filter.c **** *
 549:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 550:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 551:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 552:Generated_Source\PSoC6/CapSense_Filter.c **** *
 553:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 555:Generated_Source\PSoC6/CapSense_Filter.c **** {
  47              		.loc 1 555 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 556:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 557:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  53              		.loc 1 557 0
  54 0000 FF23     		movs	r3, #255
  55 0002 1940     		ands	r1, r3
  56              	.LVL1:
  57 0004 0629     		cmp	r1, #6
  58 0006 02D0     		beq	.L3
 558:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 559:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 560:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 561:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  59              		.loc 1 561 0
  60 0008 8318     		adds	r3, r0, r2
  61 000a 0021     		movs	r1, #0
  62 000c 1971     		strb	r1, [r3, #4]
  63              	.L3:
 562:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 563:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 564:Generated_Source\PSoC6/CapSense_Filter.c ****         }
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 12


 565:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 566:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 567:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 568:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 569:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 570:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 571:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 572:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 573:Generated_Source\PSoC6/CapSense_Filter.c ****     #else
 574:Generated_Source\PSoC6/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 575:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 577:Generated_Source\PSoC6/CapSense_Filter.c **** 
 578:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  64              		.loc 1 578 0
  65 000e 5300     		lsls	r3, r2, #1
  66 0010 195A     		ldrh	r1, [r3, r0]
  67 0012 C318     		adds	r3, r0, r3
  68 0014 5980     		strh	r1, [r3, #2]
 579:Generated_Source\PSoC6/CapSense_Filter.c **** 
 580:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 581:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 582:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
 583:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 584:Generated_Source\PSoC6/CapSense_Filter.c **** 
 585:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  69              		.loc 1 585 0
  70 0016 8218     		adds	r2, r0, r2
  71              	.LVL2:
  72 0018 0023     		movs	r3, #0
  73 001a 1372     		strb	r3, [r2, #8]
 586:Generated_Source\PSoC6/CapSense_Filter.c **** }
  74              		.loc 1 586 0
  75              		@ sp needed
  76 001c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE54:
  79              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  80 001e C046     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  81              		.align	2
  82              		.global	CapSense_FtInitializeBaseline
  83              		.code	16
  84              		.thumb_func
  85              		.type	CapSense_FtInitializeBaseline, %function
  86              	CapSense_FtInitializeBaseline:
  87              	.LFB53:
 528:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
  88              		.loc 1 528 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL3:
  93 0000 70B5     		push	{r4, r5, r6, lr}
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 4, -16
  96              		.cfi_offset 5, -12
  97              		.cfi_offset 6, -8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 13


  98              		.cfi_offset 14, -4
  99 0002 0600     		movs	r6, r0
 100 0004 0D00     		movs	r5, r1
 101              	.LVL4:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 102              		.loc 1 532 0
 103 0006 0123     		movs	r3, #1
 104 0008 05E0     		b	.L5
 105              	.LVL5:
 106              	.L6:
 534:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107              		.loc 1 534 0
 108 000a 2200     		movs	r2, r4
 109 000c 2900     		movs	r1, r5
 110 000e 3000     		movs	r0, r6
 111 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 112              	.LVL6:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 113              		.loc 1 532 0
 114 0014 2300     		movs	r3, r4
 115              	.LVL7:
 116              	.L5:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 117              		.loc 1 532 0 is_stmt 0 discriminator 1
 118 0016 5C1E     		subs	r4, r3, #1
 119              	.LVL8:
 120 0018 002B     		cmp	r3, #0
 121 001a F6D1     		bne	.L6
 536:Generated_Source\PSoC6/CapSense_Filter.c **** 
 122              		.loc 1 536 0 is_stmt 1
 123              		@ sp needed
 124              	.LVL9:
 125              	.LVL10:
 126              	.LVL11:
 127 001c 70BD     		pop	{r4, r5, r6, pc}
 128              		.cfi_endproc
 129              	.LFE53:
 130              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 131 001e C046     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 132              		.align	2
 133              		.global	CapSense_InitializeSensorBaseline
 134              		.code	16
 135              		.thumb_func
 136              		.type	CapSense_InitializeSensorBaseline, %function
 137              	CapSense_InitializeSensorBaseline:
 138              	.LFB52:
 500:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 139              		.loc 1 500 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL12:
 144 0000 10B5     		push	{r4, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 4, -8
 147              		.cfi_offset 14, -4
 148              	.LVL13:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 14


 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 149              		.loc 1 506 0
 150 0002 4001     		lsls	r0, r0, #5
 151              	.LVL14:
 152 0004 054B     		ldr	r3, .L8
 153 0006 1B18     		adds	r3, r3, r0
 154              	.LVL15:
 507:Generated_Source\PSoC6/CapSense_Filter.c **** 
 155              		.loc 1 507 0
 156 0008 8A00     		lsls	r2, r1, #2
 157 000a 5118     		adds	r1, r2, r1
 158              	.LVL16:
 159 000c 4800     		lsls	r0, r1, #1
 160 000e 9A68     		ldr	r2, [r3, #8]
 161 0010 9446     		mov	ip, r2
 162 0012 6044     		add	r0, r0, ip
 163              	.LVL17:
 509:Generated_Source\PSoC6/CapSense_Filter.c **** }
 164              		.loc 1 509 0
 165 0014 997E     		ldrb	r1, [r3, #26]
 166 0016 FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 167              	.LVL18:
 510:Generated_Source\PSoC6/CapSense_Filter.c **** 
 168              		.loc 1 510 0
 169              		@ sp needed
 170 001a 10BD     		pop	{r4, pc}
 171              	.L9:
 172              		.align	2
 173              	.L8:
 174 001c 00000000 		.word	CapSense_dsFlash
 175              		.cfi_endproc
 176              	.LFE52:
 177              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 178              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 179              		.align	2
 180              		.global	CapSense_InitializeWidgetBaseline
 181              		.code	16
 182              		.thumb_func
 183              		.type	CapSense_InitializeWidgetBaseline, %function
 184              	CapSense_InitializeWidgetBaseline:
 185              	.LFB51:
 456:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 186              		.loc 1 456 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              	.LVL19:
 191 0000 70B5     		push	{r4, r5, r6, lr}
 192              		.cfi_def_cfa_offset 16
 193              		.cfi_offset 4, -16
 194              		.cfi_offset 5, -12
 195              		.cfi_offset 6, -8
 196              		.cfi_offset 14, -4
 197 0002 0500     		movs	r5, r0
 198              	.LVL20:
 463:Generated_Source\PSoC6/CapSense_Filter.c **** 
 199              		.loc 1 463 0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 15


 200 0004 4301     		lsls	r3, r0, #5
 201 0006 064A     		ldr	r2, .L13
 202 0008 D318     		adds	r3, r2, r3
 203              	.LVL21:
 204 000a 1B8B     		ldrh	r3, [r3, #24]
 205              	.LVL22:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 206              		.loc 1 465 0
 207 000c 04E0     		b	.L11
 208              	.LVL23:
 209              	.L12:
 467:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 210              		.loc 1 467 0
 211 000e 2100     		movs	r1, r4
 212 0010 2800     		movs	r0, r5
 213 0012 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 214              	.LVL24:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 215              		.loc 1 465 0
 216 0016 2300     		movs	r3, r4
 217              	.LVL25:
 218              	.L11:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 219              		.loc 1 465 0 is_stmt 0 discriminator 1
 220 0018 5C1E     		subs	r4, r3, #1
 221              	.LVL26:
 222 001a 002B     		cmp	r3, #0
 223 001c F7D1     		bne	.L12
 469:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224              		.loc 1 469 0 is_stmt 1
 225              		@ sp needed
 226              	.LVL27:
 227              	.LVL28:
 228 001e 70BD     		pop	{r4, r5, r6, pc}
 229              	.L14:
 230              		.align	2
 231              	.L13:
 232 0020 00000000 		.word	CapSense_dsFlash
 233              		.cfi_endproc
 234              	.LFE51:
 235              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 236              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 237              		.align	2
 238              		.global	CapSense_InitializeAllBaselines
 239              		.code	16
 240              		.thumb_func
 241              		.type	CapSense_InitializeAllBaselines, %function
 242              	CapSense_InitializeAllBaselines:
 243              	.LFB50:
 420:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 244              		.loc 1 420 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 10B5     		push	{r4, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 16


 251              		.cfi_offset 14, -4
 252              	.LVL29:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 253              		.loc 1 423 0
 254 0002 0223     		movs	r3, #2
 255 0004 03E0     		b	.L16
 256              	.LVL30:
 257              	.L17:
 425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 258              		.loc 1 425 0
 259 0006 2000     		movs	r0, r4
 260 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 261              	.LVL31:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 262              		.loc 1 423 0
 263 000c 2300     		movs	r3, r4
 264              	.LVL32:
 265              	.L16:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 266              		.loc 1 423 0 is_stmt 0 discriminator 1
 267 000e 5C1E     		subs	r4, r3, #1
 268              	.LVL33:
 269 0010 002B     		cmp	r3, #0
 270 0012 F8D1     		bne	.L17
 427:Generated_Source\PSoC6/CapSense_Filter.c **** 
 271              		.loc 1 427 0 is_stmt 1
 272              		@ sp needed
 273              	.LVL34:
 274 0014 10BD     		pop	{r4, pc}
 275              		.cfi_endproc
 276              	.LFE50:
 277              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 278 0016 C046     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 279              		.align	2
 280              		.global	CapSense_FtIIR1stOrder
 281              		.code	16
 282              		.thumb_func
 283              		.type	CapSense_FtIIR1stOrder, %function
 284              	CapSense_FtIIR1stOrder:
 285              	.LFB55:
 587:Generated_Source\PSoC6/CapSense_Filter.c **** 
 588:Generated_Source\PSoC6/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 589:Generated_Source\PSoC6/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 590:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 591:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 592:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 593:Generated_Source\PSoC6/CapSense_Filter.c **** *
 594:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 595:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the 
 596:Generated_Source\PSoC6/CapSense_Filter.c **** *  sensors of all the widgets.
 597:Generated_Source\PSoC6/CapSense_Filter.c **** *
 598:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 599:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the 
 600:Generated_Source\PSoC6/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines. 
 601:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense 
 602:Generated_Source\PSoC6/CapSense_Filter.c **** *  operation initialization.
 603:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 17


 604:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 605:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 606:Generated_Source\PSoC6/CapSense_Filter.c **** {
 607:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 608:Generated_Source\PSoC6/CapSense_Filter.c **** 
 609:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 610:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 611:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 612:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613:Generated_Source\PSoC6/CapSense_Filter.c **** }
 614:Generated_Source\PSoC6/CapSense_Filter.c **** 
 615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 618:Generated_Source\PSoC6/CapSense_Filter.c **** *
 619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 620:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 621:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 622:Generated_Source\PSoC6/CapSense_Filter.c **** *
 623:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 624:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 625:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 626:Generated_Source\PSoC6/CapSense_Filter.c **** *
 627:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 628:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all 
 629:Generated_Source\PSoC6/CapSense_Filter.c **** *  the sensors in the widget.
 630:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 631:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 632:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 633:Generated_Source\PSoC6/CapSense_Filter.c **** *
 634:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 635:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 636:Generated_Source\PSoC6/CapSense_Filter.c **** {
 637:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 638:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 639:Generated_Source\PSoC6/CapSense_Filter.c **** 
 640:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 641:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 642:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 643:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 644:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
 645:Generated_Source\PSoC6/CapSense_Filter.c ****     
 646:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 647:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 648:Generated_Source\PSoC6/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 649:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 650:Generated_Source\PSoC6/CapSense_Filter.c **** 
 651:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 652:Generated_Source\PSoC6/CapSense_Filter.c **** 
 653:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 654:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 655:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 656:Generated_Source\PSoC6/CapSense_Filter.c **** 
 657:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 658:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 659:Generated_Source\PSoC6/CapSense_Filter.c **** 
 660:Generated_Source\PSoC6/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 18


 661:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 662:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 663:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 664:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 665:Generated_Source\PSoC6/CapSense_Filter.c **** 
 666:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 667:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 668:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 669:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 670:Generated_Source\PSoC6/CapSense_Filter.c **** 
 671:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 672:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 673:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 674:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 675:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 676:Generated_Source\PSoC6/CapSense_Filter.c **** 
 677:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 678:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 679:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 680:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 681:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
 682:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 683:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
 684:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 685:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 686:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 687:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 688:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 689:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 690:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 691:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 692:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 693:Generated_Source\PSoC6/CapSense_Filter.c **** 
 694:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 696:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 697:Generated_Source\PSoC6/CapSense_Filter.c **** 
 698:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 699:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 700:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 701:Generated_Source\PSoC6/CapSense_Filter.c **** 
 702:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
 703:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 704:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 705:Generated_Source\PSoC6/CapSense_Filter.c **** 
 706:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 707:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 709:Generated_Source\PSoC6/CapSense_Filter.c **** 
 710:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 711:Generated_Source\PSoC6/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 712:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 713:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 714:Generated_Source\PSoC6/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 715:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 716:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 717:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 19


 718:Generated_Source\PSoC6/CapSense_Filter.c **** }
 719:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 720:Generated_Source\PSoC6/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 721:Generated_Source\PSoC6/CapSense_Filter.c **** 
 722:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 723:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 724:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 725:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 726:Generated_Source\PSoC6/CapSense_Filter.c **** *
 727:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initialize the IIR filter history.
 728:Generated_Source\PSoC6/CapSense_Filter.c **** *
 729:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initialize the IIR filter history.
 730:Generated_Source\PSoC6/CapSense_Filter.c **** *
 731:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 732:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 733:Generated_Source\PSoC6/CapSense_Filter.c **** *
 734:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 735:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 736:Generated_Source\PSoC6/CapSense_Filter.c **** {
 737:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 738:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 739:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 740:Generated_Source\PSoC6/CapSense_Filter.c **** 
 741:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 742:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 743:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 744:Generated_Source\PSoC6/CapSense_Filter.c **** 
 745:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 746:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 747:Generated_Source\PSoC6/CapSense_Filter.c **** 
 748:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 749:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 750:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 751:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 752:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 753:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 754:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 755:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 756:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 757:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 758:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 759:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 760:Generated_Source\PSoC6/CapSense_Filter.c **** 
 761:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 762:Generated_Source\PSoC6/CapSense_Filter.c **** }
 763:Generated_Source\PSoC6/CapSense_Filter.c **** 
 764:Generated_Source\PSoC6/CapSense_Filter.c **** 
 765:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 766:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 767:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 768:Generated_Source\PSoC6/CapSense_Filter.c **** *
 769:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 770:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 771:Generated_Source\PSoC6/CapSense_Filter.c **** *
 772:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 773:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 774:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 20


 775:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 776:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 777:Generated_Source\PSoC6/CapSense_Filter.c **** *
 778:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 779:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 780:Generated_Source\PSoC6/CapSense_Filter.c **** {
 781:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 782:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 783:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 784:Generated_Source\PSoC6/CapSense_Filter.c **** 
 785:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 786:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 787:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 788:Generated_Source\PSoC6/CapSense_Filter.c **** 
 789:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 790:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 791:Generated_Source\PSoC6/CapSense_Filter.c **** 
 792:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 793:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 794:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 795:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 796:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 797:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 798:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 799:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 800:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 801:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 802:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 803:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 804:Generated_Source\PSoC6/CapSense_Filter.c **** 
 805:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 806:Generated_Source\PSoC6/CapSense_Filter.c **** }
 807:Generated_Source\PSoC6/CapSense_Filter.c **** 
 808:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 809:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 810:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6/CapSense_Filter.c **** *
 812:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the IIR filter history.
 813:Generated_Source\PSoC6/CapSense_Filter.c **** *
 814:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the IIR filter history.
 815:Generated_Source\PSoC6/CapSense_Filter.c **** *
 816:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 817:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 818:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 819:Generated_Source\PSoC6/CapSense_Filter.c **** *
 820:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 821:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 822:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 823:Generated_Source\PSoC6/CapSense_Filter.c **** {
 824:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 825:Generated_Source\PSoC6/CapSense_Filter.c **** 
 826:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 827:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 828:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 829:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 830:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 21


 832:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 833:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 834:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 835:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 836:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 837:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 838:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 839:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 840:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 841:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 842:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 843:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 844:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 845:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 846:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 847:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 848:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 849:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 850:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 851:Generated_Source\PSoC6/CapSense_Filter.c **** }
 852:Generated_Source\PSoC6/CapSense_Filter.c **** 
 853:Generated_Source\PSoC6/CapSense_Filter.c **** 
 854:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 855:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 856:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 857:Generated_Source\PSoC6/CapSense_Filter.c **** *
 858:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Run the IIR filter.
 859:Generated_Source\PSoC6/CapSense_Filter.c **** *
 860:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Run the IIR filter.
 861:Generated_Source\PSoC6/CapSense_Filter.c **** *
 862:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 863:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 864:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 865:Generated_Source\PSoC6/CapSense_Filter.c **** *
 866:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 867:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 868:Generated_Source\PSoC6/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 869:Generated_Source\PSoC6/CapSense_Filter.c **** {
 870:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 871:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
 872:Generated_Source\PSoC6/CapSense_Filter.c **** 
 873:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 874:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 875:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 876:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 877:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 878:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 879:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
 880:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 881:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 882:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 883:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 884:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 885:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 886:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = CY_LO8
 887:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 888:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 22


 889:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 890:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 891:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 892:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 893:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 894:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 895:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 896:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 897:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 898:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 899:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 900:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 901:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 902:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 903:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 904:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 905:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 906:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 907:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 908:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp >>
 909:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = CY_LO8(temp)
 910:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 911:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 912:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 913:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 914:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 915:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 916:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp);
 917:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 918:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 919:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 920:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 921:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 922:Generated_Source\PSoC6/CapSense_Filter.c **** }
 923:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 924:Generated_Source\PSoC6/CapSense_Filter.c **** 
 925:Generated_Source\PSoC6/CapSense_Filter.c **** 
 926:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 927:Generated_Source\PSoC6/CapSense_Filter.c **** 
 928:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 929:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 930:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 931:Generated_Source\PSoC6/CapSense_Filter.c **** *
 932:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter history.
 933:Generated_Source\PSoC6/CapSense_Filter.c **** *
 934:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter history.
 935:Generated_Source\PSoC6/CapSense_Filter.c **** *
 936:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 937:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 938:Generated_Source\PSoC6/CapSense_Filter.c **** *
 939:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 940:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 941:Generated_Source\PSoC6/CapSense_Filter.c **** {
 942:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 943:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 944:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 945:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 23


 946:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 947:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 948:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 949:Generated_Source\PSoC6/CapSense_Filter.c **** 
 950:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 951:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 952:Generated_Source\PSoC6/CapSense_Filter.c **** 
 953:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 954:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 955:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 956:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 957:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 958:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 959:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 960:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 961:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 962:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 963:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 964:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 965:Generated_Source\PSoC6/CapSense_Filter.c **** 
 966:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 967:Generated_Source\PSoC6/CapSense_Filter.c **** }
 968:Generated_Source\PSoC6/CapSense_Filter.c **** 
 969:Generated_Source\PSoC6/CapSense_Filter.c **** 
 970:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 971:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
 972:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 973:Generated_Source\PSoC6/CapSense_Filter.c **** *
 974:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input
 975:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 976:Generated_Source\PSoC6/CapSense_Filter.c **** *
 977:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input
 978:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 979:Generated_Source\PSoC6/CapSense_Filter.c **** *
 980:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 981:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 982:Generated_Source\PSoC6/CapSense_Filter.c **** *
 983:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 984:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
 985:Generated_Source\PSoC6/CapSense_Filter.c **** {
 986:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 987:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 988:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 989:Generated_Source\PSoC6/CapSense_Filter.c **** 
 990:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 991:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 992:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 993:Generated_Source\PSoC6/CapSense_Filter.c **** 
 994:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 995:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 996:Generated_Source\PSoC6/CapSense_Filter.c **** 
 997:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 998:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 999:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1000:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1001:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1002:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 24


1003:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1004:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1005:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1006:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1007:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1008:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1009:Generated_Source\PSoC6/CapSense_Filter.c **** 
1010:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1011:Generated_Source\PSoC6/CapSense_Filter.c **** }
1012:Generated_Source\PSoC6/CapSense_Filter.c **** 
1013:Generated_Source\PSoC6/CapSense_Filter.c **** 
1014:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1015:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1016:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1017:Generated_Source\PSoC6/CapSense_Filter.c **** *
1018:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter.
1019:Generated_Source\PSoC6/CapSense_Filter.c **** *
1020:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter.
1021:Generated_Source\PSoC6/CapSense_Filter.c **** *
1022:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1023:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1024:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1025:Generated_Source\PSoC6/CapSense_Filter.c **** *
1026:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1027:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1028:Generated_Source\PSoC6/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1029:Generated_Source\PSoC6/CapSense_Filter.c **** {
1030:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1031:Generated_Source\PSoC6/CapSense_Filter.c **** 
1032:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1033:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1034:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1035:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1036:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1037:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1038:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1039:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1040:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1041:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1042:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1043:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1044:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1045:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1046:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1047:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1048:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC6/CapSense_Filter.c **** }
1050:Generated_Source\PSoC6/CapSense_Filter.c **** 
1051:Generated_Source\PSoC6/CapSense_Filter.c **** 
1052:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1053:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1054:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1055:Generated_Source\PSoC6/CapSense_Filter.c **** *
1056:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the Median filter.
1057:Generated_Source\PSoC6/CapSense_Filter.c **** *
1058:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the Median filter.
1059:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 25


1060:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1061:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1062:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1063:Generated_Source\PSoC6/CapSense_Filter.c **** *
1064:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1065:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1066:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1067:Generated_Source\PSoC6/CapSense_Filter.c **** {
1068:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1069:Generated_Source\PSoC6/CapSense_Filter.c **** 
1070:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
1071:Generated_Source\PSoC6/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1072:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 temp;
1073:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1074:Generated_Source\PSoC6/CapSense_Filter.c **** 
1075:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1076:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1077:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1078:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1079:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1080:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1081:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1082:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1083:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1084:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1085:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1086:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1087:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1088:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1089:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1090:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1091:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1092:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1093:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1094:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1095:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1096:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1097:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1099:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC6/CapSense_Filter.c **** }
1103:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1104:Generated_Source\PSoC6/CapSense_Filter.c **** 
1105:Generated_Source\PSoC6/CapSense_Filter.c **** 
1106:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1107:Generated_Source\PSoC6/CapSense_Filter.c **** 
1108:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1109:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1110:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1111:Generated_Source\PSoC6/CapSense_Filter.c **** *
1112:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter history.
1113:Generated_Source\PSoC6/CapSense_Filter.c **** *
1114:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter history.
1115:Generated_Source\PSoC6/CapSense_Filter.c **** *
1116:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 26


1117:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1118:Generated_Source\PSoC6/CapSense_Filter.c **** *
1119:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1120:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1121:Generated_Source\PSoC6/CapSense_Filter.c **** {
1122:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1123:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1124:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1125:Generated_Source\PSoC6/CapSense_Filter.c **** 
1126:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1127:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1128:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1129:Generated_Source\PSoC6/CapSense_Filter.c **** 
1130:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1131:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1132:Generated_Source\PSoC6/CapSense_Filter.c **** 
1133:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1134:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1135:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1136:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1137:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1138:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1139:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1140:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1141:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1142:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1143:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1144:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1145:Generated_Source\PSoC6/CapSense_Filter.c **** 
1146:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1147:Generated_Source\PSoC6/CapSense_Filter.c **** }
1148:Generated_Source\PSoC6/CapSense_Filter.c **** 
1149:Generated_Source\PSoC6/CapSense_Filter.c **** 
1150:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1151:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1152:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1153:Generated_Source\PSoC6/CapSense_Filter.c **** *
1154:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input
1155:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1156:Generated_Source\PSoC6/CapSense_Filter.c **** *
1157:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input
1158:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1159:Generated_Source\PSoC6/CapSense_Filter.c **** *
1160:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1161:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1162:Generated_Source\PSoC6/CapSense_Filter.c **** *
1163:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1164:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
1165:Generated_Source\PSoC6/CapSense_Filter.c **** {
1166:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1167:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1168:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1169:Generated_Source\PSoC6/CapSense_Filter.c **** 
1170:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1171:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1172:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1173:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 27


1174:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1175:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1176:Generated_Source\PSoC6/CapSense_Filter.c **** 
1177:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1178:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1179:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1180:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1181:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1182:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1183:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1184:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1185:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1186:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1187:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1188:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1189:Generated_Source\PSoC6/CapSense_Filter.c **** 
1190:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1191:Generated_Source\PSoC6/CapSense_Filter.c **** }
1192:Generated_Source\PSoC6/CapSense_Filter.c **** 
1193:Generated_Source\PSoC6/CapSense_Filter.c **** 
1194:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1196:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Filter.c **** *
1198:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter.
1199:Generated_Source\PSoC6/CapSense_Filter.c **** *
1200:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter.
1201:Generated_Source\PSoC6/CapSense_Filter.c **** *
1202:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1203:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1204:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1205:Generated_Source\PSoC6/CapSense_Filter.c **** *
1206:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1207:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1208:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1209:Generated_Source\PSoC6/CapSense_Filter.c **** {
1210:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1211:Generated_Source\PSoC6/CapSense_Filter.c **** 
1212:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1213:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1214:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1216:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1217:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1218:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1219:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1220:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1221:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1222:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1223:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1224:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1225:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1226:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1227:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1228:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1229:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1230:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 28


1231:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1232:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1233:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1234:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1235:Generated_Source\PSoC6/CapSense_Filter.c **** }
1236:Generated_Source\PSoC6/CapSense_Filter.c **** 
1237:Generated_Source\PSoC6/CapSense_Filter.c **** 
1238:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1239:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1240:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6/CapSense_Filter.c **** *
1242:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the average filter.
1243:Generated_Source\PSoC6/CapSense_Filter.c **** *
1244:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the average filter.
1245:Generated_Source\PSoC6/CapSense_Filter.c **** *
1246:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1247:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1248:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1249:Generated_Source\PSoC6/CapSense_Filter.c **** *
1250:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1251:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1252:Generated_Source\PSoC6/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1253:Generated_Source\PSoC6/CapSense_Filter.c **** {
1254:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1255:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
1256:Generated_Source\PSoC6/CapSense_Filter.c **** 
1257:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1258:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1259:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1260:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1261:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1262:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1263:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1264:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1265:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1266:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1267:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1268:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1269:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1270:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1271:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1272:Generated_Source\PSoC6/CapSense_Filter.c **** 
1273:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1274:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1275:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1276:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1277:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1278:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1279:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1280:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1281:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1282:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1284:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1285:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1286:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1287:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 29


1288:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1289:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1290:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1291:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1292:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1293:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1294:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1295:Generated_Source\PSoC6/CapSense_Filter.c **** 
1296:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1297:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1298:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
1299:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1300:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1301:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1302:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1303:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1304:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1305:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1306:Generated_Source\PSoC6/CapSense_Filter.c **** }
1307:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1308:Generated_Source\PSoC6/CapSense_Filter.c **** 
1309:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1310:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1311:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1312:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1313:Generated_Source\PSoC6/CapSense_Filter.c **** *
1314:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter history.
1315:Generated_Source\PSoC6/CapSense_Filter.c **** *
1316:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter history.
1317:Generated_Source\PSoC6/CapSense_Filter.c **** *
1318:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1319:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1320:Generated_Source\PSoC6/CapSense_Filter.c **** *
1321:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1322:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1323:Generated_Source\PSoC6/CapSense_Filter.c **** {
1324:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1325:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1326:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1327:Generated_Source\PSoC6/CapSense_Filter.c **** 
1328:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1329:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1330:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1331:Generated_Source\PSoC6/CapSense_Filter.c **** 
1332:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1333:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1334:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1335:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1336:Generated_Source\PSoC6/CapSense_Filter.c **** }
1337:Generated_Source\PSoC6/CapSense_Filter.c **** 
1338:Generated_Source\PSoC6/CapSense_Filter.c **** 
1339:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1340:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1341:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1342:Generated_Source\PSoC6/CapSense_Filter.c **** *
1343:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the ALP filter algorithm on a sensor indicated by an input
1344:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 30


1345:Generated_Source\PSoC6/CapSense_Filter.c **** *
1346:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the ALP filter algorithm on a sensor indicated by an input
1347:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1348:Generated_Source\PSoC6/CapSense_Filter.c **** *
1349:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1350:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1351:Generated_Source\PSoC6/CapSense_Filter.c **** *
1352:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1353:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1354:Generated_Source\PSoC6/CapSense_Filter.c **** {
1355:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1356:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1357:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1358:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1359:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1360:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1361:Generated_Source\PSoC6/CapSense_Filter.c **** 
1362:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1363:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1364:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1365:Generated_Source\PSoC6/CapSense_Filter.c **** 
1366:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1367:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1368:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1369:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1370:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1371:Generated_Source\PSoC6/CapSense_Filter.c **** 
1372:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1373:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1374:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1375:Generated_Source\PSoC6/CapSense_Filter.c **** 
1376:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1377:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1378:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1379:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1380:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1381:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1382:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1383:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1384:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1385:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1386:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1387:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1388:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1389:Generated_Source\PSoC6/CapSense_Filter.c **** }
1390:Generated_Source\PSoC6/CapSense_Filter.c **** 
1391:Generated_Source\PSoC6/CapSense_Filter.c **** 
1392:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1393:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1394:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1395:Generated_Source\PSoC6/CapSense_Filter.c **** *
1396:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter.
1397:Generated_Source\PSoC6/CapSense_Filter.c **** *
1398:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter.
1399:Generated_Source\PSoC6/CapSense_Filter.c **** *
1400:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1401:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 31


1402:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1403:Generated_Source\PSoC6/CapSense_Filter.c **** *
1404:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1405:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1406:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1407:Generated_Source\PSoC6/CapSense_Filter.c ****                                             uint32 wdType)
1408:Generated_Source\PSoC6/CapSense_Filter.c **** {
1409:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1410:Generated_Source\PSoC6/CapSense_Filter.c **** 
1411:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1412:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1413:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1414:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1415:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1416:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1417:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1418:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1419:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1420:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1421:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1422:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1423:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1424:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1426:Generated_Source\PSoC6/CapSense_Filter.c **** }
1427:Generated_Source\PSoC6/CapSense_Filter.c **** 
1428:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1430:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC6/CapSense_Filter.c **** *
1432:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Prepares ALP configuration structure and runs the filter.
1433:Generated_Source\PSoC6/CapSense_Filter.c **** *
1434:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Prepares ALP configuration structure and runs the filter.
1435:Generated_Source\PSoC6/CapSense_Filter.c **** *
1436:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1437:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrRamWdgt       The pointer to the RAM widget object.
1438:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1439:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1440:Generated_Source\PSoC6/CapSense_Filter.c **** *
1441:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1442:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1443:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1444:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1445:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1446:Generated_Source\PSoC6/CapSense_Filter.c **** {
1447:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1448:Generated_Source\PSoC6/CapSense_Filter.c **** 
1449:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
1450:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1451:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1452:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1453:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1454:Generated_Source\PSoC6/CapSense_Filter.c **** 
1455:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1456:Generated_Source\PSoC6/CapSense_Filter.c **** }
1457:Generated_Source\PSoC6/CapSense_Filter.c **** 
1458:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 32


1459:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1460:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1461:Generated_Source\PSoC6/CapSense_Filter.c **** *
1462:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the ALP filter.
1463:Generated_Source\PSoC6/CapSense_Filter.c **** *
1464:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the ALP filter.
1465:Generated_Source\PSoC6/CapSense_Filter.c **** *
1466:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1467:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrAlpFilterConfig The pointer to the filter configuration object of the sensor.
1468:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1469:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1470:Generated_Source\PSoC6/CapSense_Filter.c **** *
1471:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1472:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1473:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1474:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1475:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1476:Generated_Source\PSoC6/CapSense_Filter.c **** {
1477:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1478:Generated_Source\PSoC6/CapSense_Filter.c **** 
1479:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1480:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1481:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1482:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1483:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1484:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1485:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1486:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1487:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1488:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1489:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1490:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1491:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1492:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1493:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1494:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1495:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1496:Generated_Source\PSoC6/CapSense_Filter.c **** }
1497:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1498:Generated_Source\PSoC6/CapSense_Filter.c **** 
1499:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1500:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1501:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1502:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1503:Generated_Source\PSoC6/CapSense_Filter.c **** *
1504:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1505:Generated_Source\PSoC6/CapSense_Filter.c **** *
1506:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1507:Generated_Source\PSoC6/CapSense_Filter.c **** *
1508:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1509:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR
1510:Generated_Source\PSoC6/CapSense_Filter.c **** *           filter history.
1511:Generated_Source\PSoC6/CapSense_Filter.c **** *
1512:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1513:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1514:Generated_Source\PSoC6/CapSense_Filter.c **** {
1515:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 33


1516:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1517:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1518:Generated_Source\PSoC6/CapSense_Filter.c **** 
1519:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1520:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1521:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1522:Generated_Source\PSoC6/CapSense_Filter.c **** 
1523:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1524:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1525:Generated_Source\PSoC6/CapSense_Filter.c **** 
1526:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1527:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1528:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1529:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1530:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1531:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1532:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1533:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1534:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1535:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1536:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
1537:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1538:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1539:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1540:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1541:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1542:Generated_Source\PSoC6/CapSense_Filter.c **** 
1543:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1544:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1545:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1546:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1547:Generated_Source\PSoC6/CapSense_Filter.c **** }
1548:Generated_Source\PSoC6/CapSense_Filter.c **** 
1549:Generated_Source\PSoC6/CapSense_Filter.c **** 
1550:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1551:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1552:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1553:Generated_Source\PSoC6/CapSense_Filter.c **** *
1554:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1555:Generated_Source\PSoC6/CapSense_Filter.c **** *
1556:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1557:Generated_Source\PSoC6/CapSense_Filter.c **** *
1558:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1559:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1560:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1561:Generated_Source\PSoC6/CapSense_Filter.c **** *
1562:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1563:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1564:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1565:Generated_Source\PSoC6/CapSense_Filter.c **** {
1566:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1567:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1568:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1569:Generated_Source\PSoC6/CapSense_Filter.c **** 
1570:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1571:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1572:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 34


1573:Generated_Source\PSoC6/CapSense_Filter.c **** 
1574:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1575:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1577:Generated_Source\PSoC6/CapSense_Filter.c **** }
1578:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1579:Generated_Source\PSoC6/CapSense_Filter.c **** 
1580:Generated_Source\PSoC6/CapSense_Filter.c **** 
1581:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1582:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1583:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
1584:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1585:Generated_Source\PSoC6/CapSense_Filter.c **** *
1586:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by
1587:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1588:Generated_Source\PSoC6/CapSense_Filter.c **** *
1589:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by
1590:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1591:Generated_Source\PSoC6/CapSense_Filter.c **** *
1592:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1593:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1594:Generated_Source\PSoC6/CapSense_Filter.c **** *
1595:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1596:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1597:Generated_Source\PSoC6/CapSense_Filter.c **** {
1598:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1599:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1600:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1601:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1602:Generated_Source\PSoC6/CapSense_Filter.c **** 
1603:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1604:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1605:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1606:Generated_Source\PSoC6/CapSense_Filter.c **** 
1607:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1608:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1609:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1610:Generated_Source\PSoC6/CapSense_Filter.c **** 
1611:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1612:Generated_Source\PSoC6/CapSense_Filter.c **** }
1613:Generated_Source\PSoC6/CapSense_Filter.c **** 
1614:Generated_Source\PSoC6/CapSense_Filter.c **** 
1615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1618:Generated_Source\PSoC6/CapSense_Filter.c **** *
1619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the noise-envelope filter
1620:Generated_Source\PSoC6/CapSense_Filter.c **** *
1621:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the noise-envelope filter
1622:Generated_Source\PSoC6/CapSense_Filter.c **** *
1623:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1624:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1625:Generated_Source\PSoC6/CapSense_Filter.c **** *
1626:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1627:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1628:Generated_Source\PSoC6/CapSense_Filter.c **** {
1629:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 35


1630:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1631:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1632:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1633:Generated_Source\PSoC6/CapSense_Filter.c **** 
1634:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1635:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1636:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1637:Generated_Source\PSoC6/CapSense_Filter.c **** 
1638:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1639:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1640:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1641:Generated_Source\PSoC6/CapSense_Filter.c **** 
1642:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1643:Generated_Source\PSoC6/CapSense_Filter.c **** }
1644:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1645:Generated_Source\PSoC6/CapSense_Filter.c **** 
1646:Generated_Source\PSoC6/CapSense_Filter.c **** 
1647:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1648:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1649:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1650:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1651:Generated_Source\PSoC6/CapSense_Filter.c **** *
1652:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the median value from the three passed arguments.
1653:Generated_Source\PSoC6/CapSense_Filter.c **** *
1654:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the median value from the three passed arguments.
1655:Generated_Source\PSoC6/CapSense_Filter.c **** *
1656:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x1 The first value to be compared.
1657:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x2 The second value to be compared.
1658:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x3 The third value to be compared.
1659:Generated_Source\PSoC6/CapSense_Filter.c **** *
1660:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the median value of input arguments.
1661:Generated_Source\PSoC6/CapSense_Filter.c **** *
1662:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1663:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1664:Generated_Source\PSoC6/CapSense_Filter.c **** {
1665:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 tmp;
1666:Generated_Source\PSoC6/CapSense_Filter.c **** 
1667:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x1 > x2)
1668:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1669:Generated_Source\PSoC6/CapSense_Filter.c ****         tmp = x2;
1670:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x1;
1671:Generated_Source\PSoC6/CapSense_Filter.c ****         x1 = tmp;
1672:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1673:Generated_Source\PSoC6/CapSense_Filter.c **** 
1674:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x2 > x3)
1675:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1676:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x3;
1677:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1678:Generated_Source\PSoC6/CapSense_Filter.c **** 
1679:Generated_Source\PSoC6/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1680:Generated_Source\PSoC6/CapSense_Filter.c **** }
1681:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1682:Generated_Source\PSoC6/CapSense_Filter.c **** 
1683:Generated_Source\PSoC6/CapSense_Filter.c **** 
1684:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1685:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1686:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 36


1687:Generated_Source\PSoC6/CapSense_Filter.c **** *
1688:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1689:Generated_Source\PSoC6/CapSense_Filter.c **** *
1690:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1691:Generated_Source\PSoC6/CapSense_Filter.c **** *
1692:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    input      The data to be filtered.
1693:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    prevOutput The previous filtered data.
1694:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1695:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB
1696:Generated_Source\PSoC6/CapSense_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1697:Generated_Source\PSoC6/CapSense_Filter.c **** *
1698:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the filtered data.
1699:Generated_Source\PSoC6/CapSense_Filter.c **** *
1700:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1701:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1702:Generated_Source\PSoC6/CapSense_Filter.c **** {
 286              		.loc 1 1702 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291              	.LVL35:
1703:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 filteredOutput;
1704:Generated_Source\PSoC6/CapSense_Filter.c **** 
1705:Generated_Source\PSoC6/CapSense_Filter.c ****     /*
1706:Generated_Source\PSoC6/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1707:Generated_Source\PSoC6/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1708:Generated_Source\PSoC6/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1709:Generated_Source\PSoC6/CapSense_Filter.c ****     */
1710:Generated_Source\PSoC6/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 292              		.loc 1 1710 0
 293 0000 9840     		lsls	r0, r0, r3
 294              	.LVL36:
 295 0002 5043     		muls	r0, r2
 296 0004 8023     		movs	r3, #128
 297              	.LVL37:
 298 0006 5B00     		lsls	r3, r3, #1
 299 0008 9A1A     		subs	r2, r3, r2
 300              	.LVL38:
 301 000a 5143     		muls	r1, r2
 302              	.LVL39:
 303 000c 4018     		adds	r0, r0, r1
 304 000e 000A     		lsrs	r0, r0, #8
 305              	.LVL40:
1711:Generated_Source\PSoC6/CapSense_Filter.c **** 
1712:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1713:Generated_Source\PSoC6/CapSense_Filter.c ****     return filteredOutput;
1714:Generated_Source\PSoC6/CapSense_Filter.c **** }
 306              		.loc 1 1714 0
 307              		@ sp needed
 308 0010 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE55:
 311              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 312 0012 C046     		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 313              		.align	2
 314              		.global	CapSense_FtUpdateBaseline
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 37


 315              		.code	16
 316              		.thumb_func
 317              		.type	CapSense_FtUpdateBaseline, %function
 318              	CapSense_FtUpdateBaseline:
 319              	.LFB49:
 259:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 320              		.loc 1 259 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 8
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              	.LVL41:
 325 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 326              		.cfi_def_cfa_offset 20
 327              		.cfi_offset 4, -20
 328              		.cfi_offset 5, -16
 329              		.cfi_offset 6, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 4746     		mov	r7, r8
 333 0004 80B4     		push	{r7}
 334              		.cfi_def_cfa_offset 24
 335              		.cfi_offset 8, -24
 336 0006 82B0     		sub	sp, sp, #8
 337              		.cfi_def_cfa_offset 32
 338 0008 0700     		movs	r7, r0
 339 000a 0E00     		movs	r6, r1
 340 000c 0192     		str	r2, [sp, #4]
 341              	.LVL42:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 342              		.loc 1 271 0
 343 000e 0123     		movs	r3, #1
 344 0010 3EE0     		b	.L20
 345              	.LVL43:
 346              	.L27:
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 347              		.loc 1 283 0
 348 0012 6300     		lsls	r3, r4, #1
 349 0014 985B     		ldrh	r0, [r3, r6]
 350 0016 F318     		adds	r3, r6, r3
 351 0018 5988     		ldrh	r1, [r3, #2]
 352 001a 8842     		cmp	r0, r1
 353 001c 05D3     		bcc	.L21
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 354              		.loc 1 285 0
 355 001e 431A     		subs	r3, r0, r1
 356              	.LVL44:
 287:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 357              		.loc 1 287 0
 358 0020 3219     		adds	r2, r6, r4
 359 0022 0025     		movs	r5, #0
 360 0024 1572     		strb	r5, [r2, #8]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 361              		.loc 1 286 0
 362 0026 0122     		movs	r2, #1
 363 0028 01E0     		b	.L22
 364              	.LVL45:
 365              	.L21:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 38


 291:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 366              		.loc 1 291 0
 367 002a 0B1A     		subs	r3, r1, r0
 368              	.LVL46:
 292:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 369              		.loc 1 292 0
 370 002c 0022     		movs	r2, #0
 371              	.LVL47:
 372              	.L22:
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 373              		.loc 1 296 0
 374 002e 002A     		cmp	r2, #0
 375 0030 11D1     		bne	.L23
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 376              		.loc 1 296 0 is_stmt 0 discriminator 1
 377 0032 7D79     		ldrb	r5, [r7, #5]
 378 0034 AB42     		cmp	r3, r5
 379 0036 0ED9     		bls	.L23
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 380              		.loc 1 298 0 is_stmt 1
 381 0038 3319     		adds	r3, r6, r4
 382              	.LVL48:
 383 003a 1B7A     		ldrb	r3, [r3, #8]
 384 003c 3A7A     		ldrb	r2, [r7, #8]
 385              	.LVL49:
 386 003e 9342     		cmp	r3, r2
 387 0040 05D3     		bcc	.L24
 300:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 388              		.loc 1 300 0
 389 0042 2200     		movs	r2, r4
 390 0044 0199     		ldr	r1, [sp, #4]
 391 0046 3000     		movs	r0, r6
 392 0048 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 393              	.LVL50:
 394 004c 1FE0     		b	.L25
 395              	.L24:
 304:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 396              		.loc 1 304 0
 397 004e 3219     		adds	r2, r6, r4
 398 0050 0133     		adds	r3, r3, #1
 399 0052 1372     		strb	r3, [r2, #8]
 400 0054 1BE0     		b	.L25
 401              	.LVL51:
 402              	.L23:
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 403              		.loc 1 311 0
 404 0056 3D79     		ldrb	r5, [r7, #4]
 405 0058 AB42     		cmp	r3, r5
 406 005a 04D9     		bls	.L26
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 407              		.loc 1 312 0 discriminator 1
 408 005c 7D79     		ldrb	r5, [r7, #5]
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 409              		.loc 1 311 0 discriminator 1
 410 005e AB42     		cmp	r3, r5
 411 0060 15D8     		bhi	.L25
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 39


 412              		.loc 1 312 0
 413 0062 002A     		cmp	r2, #0
 414 0064 13D1     		bne	.L25
 415              	.L26:
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 416              		.loc 1 318 0
 417 0066 FF23     		movs	r3, #255
 418              	.LVL52:
 419 0068 019A     		ldr	r2, [sp, #4]
 420              	.LVL53:
 421 006a 1340     		ands	r3, r2
 422 006c 062B     		cmp	r3, #6
 423 006e 0ED0     		beq	.L25
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 424              		.loc 1 322 0
 425 0070 0902     		lsls	r1, r1, #8
 426              	.LVL54:
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 427              		.loc 1 323 0
 428 0072 3319     		adds	r3, r6, r4
 429 0074 9846     		mov	r8, r3
 430 0076 1B79     		ldrb	r3, [r3, #4]
 431 0078 1943     		orrs	r1, r3
 432              	.LVL55:
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 433              		.loc 1 334 0
 434 007a 0823     		movs	r3, #8
 435 007c 0122     		movs	r2, #1
 436 007e FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 437              	.LVL56:
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 438              		.loc 1 340 0
 439 0082 020A     		lsrs	r2, r0, #8
 440 0084 6300     		lsls	r3, r4, #1
 441 0086 F318     		adds	r3, r6, r3
 442 0088 5A80     		strh	r2, [r3, #2]
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 443              		.loc 1 341 0
 444 008a 4346     		mov	r3, r8
 445 008c 1871     		strb	r0, [r3, #4]
 446              	.LVL57:
 447              	.L25:
 448 008e 2300     		movs	r3, r4
 449              	.LVL58:
 450              	.L20:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 451              		.loc 1 271 0 discriminator 1
 452 0090 5C1E     		subs	r4, r3, #1
 453              	.LVL59:
 454 0092 002B     		cmp	r3, #0
 455 0094 BDD1     		bne	.L27
 398:Generated_Source\PSoC6/CapSense_Filter.c **** 
 456              		.loc 1 398 0
 457 0096 0020     		movs	r0, #0
 458 0098 02B0     		add	sp, sp, #8
 459              		@ sp needed
 460              	.LVL60:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 40


 461              	.LVL61:
 462              	.LVL62:
 463 009a 04BC     		pop	{r2}
 464 009c 9046     		mov	r8, r2
 465 009e F0BD     		pop	{r4, r5, r6, r7, pc}
 466              		.cfi_endproc
 467              	.LFE49:
 468              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 469              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 470              		.align	2
 471              		.global	CapSense_UpdateSensorBaseline
 472              		.code	16
 473              		.thumb_func
 474              		.type	CapSense_UpdateSensorBaseline, %function
 475              	CapSense_UpdateSensorBaseline:
 476              	.LFB48:
 201:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 477              		.loc 1 201 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL63:
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486              	.LVL64:
 206:Generated_Source\PSoC6/CapSense_Filter.c **** 
 487              		.loc 1 206 0
 488 0002 4001     		lsls	r0, r0, #5
 489              	.LVL65:
 490 0004 064B     		ldr	r3, .L29
 491 0006 1B18     		adds	r3, r3, r0
 492              	.LVL66:
 493 0008 5868     		ldr	r0, [r3, #4]
 494              	.LVL67:
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 495              		.loc 1 210 0
 496 000a 8A00     		lsls	r2, r1, #2
 497 000c 5218     		adds	r2, r2, r1
 498 000e 5100     		lsls	r1, r2, #1
 499              	.LVL68:
 500 0010 9A68     		ldr	r2, [r3, #8]
 501 0012 9446     		mov	ip, r2
 502 0014 6144     		add	r1, r1, ip
 503              	.LVL69:
 211:Generated_Source\PSoC6/CapSense_Filter.c **** 
 504              		.loc 1 211 0
 505 0016 9A7E     		ldrb	r2, [r3, #26]
 506 0018 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 507              	.LVL70:
 222:Generated_Source\PSoC6/CapSense_Filter.c **** 
 508              		.loc 1 222 0
 509              		@ sp needed
 510 001c 10BD     		pop	{r4, pc}
 511              	.L30:
 512 001e C046     		.align	2
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 41


 513              	.L29:
 514 0020 00000000 		.word	CapSense_dsFlash
 515              		.cfi_endproc
 516              	.LFE48:
 517              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 518              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 519              		.align	2
 520              		.global	CapSense_UpdateWidgetBaseline
 521              		.code	16
 522              		.thumb_func
 523              		.type	CapSense_UpdateWidgetBaseline, %function
 524              	CapSense_UpdateWidgetBaseline:
 525              	.LFB47:
 144:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 526              		.loc 1 144 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              	.LVL71:
 531 0000 70B5     		push	{r4, r5, r6, lr}
 532              		.cfi_def_cfa_offset 16
 533              		.cfi_offset 4, -16
 534              		.cfi_offset 5, -12
 535              		.cfi_offset 6, -8
 536              		.cfi_offset 14, -4
 537 0002 0600     		movs	r6, r0
 538              	.LVL72:
 152:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539              		.loc 1 152 0
 540 0004 4301     		lsls	r3, r0, #5
 541 0006 084A     		ldr	r2, .L34
 542 0008 D318     		adds	r3, r2, r3
 543              	.LVL73:
 544 000a 1B8B     		ldrh	r3, [r3, #24]
 545              	.LVL74:
 149:Generated_Source\PSoC6/CapSense_Filter.c **** 
 546              		.loc 1 149 0
 547 000c 0025     		movs	r5, #0
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 548              		.loc 1 154 0
 549 000e 05E0     		b	.L32
 550              	.LVL75:
 551              	.L33:
 156:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 552              		.loc 1 156 0
 553 0010 2100     		movs	r1, r4
 554 0012 3000     		movs	r0, r6
 555 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 556              	.LVL76:
 557 0018 0543     		orrs	r5, r0
 558              	.LVL77:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 559              		.loc 1 154 0
 560 001a 2300     		movs	r3, r4
 561              	.LVL78:
 562              	.L32:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 42


 563              		.loc 1 154 0 is_stmt 0 discriminator 1
 564 001c 5C1E     		subs	r4, r3, #1
 565              	.LVL79:
 566 001e 002B     		cmp	r3, #0
 567 0020 F6D1     		bne	.L33
 160:Generated_Source\PSoC6/CapSense_Filter.c **** 
 568              		.loc 1 160 0 is_stmt 1
 569 0022 2800     		movs	r0, r5
 570              		@ sp needed
 571              	.LVL80:
 572              	.LVL81:
 573              	.LVL82:
 574 0024 70BD     		pop	{r4, r5, r6, pc}
 575              	.L35:
 576 0026 C046     		.align	2
 577              	.L34:
 578 0028 00000000 		.word	CapSense_dsFlash
 579              		.cfi_endproc
 580              	.LFE47:
 581              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 582              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 583              		.align	2
 584              		.global	CapSense_UpdateAllBaselines
 585              		.code	16
 586              		.thumb_func
 587              		.type	CapSense_UpdateAllBaselines, %function
 588              	CapSense_UpdateAllBaselines:
 589              	.LFB46:
  99:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 590              		.loc 1 99 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594 0000 70B5     		push	{r4, r5, r6, lr}
 595              		.cfi_def_cfa_offset 16
 596              		.cfi_offset 4, -16
 597              		.cfi_offset 5, -12
 598              		.cfi_offset 6, -8
 599              		.cfi_offset 14, -4
 600              	.LVL83:
 101:Generated_Source\PSoC6/CapSense_Filter.c **** 
 601              		.loc 1 101 0
 602 0002 0025     		movs	r5, #0
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 603              		.loc 1 103 0
 604 0004 0223     		movs	r3, #2
 605 0006 04E0     		b	.L37
 606              	.LVL84:
 607              	.L38:
 105:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 608              		.loc 1 105 0
 609 0008 2000     		movs	r0, r4
 610 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 611              	.LVL85:
 612 000e 0543     		orrs	r5, r0
 613              	.LVL86:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 43


 614              		.loc 1 103 0
 615 0010 2300     		movs	r3, r4
 616              	.LVL87:
 617              	.L37:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 618              		.loc 1 103 0 is_stmt 0 discriminator 1
 619 0012 5C1E     		subs	r4, r3, #1
 620              	.LVL88:
 621 0014 002B     		cmp	r3, #0
 622 0016 F7D1     		bne	.L38
 109:Generated_Source\PSoC6/CapSense_Filter.c **** 
 623              		.loc 1 109 0 is_stmt 1
 624 0018 2800     		movs	r0, r5
 625              		@ sp needed
 626              	.LVL89:
 627              	.LVL90:
 628 001a 70BD     		pop	{r4, r5, r6, pc}
 629              		.cfi_endproc
 630              	.LFE46:
 631              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 632              		.text
 633              	.Letext0:
 634              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 635              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 636              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 637              		.file 5 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 638              		.file 6 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 639              		.section	.debug_info,"",%progbits
 640              	.Ldebug_info0:
 641 0000 A5070000 		.4byte	0x7a5
 642 0004 0400     		.2byte	0x4
 643 0006 00000000 		.4byte	.Ldebug_abbrev0
 644 000a 04       		.byte	0x4
 645 000b 01       		.uleb128 0x1
 646 000c E5000000 		.4byte	.LASF91
 647 0010 0C       		.byte	0xc
 648 0011 C2020000 		.4byte	.LASF92
 649 0015 F6030000 		.4byte	.LASF93
 650 0019 00000000 		.4byte	.Ldebug_ranges0+0
 651 001d 00000000 		.4byte	0
 652 0021 00000000 		.4byte	.Ldebug_line0
 653 0025 02       		.uleb128 0x2
 654 0026 04       		.byte	0x4
 655 0027 05       		.byte	0x5
 656 0028 696E7400 		.ascii	"int\000"
 657 002c 03       		.uleb128 0x3
 658 002d 04       		.byte	0x4
 659 002e 07       		.byte	0x7
 660 002f D4030000 		.4byte	.LASF0
 661 0033 03       		.uleb128 0x3
 662 0034 08       		.byte	0x8
 663 0035 05       		.byte	0x5
 664 0036 97020000 		.4byte	.LASF1
 665 003a 03       		.uleb128 0x3
 666 003b 08       		.byte	0x8
 667 003c 04       		.byte	0x4
 668 003d 6D030000 		.4byte	.LASF2
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 44


 669 0041 03       		.uleb128 0x3
 670 0042 01       		.byte	0x1
 671 0043 06       		.byte	0x6
 672 0044 9B030000 		.4byte	.LASF3
 673 0048 04       		.uleb128 0x4
 674 0049 1A030000 		.4byte	.LASF6
 675 004d 02       		.byte	0x2
 676 004e 1D       		.byte	0x1d
 677 004f 53000000 		.4byte	0x53
 678 0053 03       		.uleb128 0x3
 679 0054 01       		.byte	0x1
 680 0055 08       		.byte	0x8
 681 0056 79030000 		.4byte	.LASF4
 682 005a 03       		.uleb128 0x3
 683 005b 02       		.byte	0x2
 684 005c 05       		.byte	0x5
 685 005d 9A000000 		.4byte	.LASF5
 686 0061 04       		.uleb128 0x4
 687 0062 B6010000 		.4byte	.LASF7
 688 0066 02       		.byte	0x2
 689 0067 2B       		.byte	0x2b
 690 0068 6C000000 		.4byte	0x6c
 691 006c 03       		.uleb128 0x3
 692 006d 02       		.byte	0x2
 693 006e 07       		.byte	0x7
 694 006f 85040000 		.4byte	.LASF8
 695 0073 03       		.uleb128 0x3
 696 0074 04       		.byte	0x4
 697 0075 05       		.byte	0x5
 698 0076 AA020000 		.4byte	.LASF9
 699 007a 04       		.uleb128 0x4
 700 007b 96010000 		.4byte	.LASF10
 701 007f 02       		.byte	0x2
 702 0080 41       		.byte	0x41
 703 0081 85000000 		.4byte	0x85
 704 0085 03       		.uleb128 0x3
 705 0086 04       		.byte	0x4
 706 0087 07       		.byte	0x7
 707 0088 72050000 		.4byte	.LASF11
 708 008c 03       		.uleb128 0x3
 709 008d 08       		.byte	0x8
 710 008e 07       		.byte	0x7
 711 008f A7030000 		.4byte	.LASF12
 712 0093 04       		.uleb128 0x4
 713 0094 13020000 		.4byte	.LASF13
 714 0098 03       		.byte	0x3
 715 0099 18       		.byte	0x18
 716 009a 48000000 		.4byte	0x48
 717 009e 04       		.uleb128 0x4
 718 009f E1030000 		.4byte	.LASF14
 719 00a3 03       		.byte	0x3
 720 00a4 24       		.byte	0x24
 721 00a5 61000000 		.4byte	0x61
 722 00a9 04       		.uleb128 0x4
 723 00aa BE030000 		.4byte	.LASF15
 724 00ae 03       		.byte	0x3
 725 00af 30       		.byte	0x30
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 45


 726 00b0 7A000000 		.4byte	0x7a
 727 00b4 03       		.uleb128 0x3
 728 00b5 04       		.byte	0x4
 729 00b6 07       		.byte	0x7
 730 00b7 EB020000 		.4byte	.LASF16
 731 00bb 03       		.uleb128 0x3
 732 00bc 01       		.byte	0x1
 733 00bd 08       		.byte	0x8
 734 00be A5020000 		.4byte	.LASF17
 735 00c2 03       		.uleb128 0x3
 736 00c3 04       		.byte	0x4
 737 00c4 04       		.byte	0x4
 738 00c5 91020000 		.4byte	.LASF18
 739 00c9 03       		.uleb128 0x3
 740 00ca 08       		.byte	0x8
 741 00cb 04       		.byte	0x4
 742 00cc 89050000 		.4byte	.LASF19
 743 00d0 05       		.uleb128 0x5
 744 00d1 91030000 		.4byte	.LASF20
 745 00d5 04       		.byte	0x4
 746 00d6 E703     		.2byte	0x3e7
 747 00d8 A9000000 		.4byte	0xa9
 748 00dc 05       		.uleb128 0x5
 749 00dd 1B020000 		.4byte	.LASF21
 750 00e1 04       		.byte	0x4
 751 00e2 EA03     		.2byte	0x3ea
 752 00e4 93000000 		.4byte	0x93
 753 00e8 05       		.uleb128 0x5
 754 00e9 DE010000 		.4byte	.LASF22
 755 00ed 04       		.byte	0x4
 756 00ee EB03     		.2byte	0x3eb
 757 00f0 9E000000 		.4byte	0x9e
 758 00f4 05       		.uleb128 0x5
 759 00f5 6B050000 		.4byte	.LASF23
 760 00f9 04       		.byte	0x4
 761 00fa EC03     		.2byte	0x3ec
 762 00fc A9000000 		.4byte	0xa9
 763 0100 04       		.uleb128 0x4
 764 0101 F4020000 		.4byte	.LASF24
 765 0105 05       		.byte	0x5
 766 0106 EA       		.byte	0xea
 767 0107 E8000000 		.4byte	0xe8
 768 010b 04       		.uleb128 0x4
 769 010c 16000000 		.4byte	.LASF25
 770 0110 05       		.byte	0x5
 771 0111 EE       		.byte	0xee
 772 0112 DC000000 		.4byte	0xdc
 773 0116 06       		.uleb128 0x6
 774 0117 01       		.byte	0x1
 775 0118 53000000 		.4byte	0x53
 776 011c 06       		.byte	0x6
 777 011d 61       		.byte	0x61
 778 011e 47010000 		.4byte	0x147
 779 0122 07       		.uleb128 0x7
 780 0123 C1010000 		.4byte	.LASF26
 781 0127 01       		.byte	0x1
 782 0128 07       		.uleb128 0x7
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 46


 783 0129 69040000 		.4byte	.LASF27
 784 012d 02       		.byte	0x2
 785 012e 07       		.uleb128 0x7
 786 012f 46050000 		.4byte	.LASF28
 787 0133 03       		.byte	0x3
 788 0134 07       		.uleb128 0x7
 789 0135 B9050000 		.4byte	.LASF29
 790 0139 04       		.byte	0x4
 791 013a 07       		.uleb128 0x7
 792 013b AA000000 		.4byte	.LASF30
 793 013f 05       		.byte	0x5
 794 0140 07       		.uleb128 0x7
 795 0141 79020000 		.4byte	.LASF31
 796 0145 06       		.byte	0x6
 797 0146 00       		.byte	0
 798 0147 04       		.uleb128 0x4
 799 0148 98050000 		.4byte	.LASF32
 800 014c 06       		.byte	0x6
 801 014d 68       		.byte	0x68
 802 014e 16010000 		.4byte	0x116
 803 0152 08       		.uleb128 0x8
 804 0153 0E       		.byte	0xe
 805 0154 06       		.byte	0x6
 806 0155 8C       		.byte	0x8c
 807 0156 C7010000 		.4byte	0x1c7
 808 015a 09       		.uleb128 0x9
 809 015b F1040000 		.4byte	.LASF33
 810 015f 06       		.byte	0x6
 811 0160 92       		.byte	0x92
 812 0161 E8000000 		.4byte	0xe8
 813 0165 00       		.byte	0
 814 0166 09       		.uleb128 0x9
 815 0167 2F030000 		.4byte	.LASF34
 816 016b 06       		.byte	0x6
 817 016c 97       		.byte	0x97
 818 016d 00010000 		.4byte	0x100
 819 0171 02       		.byte	0x2
 820 0172 09       		.uleb128 0x9
 821 0173 D6010000 		.4byte	.LASF35
 822 0177 06       		.byte	0x6
 823 0178 9C       		.byte	0x9c
 824 0179 DC000000 		.4byte	0xdc
 825 017d 04       		.byte	0x4
 826 017e 09       		.uleb128 0x9
 827 017f 77010000 		.4byte	.LASF36
 828 0183 06       		.byte	0x6
 829 0184 A1       		.byte	0xa1
 830 0185 DC000000 		.4byte	0xdc
 831 0189 05       		.byte	0x5
 832 018a 09       		.uleb128 0x9
 833 018b 62030000 		.4byte	.LASF37
 834 018f 06       		.byte	0x6
 835 0190 A6       		.byte	0xa6
 836 0191 DC000000 		.4byte	0xdc
 837 0195 06       		.byte	0x6
 838 0196 09       		.uleb128 0x9
 839 0197 24030000 		.4byte	.LASF38
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 47


 840 019b 06       		.byte	0x6
 841 019c AB       		.byte	0xab
 842 019d DC000000 		.4byte	0xdc
 843 01a1 07       		.byte	0x7
 844 01a2 09       		.uleb128 0x9
 845 01a3 51000000 		.4byte	.LASF39
 846 01a7 06       		.byte	0x6
 847 01a8 B2       		.byte	0xb2
 848 01a9 0B010000 		.4byte	0x10b
 849 01ad 08       		.byte	0x8
 850 01ae 09       		.uleb128 0x9
 851 01af 36020000 		.4byte	.LASF40
 852 01b3 06       		.byte	0x6
 853 01b4 BB       		.byte	0xbb
 854 01b5 E8000000 		.4byte	0xe8
 855 01b9 0A       		.byte	0xa
 856 01ba 09       		.uleb128 0x9
 857 01bb A9010000 		.4byte	.LASF41
 858 01bf 06       		.byte	0x6
 859 01c0 C0       		.byte	0xc0
 860 01c1 DC000000 		.4byte	0xdc
 861 01c5 0C       		.byte	0xc
 862 01c6 00       		.byte	0
 863 01c7 04       		.uleb128 0x4
 864 01c8 2D060000 		.4byte	.LASF42
 865 01cc 06       		.byte	0x6
 866 01cd C1       		.byte	0xc1
 867 01ce 52010000 		.4byte	0x152
 868 01d2 0A       		.uleb128 0xa
 869 01d3 0A       		.byte	0xa
 870 01d4 06       		.byte	0x6
 871 01d5 1201     		.2byte	0x112
 872 01d7 2A020000 		.4byte	0x22a
 873 01db 0B       		.uleb128 0xb
 874 01dc 72617700 		.ascii	"raw\000"
 875 01e0 06       		.byte	0x6
 876 01e1 1701     		.2byte	0x117
 877 01e3 2A020000 		.4byte	0x22a
 878 01e7 00       		.byte	0
 879 01e8 0C       		.uleb128 0xc
 880 01e9 38000000 		.4byte	.LASF43
 881 01ed 06       		.byte	0x6
 882 01ee 1C01     		.2byte	0x11c
 883 01f0 2A020000 		.4byte	0x22a
 884 01f4 02       		.byte	0x2
 885 01f5 0C       		.uleb128 0xc
 886 01f6 90050000 		.4byte	.LASF44
 887 01fa 06       		.byte	0x6
 888 01fb 2201     		.2byte	0x122
 889 01fd 3A020000 		.4byte	0x23a
 890 0201 04       		.byte	0x4
 891 0202 0C       		.uleb128 0xc
 892 0203 5C000000 		.4byte	.LASF45
 893 0207 06       		.byte	0x6
 894 0208 2701     		.2byte	0x127
 895 020a 00010000 		.4byte	0x100
 896 020e 06       		.byte	0x6
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 48


 897 020f 0C       		.uleb128 0xc
 898 0210 0C030000 		.4byte	.LASF46
 899 0214 06       		.byte	0x6
 900 0215 2C01     		.2byte	0x12c
 901 0217 4A020000 		.4byte	0x24a
 902 021b 08       		.byte	0x8
 903 021c 0C       		.uleb128 0xc
 904 021d CA040000 		.4byte	.LASF47
 905 0221 06       		.byte	0x6
 906 0222 3201     		.2byte	0x132
 907 0224 3A020000 		.4byte	0x23a
 908 0228 09       		.byte	0x9
 909 0229 00       		.byte	0
 910 022a 0D       		.uleb128 0xd
 911 022b E8000000 		.4byte	0xe8
 912 022f 3A020000 		.4byte	0x23a
 913 0233 0E       		.uleb128 0xe
 914 0234 B4000000 		.4byte	0xb4
 915 0238 00       		.byte	0
 916 0239 00       		.byte	0
 917 023a 0D       		.uleb128 0xd
 918 023b DC000000 		.4byte	0xdc
 919 023f 4A020000 		.4byte	0x24a
 920 0243 0E       		.uleb128 0xe
 921 0244 B4000000 		.4byte	0xb4
 922 0248 00       		.byte	0
 923 0249 00       		.byte	0
 924 024a 0D       		.uleb128 0xd
 925 024b 0B010000 		.4byte	0x10b
 926 024f 5A020000 		.4byte	0x25a
 927 0253 0E       		.uleb128 0xe
 928 0254 B4000000 		.4byte	0xb4
 929 0258 00       		.byte	0
 930 0259 00       		.byte	0
 931 025a 05       		.uleb128 0x5
 932 025b 33040000 		.4byte	.LASF48
 933 025f 06       		.byte	0x6
 934 0260 3301     		.2byte	0x133
 935 0262 D2010000 		.4byte	0x1d2
 936 0266 0A       		.uleb128 0xa
 937 0267 20       		.byte	0x20
 938 0268 06       		.byte	0x6
 939 0269 F101     		.2byte	0x1f1
 940 026b F2020000 		.4byte	0x2f2
 941 026f 0C       		.uleb128 0xc
 942 0270 8D000000 		.4byte	.LASF49
 943 0274 06       		.byte	0x6
 944 0275 FA01     		.2byte	0x1fa
 945 0277 F2020000 		.4byte	0x2f2
 946 027b 00       		.byte	0
 947 027c 0C       		.uleb128 0xc
 948 027d 2C050000 		.4byte	.LASF50
 949 0281 06       		.byte	0x6
 950 0282 0102     		.2byte	0x201
 951 0284 F9020000 		.4byte	0x2f9
 952 0288 04       		.byte	0x4
 953 0289 0C       		.uleb128 0xc
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 49


 954 028a D5050000 		.4byte	.LASF51
 955 028e 06       		.byte	0x6
 956 028f 0702     		.2byte	0x207
 957 0291 FB020000 		.4byte	0x2fb
 958 0295 08       		.byte	0x8
 959 0296 0C       		.uleb128 0xc
 960 0297 02060000 		.4byte	.LASF52
 961 029b 06       		.byte	0x6
 962 029c 0C02     		.2byte	0x20c
 963 029e F9020000 		.4byte	0x2f9
 964 02a2 0C       		.byte	0xc
 965 02a3 0C       		.uleb128 0xc
 966 02a4 03020000 		.4byte	.LASF53
 967 02a8 06       		.byte	0x6
 968 02a9 1302     		.2byte	0x213
 969 02ab 01030000 		.4byte	0x301
 970 02af 10       		.byte	0x10
 971 02b0 0C       		.uleb128 0xc
 972 02b1 C7030000 		.4byte	.LASF54
 973 02b5 06       		.byte	0x6
 974 02b6 1802     		.2byte	0x218
 975 02b8 F4000000 		.4byte	0xf4
 976 02bc 14       		.byte	0x14
 977 02bd 0C       		.uleb128 0xc
 978 02be 61000000 		.4byte	.LASF55
 979 02c2 06       		.byte	0x6
 980 02c3 1F02     		.2byte	0x21f
 981 02c5 E8000000 		.4byte	0xe8
 982 02c9 18       		.byte	0x18
 983 02ca 0C       		.uleb128 0xc
 984 02cb B9020000 		.4byte	.LASF56
 985 02cf 06       		.byte	0x6
 986 02d0 2A02     		.2byte	0x22a
 987 02d2 DC000000 		.4byte	0xdc
 988 02d6 1A       		.byte	0x1a
 989 02d7 0C       		.uleb128 0xc
 990 02d8 38030000 		.4byte	.LASF57
 991 02dc 06       		.byte	0x6
 992 02dd 3202     		.2byte	0x232
 993 02df DC000000 		.4byte	0xdc
 994 02e3 1B       		.byte	0x1b
 995 02e4 0C       		.uleb128 0xc
 996 02e5 21020000 		.4byte	.LASF58
 997 02e9 06       		.byte	0x6
 998 02ea 3902     		.2byte	0x239
 999 02ec DC000000 		.4byte	0xdc
 1000 02f0 1C       		.byte	0x1c
 1001 02f1 00       		.byte	0
 1002 02f2 0F       		.uleb128 0xf
 1003 02f3 04       		.byte	0x4
 1004 02f4 F8020000 		.4byte	0x2f8
 1005 02f8 10       		.uleb128 0x10
 1006 02f9 11       		.uleb128 0x11
 1007 02fa 04       		.byte	0x4
 1008 02fb 0F       		.uleb128 0xf
 1009 02fc 04       		.byte	0x4
 1010 02fd 5A020000 		.4byte	0x25a
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 50


 1011 0301 0F       		.uleb128 0xf
 1012 0302 04       		.byte	0x4
 1013 0303 DC000000 		.4byte	0xdc
 1014 0307 05       		.uleb128 0x5
 1015 0308 C1000000 		.4byte	.LASF59
 1016 030c 06       		.byte	0x6
 1017 030d 3A02     		.2byte	0x23a
 1018 030f 66020000 		.4byte	0x266
 1019 0313 0A       		.uleb128 0xa
 1020 0314 40       		.byte	0x40
 1021 0315 06       		.byte	0x6
 1022 0316 4002     		.2byte	0x240
 1023 0318 2A030000 		.4byte	0x32a
 1024 031c 0C       		.uleb128 0xc
 1025 031d 12060000 		.4byte	.LASF60
 1026 0321 06       		.byte	0x6
 1027 0322 4502     		.2byte	0x245
 1028 0324 2A030000 		.4byte	0x32a
 1029 0328 00       		.byte	0
 1030 0329 00       		.byte	0
 1031 032a 0D       		.uleb128 0xd
 1032 032b 07030000 		.4byte	0x307
 1033 032f 3A030000 		.4byte	0x33a
 1034 0333 0E       		.uleb128 0xe
 1035 0334 B4000000 		.4byte	0xb4
 1036 0338 01       		.byte	0x1
 1037 0339 00       		.byte	0
 1038 033a 05       		.uleb128 0x5
 1039 033b 00000000 		.4byte	.LASF61
 1040 033f 06       		.byte	0x6
 1041 0340 4602     		.2byte	0x246
 1042 0342 13030000 		.4byte	0x313
 1043 0346 12       		.uleb128 0x12
 1044 0347 B4040000 		.4byte	.LASF94
 1045 034b 01       		.byte	0x1
 1046 034c 3F       		.byte	0x3f
 1047 034d 00000000 		.4byte	.LFB45
 1048 0351 02000000 		.4byte	.LFE45-.LFB45
 1049 0355 01       		.uleb128 0x1
 1050 0356 9C       		.byte	0x9c
 1051 0357 13       		.uleb128 0x13
 1052 0358 3D020000 		.4byte	.LASF65
 1053 035c 01       		.byte	0x1
 1054 035d 2A02     		.2byte	0x22a
 1055 035f 00000000 		.4byte	.LFB54
 1056 0363 1E000000 		.4byte	.LFE54-.LFB54
 1057 0367 01       		.uleb128 0x1
 1058 0368 9C       		.byte	0x9c
 1059 0369 9C030000 		.4byte	0x39c
 1060 036d 14       		.uleb128 0x14
 1061 036e 49060000 		.4byte	.LASF62
 1062 0372 01       		.byte	0x1
 1063 0373 2A02     		.2byte	0x22a
 1064 0375 FB020000 		.4byte	0x2fb
 1065 0379 01       		.uleb128 0x1
 1066 037a 50       		.byte	0x50
 1067 037b 15       		.uleb128 0x15
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 51


 1068 037c 80010000 		.4byte	.LASF63
 1069 0380 01       		.byte	0x1
 1070 0381 2A02     		.2byte	0x22a
 1071 0383 F4000000 		.4byte	0xf4
 1072 0387 00000000 		.4byte	.LLST0
 1073 038b 15       		.uleb128 0x15
 1074 038c FC040000 		.4byte	.LASF64
 1075 0390 01       		.byte	0x1
 1076 0391 2A02     		.2byte	0x22a
 1077 0393 F4000000 		.4byte	0xf4
 1078 0397 21000000 		.4byte	.LLST1
 1079 039b 00       		.byte	0
 1080 039c 13       		.uleb128 0x13
 1081 039d D3040000 		.4byte	.LASF66
 1082 03a1 01       		.byte	0x1
 1083 03a2 0F02     		.2byte	0x20f
 1084 03a4 00000000 		.4byte	.LFB53
 1085 03a8 1E000000 		.4byte	.LFE53-.LFB53
 1086 03ac 01       		.uleb128 0x1
 1087 03ad 9C       		.byte	0x9c
 1088 03ae FF030000 		.4byte	0x3ff
 1089 03b2 15       		.uleb128 0x15
 1090 03b3 49060000 		.4byte	.LASF62
 1091 03b7 01       		.byte	0x1
 1092 03b8 0F02     		.2byte	0x20f
 1093 03ba FB020000 		.4byte	0x2fb
 1094 03be 42000000 		.4byte	.LLST2
 1095 03c2 15       		.uleb128 0x15
 1096 03c3 80010000 		.4byte	.LASF63
 1097 03c7 01       		.byte	0x1
 1098 03c8 0F02     		.2byte	0x20f
 1099 03ca F4000000 		.4byte	0xf4
 1100 03ce 6E000000 		.4byte	.LLST3
 1101 03d2 16       		.uleb128 0x16
 1102 03d3 EA030000 		.4byte	.LASF70
 1103 03d7 01       		.byte	0x1
 1104 03d8 1102     		.2byte	0x211
 1105 03da F4000000 		.4byte	0xf4
 1106 03de 9A000000 		.4byte	.LLST4
 1107 03e2 17       		.uleb128 0x17
 1108 03e3 14000000 		.4byte	.LVL6
 1109 03e7 57030000 		.4byte	0x357
 1110 03eb 18       		.uleb128 0x18
 1111 03ec 01       		.uleb128 0x1
 1112 03ed 50       		.byte	0x50
 1113 03ee 02       		.uleb128 0x2
 1114 03ef 76       		.byte	0x76
 1115 03f0 00       		.sleb128 0
 1116 03f1 18       		.uleb128 0x18
 1117 03f2 01       		.uleb128 0x1
 1118 03f3 51       		.byte	0x51
 1119 03f4 02       		.uleb128 0x2
 1120 03f5 75       		.byte	0x75
 1121 03f6 00       		.sleb128 0
 1122 03f7 18       		.uleb128 0x18
 1123 03f8 01       		.uleb128 0x1
 1124 03f9 52       		.byte	0x52
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 52


 1125 03fa 02       		.uleb128 0x2
 1126 03fb 74       		.byte	0x74
 1127 03fc 00       		.sleb128 0
 1128 03fd 00       		.byte	0
 1129 03fe 00       		.byte	0
 1130 03ff 13       		.uleb128 0x13
 1131 0400 40030000 		.4byte	.LASF67
 1132 0404 01       		.byte	0x1
 1133 0405 F301     		.2byte	0x1f3
 1134 0407 00000000 		.4byte	.LFB52
 1135 040b 20000000 		.4byte	.LFE52-.LFB52
 1136 040f 01       		.uleb128 0x1
 1137 0410 9C       		.byte	0x9c
 1138 0411 5F040000 		.4byte	0x45f
 1139 0415 15       		.uleb128 0x15
 1140 0416 62050000 		.4byte	.LASF68
 1141 041a 01       		.byte	0x1
 1142 041b F301     		.2byte	0x1f3
 1143 041d F4000000 		.4byte	0xf4
 1144 0421 DC000000 		.4byte	.LLST5
 1145 0425 15       		.uleb128 0x15
 1146 0426 3D000000 		.4byte	.LASF69
 1147 042a 01       		.byte	0x1
 1148 042b F301     		.2byte	0x1f3
 1149 042d F4000000 		.4byte	0xf4
 1150 0431 FD000000 		.4byte	.LLST6
 1151 0435 16       		.uleb128 0x16
 1152 0436 49060000 		.4byte	.LASF62
 1153 043a 01       		.byte	0x1
 1154 043b F501     		.2byte	0x1f5
 1155 043d FB020000 		.4byte	0x2fb
 1156 0441 1E010000 		.4byte	.LLST7
 1157 0445 16       		.uleb128 0x16
 1158 0446 87030000 		.4byte	.LASF71
 1159 044a 01       		.byte	0x1
 1160 044b F601     		.2byte	0x1f6
 1161 044d 5F040000 		.4byte	0x45f
 1162 0451 49010000 		.4byte	.LLST8
 1163 0455 19       		.uleb128 0x19
 1164 0456 1A000000 		.4byte	.LVL18
 1165 045a 9C030000 		.4byte	0x39c
 1166 045e 00       		.byte	0
 1167 045f 0F       		.uleb128 0xf
 1168 0460 04       		.byte	0x4
 1169 0461 65040000 		.4byte	0x465
 1170 0465 1A       		.uleb128 0x1a
 1171 0466 07030000 		.4byte	0x307
 1172 046a 13       		.uleb128 0x13
 1173 046b E0050000 		.4byte	.LASF72
 1174 046f 01       		.byte	0x1
 1175 0470 C701     		.2byte	0x1c7
 1176 0472 00000000 		.4byte	.LFB51
 1177 0476 24000000 		.4byte	.LFE51-.LFB51
 1178 047a 01       		.uleb128 0x1
 1179 047b 9C       		.byte	0x9c
 1180 047c D7040000 		.4byte	0x4d7
 1181 0480 15       		.uleb128 0x15
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 53


 1182 0481 62050000 		.4byte	.LASF68
 1183 0485 01       		.byte	0x1
 1184 0486 C701     		.2byte	0x1c7
 1185 0488 F4000000 		.4byte	0xf4
 1186 048c 5C010000 		.4byte	.LLST9
 1187 0490 16       		.uleb128 0x16
 1188 0491 3D000000 		.4byte	.LASF69
 1189 0495 01       		.byte	0x1
 1190 0496 C901     		.2byte	0x1c9
 1191 0498 F4000000 		.4byte	0xf4
 1192 049c 88010000 		.4byte	.LLST10
 1193 04a0 16       		.uleb128 0x16
 1194 04a1 1E050000 		.4byte	.LASF73
 1195 04a5 01       		.byte	0x1
 1196 04a6 CA01     		.2byte	0x1ca
 1197 04a8 F4000000 		.4byte	0xf4
 1198 04ac C9010000 		.4byte	.LLST11
 1199 04b0 16       		.uleb128 0x16
 1200 04b1 87030000 		.4byte	.LASF71
 1201 04b5 01       		.byte	0x1
 1202 04b6 CC01     		.2byte	0x1cc
 1203 04b8 5F040000 		.4byte	0x45f
 1204 04bc DC010000 		.4byte	.LLST12
 1205 04c0 17       		.uleb128 0x17
 1206 04c1 16000000 		.4byte	.LVL24
 1207 04c5 FF030000 		.4byte	0x3ff
 1208 04c9 18       		.uleb128 0x18
 1209 04ca 01       		.uleb128 0x1
 1210 04cb 50       		.byte	0x50
 1211 04cc 02       		.uleb128 0x2
 1212 04cd 75       		.byte	0x75
 1213 04ce 00       		.sleb128 0
 1214 04cf 18       		.uleb128 0x18
 1215 04d0 01       		.uleb128 0x1
 1216 04d1 51       		.byte	0x51
 1217 04d2 02       		.uleb128 0x2
 1218 04d3 74       		.byte	0x74
 1219 04d4 00       		.sleb128 0
 1220 04d5 00       		.byte	0
 1221 04d6 00       		.byte	0
 1222 04d7 13       		.uleb128 0x13
 1223 04d8 6D000000 		.4byte	.LASF74
 1224 04dc 01       		.byte	0x1
 1225 04dd A301     		.2byte	0x1a3
 1226 04df 00000000 		.4byte	.LFB50
 1227 04e3 16000000 		.4byte	.LFE50-.LFB50
 1228 04e7 01       		.uleb128 0x1
 1229 04e8 9C       		.byte	0x9c
 1230 04e9 0E050000 		.4byte	0x50e
 1231 04ed 16       		.uleb128 0x16
 1232 04ee 62050000 		.4byte	.LASF68
 1233 04f2 01       		.byte	0x1
 1234 04f3 A501     		.2byte	0x1a5
 1235 04f5 F4000000 		.4byte	0xf4
 1236 04f9 EF010000 		.4byte	.LLST13
 1237 04fd 17       		.uleb128 0x17
 1238 04fe 0C000000 		.4byte	.LVL31
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 54


 1239 0502 6A040000 		.4byte	0x46a
 1240 0506 18       		.uleb128 0x18
 1241 0507 01       		.uleb128 0x1
 1242 0508 50       		.byte	0x50
 1243 0509 02       		.uleb128 0x2
 1244 050a 74       		.byte	0x74
 1245 050b 00       		.sleb128 0
 1246 050c 00       		.byte	0
 1247 050d 00       		.byte	0
 1248 050e 1B       		.uleb128 0x1b
 1249 050f 62020000 		.4byte	.LASF79
 1250 0513 01       		.byte	0x1
 1251 0514 A506     		.2byte	0x6a5
 1252 0516 F4000000 		.4byte	0xf4
 1253 051a 00000000 		.4byte	.LFB55
 1254 051e 12000000 		.4byte	.LFE55-.LFB55
 1255 0522 01       		.uleb128 0x1
 1256 0523 9C       		.byte	0x9c
 1257 0524 75050000 		.4byte	0x575
 1258 0528 15       		.uleb128 0x15
 1259 0529 A4000000 		.4byte	.LASF75
 1260 052d 01       		.byte	0x1
 1261 052e A506     		.2byte	0x6a5
 1262 0530 F4000000 		.4byte	0xf4
 1263 0534 31020000 		.4byte	.LLST14
 1264 0538 15       		.uleb128 0x15
 1265 0539 AE050000 		.4byte	.LASF76
 1266 053d 01       		.byte	0x1
 1267 053e A506     		.2byte	0x6a5
 1268 0540 F4000000 		.4byte	0xf4
 1269 0544 52020000 		.4byte	.LLST15
 1270 0548 1C       		.uleb128 0x1c
 1271 0549 6E00     		.ascii	"n\000"
 1272 054b 01       		.byte	0x1
 1273 054c A506     		.2byte	0x6a5
 1274 054e F4000000 		.4byte	0xf4
 1275 0552 73020000 		.4byte	.LLST16
 1276 0556 15       		.uleb128 0x15
 1277 0557 B3020000 		.4byte	.LASF77
 1278 055b 01       		.byte	0x1
 1279 055c A506     		.2byte	0x6a5
 1280 055e F4000000 		.4byte	0xf4
 1281 0562 94020000 		.4byte	.LLST17
 1282 0566 1D       		.uleb128 0x1d
 1283 0567 87010000 		.4byte	.LASF78
 1284 056b 01       		.byte	0x1
 1285 056c A706     		.2byte	0x6a7
 1286 056e F4000000 		.4byte	0xf4
 1287 0572 01       		.uleb128 0x1
 1288 0573 50       		.byte	0x50
 1289 0574 00       		.byte	0
 1290 0575 1E       		.uleb128 0x1e
 1291 0576 04050000 		.4byte	.LASF80
 1292 057a 01       		.byte	0x1
 1293 057b FF       		.byte	0xff
 1294 057c F4000000 		.4byte	0xf4
 1295 0580 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 55


 1296 0584 A0000000 		.4byte	.LFE49-.LFB49
 1297 0588 01       		.uleb128 0x1
 1298 0589 9C       		.byte	0x9c
 1299 058a 51060000 		.4byte	0x651
 1300 058e 15       		.uleb128 0x15
 1301 058f 29020000 		.4byte	.LASF81
 1302 0593 01       		.byte	0x1
 1303 0594 0001     		.2byte	0x100
 1304 0596 51060000 		.4byte	0x651
 1305 059a B5020000 		.4byte	.LLST18
 1306 059e 15       		.uleb128 0x15
 1307 059f 49060000 		.4byte	.LASF62
 1308 05a3 01       		.byte	0x1
 1309 05a4 0101     		.2byte	0x101
 1310 05a6 FB020000 		.4byte	0x2fb
 1311 05aa E1020000 		.4byte	.LLST19
 1312 05ae 15       		.uleb128 0x15
 1313 05af 80010000 		.4byte	.LASF63
 1314 05b3 01       		.byte	0x1
 1315 05b4 0201     		.2byte	0x102
 1316 05b6 F4000000 		.4byte	0xf4
 1317 05ba 0D030000 		.4byte	.LLST20
 1318 05be 16       		.uleb128 0x16
 1319 05bf 84050000 		.4byte	.LASF82
 1320 05c3 01       		.byte	0x1
 1321 05c4 0401     		.2byte	0x104
 1322 05c6 F4000000 		.4byte	0xf4
 1323 05ca 2C030000 		.4byte	.LLST21
 1324 05ce 16       		.uleb128 0x16
 1325 05cf DA000000 		.4byte	.LASF83
 1326 05d3 01       		.byte	0x1
 1327 05d4 0501     		.2byte	0x105
 1328 05d6 F4000000 		.4byte	0xf4
 1329 05da 62030000 		.4byte	.LLST22
 1330 05de 16       		.uleb128 0x16
 1331 05df EA030000 		.4byte	.LASF70
 1332 05e3 01       		.byte	0x1
 1333 05e4 0601     		.2byte	0x106
 1334 05e6 F4000000 		.4byte	0xf4
 1335 05ea 8B030000 		.4byte	.LLST23
 1336 05ee 16       		.uleb128 0x16
 1337 05ef 38050000 		.4byte	.LASF84
 1338 05f3 01       		.byte	0x1
 1339 05f4 0701     		.2byte	0x107
 1340 05f6 F4000000 		.4byte	0xf4
 1341 05fa CD030000 		.4byte	.LLST24
 1342 05fe 1F       		.uleb128 0x1f
 1343 05ff 31000000 		.4byte	.LASF85
 1344 0603 01       		.byte	0x1
 1345 0604 0801     		.2byte	0x108
 1346 0606 F4000000 		.4byte	0xf4
 1347 060a 00       		.byte	0
 1348 060b 16       		.uleb128 0x16
 1349 060c A1010000 		.4byte	.LASF86
 1350 0610 01       		.byte	0x1
 1351 0611 0B01     		.2byte	0x10b
 1352 0613 F4000000 		.4byte	0xf4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 56


 1353 0617 E1030000 		.4byte	.LLST25
 1354 061b 20       		.uleb128 0x20
 1355 061c 4C000000 		.4byte	.LVL50
 1356 0620 57030000 		.4byte	0x357
 1357 0624 3C060000 		.4byte	0x63c
 1358 0628 18       		.uleb128 0x18
 1359 0629 01       		.uleb128 0x1
 1360 062a 50       		.byte	0x50
 1361 062b 02       		.uleb128 0x2
 1362 062c 76       		.byte	0x76
 1363 062d 00       		.sleb128 0
 1364 062e 18       		.uleb128 0x18
 1365 062f 01       		.uleb128 0x1
 1366 0630 51       		.byte	0x51
 1367 0631 03       		.uleb128 0x3
 1368 0632 91       		.byte	0x91
 1369 0633 64       		.sleb128 -28
 1370 0634 06       		.byte	0x6
 1371 0635 18       		.uleb128 0x18
 1372 0636 01       		.uleb128 0x1
 1373 0637 52       		.byte	0x52
 1374 0638 02       		.uleb128 0x2
 1375 0639 74       		.byte	0x74
 1376 063a 00       		.sleb128 0
 1377 063b 00       		.byte	0
 1378 063c 17       		.uleb128 0x17
 1379 063d 82000000 		.4byte	.LVL56
 1380 0641 0E050000 		.4byte	0x50e
 1381 0645 18       		.uleb128 0x18
 1382 0646 01       		.uleb128 0x1
 1383 0647 52       		.byte	0x52
 1384 0648 01       		.uleb128 0x1
 1385 0649 31       		.byte	0x31
 1386 064a 18       		.uleb128 0x18
 1387 064b 01       		.uleb128 0x1
 1388 064c 53       		.byte	0x53
 1389 064d 01       		.uleb128 0x1
 1390 064e 38       		.byte	0x38
 1391 064f 00       		.byte	0
 1392 0650 00       		.byte	0
 1393 0651 0F       		.uleb128 0xf
 1394 0652 04       		.byte	0x4
 1395 0653 C7010000 		.4byte	0x1c7
 1396 0657 1E       		.uleb128 0x1e
 1397 0658 E5010000 		.4byte	.LASF87
 1398 065c 01       		.byte	0x1
 1399 065d C8       		.byte	0xc8
 1400 065e D0000000 		.4byte	0xd0
 1401 0662 00000000 		.4byte	.LFB48
 1402 0666 24000000 		.4byte	.LFE48-.LFB48
 1403 066a 01       		.uleb128 0x1
 1404 066b 9C       		.byte	0x9c
 1405 066c D4060000 		.4byte	0x6d4
 1406 0670 21       		.uleb128 0x21
 1407 0671 62050000 		.4byte	.LASF68
 1408 0675 01       		.byte	0x1
 1409 0676 C8       		.byte	0xc8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 57


 1410 0677 F4000000 		.4byte	0xf4
 1411 067b FF030000 		.4byte	.LLST26
 1412 067f 21       		.uleb128 0x21
 1413 0680 3D000000 		.4byte	.LASF69
 1414 0684 01       		.byte	0x1
 1415 0685 C8       		.byte	0xc8
 1416 0686 F4000000 		.4byte	0xf4
 1417 068a 20040000 		.4byte	.LLST27
 1418 068e 22       		.uleb128 0x22
 1419 068f 31000000 		.4byte	.LASF85
 1420 0693 01       		.byte	0x1
 1421 0694 CA       		.byte	0xca
 1422 0695 F4000000 		.4byte	0xf4
 1423 0699 41040000 		.4byte	.LLST28
 1424 069d 22       		.uleb128 0x22
 1425 069e 49060000 		.4byte	.LASF62
 1426 06a2 01       		.byte	0x1
 1427 06a3 CC       		.byte	0xcc
 1428 06a4 FB020000 		.4byte	0x2fb
 1429 06a8 60040000 		.4byte	.LLST29
 1430 06ac 22       		.uleb128 0x22
 1431 06ad 87030000 		.4byte	.LASF71
 1432 06b1 01       		.byte	0x1
 1433 06b2 CD       		.byte	0xcd
 1434 06b3 5F040000 		.4byte	0x45f
 1435 06b7 8B040000 		.4byte	.LLST30
 1436 06bb 22       		.uleb128 0x22
 1437 06bc 29020000 		.4byte	.LASF81
 1438 06c0 01       		.byte	0x1
 1439 06c1 CE       		.byte	0xce
 1440 06c2 51060000 		.4byte	0x651
 1441 06c6 9E040000 		.4byte	.LLST31
 1442 06ca 19       		.uleb128 0x19
 1443 06cb 1C000000 		.4byte	.LVL70
 1444 06cf 75050000 		.4byte	0x575
 1445 06d3 00       		.byte	0
 1446 06d4 1E       		.uleb128 0x1e
 1447 06d5 4B040000 		.4byte	.LASF88
 1448 06d9 01       		.byte	0x1
 1449 06da 8F       		.byte	0x8f
 1450 06db D0000000 		.4byte	0xd0
 1451 06df 00000000 		.4byte	.LFB47
 1452 06e3 2C000000 		.4byte	.LFE47-.LFB47
 1453 06e7 01       		.uleb128 0x1
 1454 06e8 9C       		.byte	0x9c
 1455 06e9 4F070000 		.4byte	0x74f
 1456 06ed 21       		.uleb128 0x21
 1457 06ee 62050000 		.4byte	.LASF68
 1458 06f2 01       		.byte	0x1
 1459 06f3 8F       		.byte	0x8f
 1460 06f4 F4000000 		.4byte	0xf4
 1461 06f8 B1040000 		.4byte	.LLST32
 1462 06fc 22       		.uleb128 0x22
 1463 06fd 3D000000 		.4byte	.LASF69
 1464 0701 01       		.byte	0x1
 1465 0702 91       		.byte	0x91
 1466 0703 F4000000 		.4byte	0xf4
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 58


 1467 0707 DD040000 		.4byte	.LLST33
 1468 070b 22       		.uleb128 0x22
 1469 070c 1E050000 		.4byte	.LASF73
 1470 0710 01       		.byte	0x1
 1471 0711 92       		.byte	0x92
 1472 0712 F4000000 		.4byte	0xf4
 1473 0716 1E050000 		.4byte	.LLST34
 1474 071a 22       		.uleb128 0x22
 1475 071b 87030000 		.4byte	.LASF71
 1476 071f 01       		.byte	0x1
 1477 0720 94       		.byte	0x94
 1478 0721 5F040000 		.4byte	0x45f
 1479 0725 31050000 		.4byte	.LLST35
 1480 0729 22       		.uleb128 0x22
 1481 072a 46000000 		.4byte	.LASF89
 1482 072e 01       		.byte	0x1
 1483 072f 95       		.byte	0x95
 1484 0730 D0000000 		.4byte	0xd0
 1485 0734 44050000 		.4byte	.LLST36
 1486 0738 17       		.uleb128 0x17
 1487 0739 18000000 		.4byte	.LVL76
 1488 073d 57060000 		.4byte	0x657
 1489 0741 18       		.uleb128 0x18
 1490 0742 01       		.uleb128 0x1
 1491 0743 50       		.byte	0x50
 1492 0744 02       		.uleb128 0x2
 1493 0745 76       		.byte	0x76
 1494 0746 00       		.sleb128 0
 1495 0747 18       		.uleb128 0x18
 1496 0748 01       		.uleb128 0x1
 1497 0749 51       		.byte	0x51
 1498 074a 02       		.uleb128 0x2
 1499 074b 74       		.byte	0x74
 1500 074c 00       		.sleb128 0
 1501 074d 00       		.byte	0
 1502 074e 00       		.byte	0
 1503 074f 1E       		.uleb128 0x1e
 1504 0750 98040000 		.4byte	.LASF90
 1505 0754 01       		.byte	0x1
 1506 0755 62       		.byte	0x62
 1507 0756 D0000000 		.4byte	0xd0
 1508 075a 00000000 		.4byte	.LFB46
 1509 075e 1C000000 		.4byte	.LFE46-.LFB46
 1510 0762 01       		.uleb128 0x1
 1511 0763 9C       		.byte	0x9c
 1512 0764 97070000 		.4byte	0x797
 1513 0768 22       		.uleb128 0x22
 1514 0769 62050000 		.4byte	.LASF68
 1515 076d 01       		.byte	0x1
 1516 076e 64       		.byte	0x64
 1517 076f F4000000 		.4byte	0xf4
 1518 0773 6E050000 		.4byte	.LLST37
 1519 0777 22       		.uleb128 0x22
 1520 0778 46000000 		.4byte	.LASF89
 1521 077c 01       		.byte	0x1
 1522 077d 65       		.byte	0x65
 1523 077e D0000000 		.4byte	0xd0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 59


 1524 0782 B0050000 		.4byte	.LLST38
 1525 0786 17       		.uleb128 0x17
 1526 0787 0E000000 		.4byte	.LVL85
 1527 078b D4060000 		.4byte	0x6d4
 1528 078f 18       		.uleb128 0x18
 1529 0790 01       		.uleb128 0x1
 1530 0791 50       		.byte	0x50
 1531 0792 02       		.uleb128 0x2
 1532 0793 74       		.byte	0x74
 1533 0794 00       		.sleb128 0
 1534 0795 00       		.byte	0
 1535 0796 00       		.byte	0
 1536 0797 23       		.uleb128 0x23
 1537 0798 1C060000 		.4byte	.LASF95
 1538 079c 06       		.byte	0x6
 1539 079d D403     		.2byte	0x3d4
 1540 079f A3070000 		.4byte	0x7a3
 1541 07a3 1A       		.uleb128 0x1a
 1542 07a4 3A030000 		.4byte	0x33a
 1543 07a8 00       		.byte	0
 1544              		.section	.debug_abbrev,"",%progbits
 1545              	.Ldebug_abbrev0:
 1546 0000 01       		.uleb128 0x1
 1547 0001 11       		.uleb128 0x11
 1548 0002 01       		.byte	0x1
 1549 0003 25       		.uleb128 0x25
 1550 0004 0E       		.uleb128 0xe
 1551 0005 13       		.uleb128 0x13
 1552 0006 0B       		.uleb128 0xb
 1553 0007 03       		.uleb128 0x3
 1554 0008 0E       		.uleb128 0xe
 1555 0009 1B       		.uleb128 0x1b
 1556 000a 0E       		.uleb128 0xe
 1557 000b 55       		.uleb128 0x55
 1558 000c 17       		.uleb128 0x17
 1559 000d 11       		.uleb128 0x11
 1560 000e 01       		.uleb128 0x1
 1561 000f 10       		.uleb128 0x10
 1562 0010 17       		.uleb128 0x17
 1563 0011 00       		.byte	0
 1564 0012 00       		.byte	0
 1565 0013 02       		.uleb128 0x2
 1566 0014 24       		.uleb128 0x24
 1567 0015 00       		.byte	0
 1568 0016 0B       		.uleb128 0xb
 1569 0017 0B       		.uleb128 0xb
 1570 0018 3E       		.uleb128 0x3e
 1571 0019 0B       		.uleb128 0xb
 1572 001a 03       		.uleb128 0x3
 1573 001b 08       		.uleb128 0x8
 1574 001c 00       		.byte	0
 1575 001d 00       		.byte	0
 1576 001e 03       		.uleb128 0x3
 1577 001f 24       		.uleb128 0x24
 1578 0020 00       		.byte	0
 1579 0021 0B       		.uleb128 0xb
 1580 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 60


 1581 0023 3E       		.uleb128 0x3e
 1582 0024 0B       		.uleb128 0xb
 1583 0025 03       		.uleb128 0x3
 1584 0026 0E       		.uleb128 0xe
 1585 0027 00       		.byte	0
 1586 0028 00       		.byte	0
 1587 0029 04       		.uleb128 0x4
 1588 002a 16       		.uleb128 0x16
 1589 002b 00       		.byte	0
 1590 002c 03       		.uleb128 0x3
 1591 002d 0E       		.uleb128 0xe
 1592 002e 3A       		.uleb128 0x3a
 1593 002f 0B       		.uleb128 0xb
 1594 0030 3B       		.uleb128 0x3b
 1595 0031 0B       		.uleb128 0xb
 1596 0032 49       		.uleb128 0x49
 1597 0033 13       		.uleb128 0x13
 1598 0034 00       		.byte	0
 1599 0035 00       		.byte	0
 1600 0036 05       		.uleb128 0x5
 1601 0037 16       		.uleb128 0x16
 1602 0038 00       		.byte	0
 1603 0039 03       		.uleb128 0x3
 1604 003a 0E       		.uleb128 0xe
 1605 003b 3A       		.uleb128 0x3a
 1606 003c 0B       		.uleb128 0xb
 1607 003d 3B       		.uleb128 0x3b
 1608 003e 05       		.uleb128 0x5
 1609 003f 49       		.uleb128 0x49
 1610 0040 13       		.uleb128 0x13
 1611 0041 00       		.byte	0
 1612 0042 00       		.byte	0
 1613 0043 06       		.uleb128 0x6
 1614 0044 04       		.uleb128 0x4
 1615 0045 01       		.byte	0x1
 1616 0046 0B       		.uleb128 0xb
 1617 0047 0B       		.uleb128 0xb
 1618 0048 49       		.uleb128 0x49
 1619 0049 13       		.uleb128 0x13
 1620 004a 3A       		.uleb128 0x3a
 1621 004b 0B       		.uleb128 0xb
 1622 004c 3B       		.uleb128 0x3b
 1623 004d 0B       		.uleb128 0xb
 1624 004e 01       		.uleb128 0x1
 1625 004f 13       		.uleb128 0x13
 1626 0050 00       		.byte	0
 1627 0051 00       		.byte	0
 1628 0052 07       		.uleb128 0x7
 1629 0053 28       		.uleb128 0x28
 1630 0054 00       		.byte	0
 1631 0055 03       		.uleb128 0x3
 1632 0056 0E       		.uleb128 0xe
 1633 0057 1C       		.uleb128 0x1c
 1634 0058 0B       		.uleb128 0xb
 1635 0059 00       		.byte	0
 1636 005a 00       		.byte	0
 1637 005b 08       		.uleb128 0x8
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 61


 1638 005c 13       		.uleb128 0x13
 1639 005d 01       		.byte	0x1
 1640 005e 0B       		.uleb128 0xb
 1641 005f 0B       		.uleb128 0xb
 1642 0060 3A       		.uleb128 0x3a
 1643 0061 0B       		.uleb128 0xb
 1644 0062 3B       		.uleb128 0x3b
 1645 0063 0B       		.uleb128 0xb
 1646 0064 01       		.uleb128 0x1
 1647 0065 13       		.uleb128 0x13
 1648 0066 00       		.byte	0
 1649 0067 00       		.byte	0
 1650 0068 09       		.uleb128 0x9
 1651 0069 0D       		.uleb128 0xd
 1652 006a 00       		.byte	0
 1653 006b 03       		.uleb128 0x3
 1654 006c 0E       		.uleb128 0xe
 1655 006d 3A       		.uleb128 0x3a
 1656 006e 0B       		.uleb128 0xb
 1657 006f 3B       		.uleb128 0x3b
 1658 0070 0B       		.uleb128 0xb
 1659 0071 49       		.uleb128 0x49
 1660 0072 13       		.uleb128 0x13
 1661 0073 38       		.uleb128 0x38
 1662 0074 0B       		.uleb128 0xb
 1663 0075 00       		.byte	0
 1664 0076 00       		.byte	0
 1665 0077 0A       		.uleb128 0xa
 1666 0078 13       		.uleb128 0x13
 1667 0079 01       		.byte	0x1
 1668 007a 0B       		.uleb128 0xb
 1669 007b 0B       		.uleb128 0xb
 1670 007c 3A       		.uleb128 0x3a
 1671 007d 0B       		.uleb128 0xb
 1672 007e 3B       		.uleb128 0x3b
 1673 007f 05       		.uleb128 0x5
 1674 0080 01       		.uleb128 0x1
 1675 0081 13       		.uleb128 0x13
 1676 0082 00       		.byte	0
 1677 0083 00       		.byte	0
 1678 0084 0B       		.uleb128 0xb
 1679 0085 0D       		.uleb128 0xd
 1680 0086 00       		.byte	0
 1681 0087 03       		.uleb128 0x3
 1682 0088 08       		.uleb128 0x8
 1683 0089 3A       		.uleb128 0x3a
 1684 008a 0B       		.uleb128 0xb
 1685 008b 3B       		.uleb128 0x3b
 1686 008c 05       		.uleb128 0x5
 1687 008d 49       		.uleb128 0x49
 1688 008e 13       		.uleb128 0x13
 1689 008f 38       		.uleb128 0x38
 1690 0090 0B       		.uleb128 0xb
 1691 0091 00       		.byte	0
 1692 0092 00       		.byte	0
 1693 0093 0C       		.uleb128 0xc
 1694 0094 0D       		.uleb128 0xd
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 62


 1695 0095 00       		.byte	0
 1696 0096 03       		.uleb128 0x3
 1697 0097 0E       		.uleb128 0xe
 1698 0098 3A       		.uleb128 0x3a
 1699 0099 0B       		.uleb128 0xb
 1700 009a 3B       		.uleb128 0x3b
 1701 009b 05       		.uleb128 0x5
 1702 009c 49       		.uleb128 0x49
 1703 009d 13       		.uleb128 0x13
 1704 009e 38       		.uleb128 0x38
 1705 009f 0B       		.uleb128 0xb
 1706 00a0 00       		.byte	0
 1707 00a1 00       		.byte	0
 1708 00a2 0D       		.uleb128 0xd
 1709 00a3 01       		.uleb128 0x1
 1710 00a4 01       		.byte	0x1
 1711 00a5 49       		.uleb128 0x49
 1712 00a6 13       		.uleb128 0x13
 1713 00a7 01       		.uleb128 0x1
 1714 00a8 13       		.uleb128 0x13
 1715 00a9 00       		.byte	0
 1716 00aa 00       		.byte	0
 1717 00ab 0E       		.uleb128 0xe
 1718 00ac 21       		.uleb128 0x21
 1719 00ad 00       		.byte	0
 1720 00ae 49       		.uleb128 0x49
 1721 00af 13       		.uleb128 0x13
 1722 00b0 2F       		.uleb128 0x2f
 1723 00b1 0B       		.uleb128 0xb
 1724 00b2 00       		.byte	0
 1725 00b3 00       		.byte	0
 1726 00b4 0F       		.uleb128 0xf
 1727 00b5 0F       		.uleb128 0xf
 1728 00b6 00       		.byte	0
 1729 00b7 0B       		.uleb128 0xb
 1730 00b8 0B       		.uleb128 0xb
 1731 00b9 49       		.uleb128 0x49
 1732 00ba 13       		.uleb128 0x13
 1733 00bb 00       		.byte	0
 1734 00bc 00       		.byte	0
 1735 00bd 10       		.uleb128 0x10
 1736 00be 26       		.uleb128 0x26
 1737 00bf 00       		.byte	0
 1738 00c0 00       		.byte	0
 1739 00c1 00       		.byte	0
 1740 00c2 11       		.uleb128 0x11
 1741 00c3 0F       		.uleb128 0xf
 1742 00c4 00       		.byte	0
 1743 00c5 0B       		.uleb128 0xb
 1744 00c6 0B       		.uleb128 0xb
 1745 00c7 00       		.byte	0
 1746 00c8 00       		.byte	0
 1747 00c9 12       		.uleb128 0x12
 1748 00ca 2E       		.uleb128 0x2e
 1749 00cb 00       		.byte	0
 1750 00cc 3F       		.uleb128 0x3f
 1751 00cd 19       		.uleb128 0x19
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 63


 1752 00ce 03       		.uleb128 0x3
 1753 00cf 0E       		.uleb128 0xe
 1754 00d0 3A       		.uleb128 0x3a
 1755 00d1 0B       		.uleb128 0xb
 1756 00d2 3B       		.uleb128 0x3b
 1757 00d3 0B       		.uleb128 0xb
 1758 00d4 27       		.uleb128 0x27
 1759 00d5 19       		.uleb128 0x19
 1760 00d6 11       		.uleb128 0x11
 1761 00d7 01       		.uleb128 0x1
 1762 00d8 12       		.uleb128 0x12
 1763 00d9 06       		.uleb128 0x6
 1764 00da 40       		.uleb128 0x40
 1765 00db 18       		.uleb128 0x18
 1766 00dc 9742     		.uleb128 0x2117
 1767 00de 19       		.uleb128 0x19
 1768 00df 00       		.byte	0
 1769 00e0 00       		.byte	0
 1770 00e1 13       		.uleb128 0x13
 1771 00e2 2E       		.uleb128 0x2e
 1772 00e3 01       		.byte	0x1
 1773 00e4 3F       		.uleb128 0x3f
 1774 00e5 19       		.uleb128 0x19
 1775 00e6 03       		.uleb128 0x3
 1776 00e7 0E       		.uleb128 0xe
 1777 00e8 3A       		.uleb128 0x3a
 1778 00e9 0B       		.uleb128 0xb
 1779 00ea 3B       		.uleb128 0x3b
 1780 00eb 05       		.uleb128 0x5
 1781 00ec 27       		.uleb128 0x27
 1782 00ed 19       		.uleb128 0x19
 1783 00ee 11       		.uleb128 0x11
 1784 00ef 01       		.uleb128 0x1
 1785 00f0 12       		.uleb128 0x12
 1786 00f1 06       		.uleb128 0x6
 1787 00f2 40       		.uleb128 0x40
 1788 00f3 18       		.uleb128 0x18
 1789 00f4 9742     		.uleb128 0x2117
 1790 00f6 19       		.uleb128 0x19
 1791 00f7 01       		.uleb128 0x1
 1792 00f8 13       		.uleb128 0x13
 1793 00f9 00       		.byte	0
 1794 00fa 00       		.byte	0
 1795 00fb 14       		.uleb128 0x14
 1796 00fc 05       		.uleb128 0x5
 1797 00fd 00       		.byte	0
 1798 00fe 03       		.uleb128 0x3
 1799 00ff 0E       		.uleb128 0xe
 1800 0100 3A       		.uleb128 0x3a
 1801 0101 0B       		.uleb128 0xb
 1802 0102 3B       		.uleb128 0x3b
 1803 0103 05       		.uleb128 0x5
 1804 0104 49       		.uleb128 0x49
 1805 0105 13       		.uleb128 0x13
 1806 0106 02       		.uleb128 0x2
 1807 0107 18       		.uleb128 0x18
 1808 0108 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 64


 1809 0109 00       		.byte	0
 1810 010a 15       		.uleb128 0x15
 1811 010b 05       		.uleb128 0x5
 1812 010c 00       		.byte	0
 1813 010d 03       		.uleb128 0x3
 1814 010e 0E       		.uleb128 0xe
 1815 010f 3A       		.uleb128 0x3a
 1816 0110 0B       		.uleb128 0xb
 1817 0111 3B       		.uleb128 0x3b
 1818 0112 05       		.uleb128 0x5
 1819 0113 49       		.uleb128 0x49
 1820 0114 13       		.uleb128 0x13
 1821 0115 02       		.uleb128 0x2
 1822 0116 17       		.uleb128 0x17
 1823 0117 00       		.byte	0
 1824 0118 00       		.byte	0
 1825 0119 16       		.uleb128 0x16
 1826 011a 34       		.uleb128 0x34
 1827 011b 00       		.byte	0
 1828 011c 03       		.uleb128 0x3
 1829 011d 0E       		.uleb128 0xe
 1830 011e 3A       		.uleb128 0x3a
 1831 011f 0B       		.uleb128 0xb
 1832 0120 3B       		.uleb128 0x3b
 1833 0121 05       		.uleb128 0x5
 1834 0122 49       		.uleb128 0x49
 1835 0123 13       		.uleb128 0x13
 1836 0124 02       		.uleb128 0x2
 1837 0125 17       		.uleb128 0x17
 1838 0126 00       		.byte	0
 1839 0127 00       		.byte	0
 1840 0128 17       		.uleb128 0x17
 1841 0129 898201   		.uleb128 0x4109
 1842 012c 01       		.byte	0x1
 1843 012d 11       		.uleb128 0x11
 1844 012e 01       		.uleb128 0x1
 1845 012f 31       		.uleb128 0x31
 1846 0130 13       		.uleb128 0x13
 1847 0131 00       		.byte	0
 1848 0132 00       		.byte	0
 1849 0133 18       		.uleb128 0x18
 1850 0134 8A8201   		.uleb128 0x410a
 1851 0137 00       		.byte	0
 1852 0138 02       		.uleb128 0x2
 1853 0139 18       		.uleb128 0x18
 1854 013a 9142     		.uleb128 0x2111
 1855 013c 18       		.uleb128 0x18
 1856 013d 00       		.byte	0
 1857 013e 00       		.byte	0
 1858 013f 19       		.uleb128 0x19
 1859 0140 898201   		.uleb128 0x4109
 1860 0143 00       		.byte	0
 1861 0144 11       		.uleb128 0x11
 1862 0145 01       		.uleb128 0x1
 1863 0146 31       		.uleb128 0x31
 1864 0147 13       		.uleb128 0x13
 1865 0148 00       		.byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 65


 1866 0149 00       		.byte	0
 1867 014a 1A       		.uleb128 0x1a
 1868 014b 26       		.uleb128 0x26
 1869 014c 00       		.byte	0
 1870 014d 49       		.uleb128 0x49
 1871 014e 13       		.uleb128 0x13
 1872 014f 00       		.byte	0
 1873 0150 00       		.byte	0
 1874 0151 1B       		.uleb128 0x1b
 1875 0152 2E       		.uleb128 0x2e
 1876 0153 01       		.byte	0x1
 1877 0154 3F       		.uleb128 0x3f
 1878 0155 19       		.uleb128 0x19
 1879 0156 03       		.uleb128 0x3
 1880 0157 0E       		.uleb128 0xe
 1881 0158 3A       		.uleb128 0x3a
 1882 0159 0B       		.uleb128 0xb
 1883 015a 3B       		.uleb128 0x3b
 1884 015b 05       		.uleb128 0x5
 1885 015c 27       		.uleb128 0x27
 1886 015d 19       		.uleb128 0x19
 1887 015e 49       		.uleb128 0x49
 1888 015f 13       		.uleb128 0x13
 1889 0160 11       		.uleb128 0x11
 1890 0161 01       		.uleb128 0x1
 1891 0162 12       		.uleb128 0x12
 1892 0163 06       		.uleb128 0x6
 1893 0164 40       		.uleb128 0x40
 1894 0165 18       		.uleb128 0x18
 1895 0166 9742     		.uleb128 0x2117
 1896 0168 19       		.uleb128 0x19
 1897 0169 01       		.uleb128 0x1
 1898 016a 13       		.uleb128 0x13
 1899 016b 00       		.byte	0
 1900 016c 00       		.byte	0
 1901 016d 1C       		.uleb128 0x1c
 1902 016e 05       		.uleb128 0x5
 1903 016f 00       		.byte	0
 1904 0170 03       		.uleb128 0x3
 1905 0171 08       		.uleb128 0x8
 1906 0172 3A       		.uleb128 0x3a
 1907 0173 0B       		.uleb128 0xb
 1908 0174 3B       		.uleb128 0x3b
 1909 0175 05       		.uleb128 0x5
 1910 0176 49       		.uleb128 0x49
 1911 0177 13       		.uleb128 0x13
 1912 0178 02       		.uleb128 0x2
 1913 0179 17       		.uleb128 0x17
 1914 017a 00       		.byte	0
 1915 017b 00       		.byte	0
 1916 017c 1D       		.uleb128 0x1d
 1917 017d 34       		.uleb128 0x34
 1918 017e 00       		.byte	0
 1919 017f 03       		.uleb128 0x3
 1920 0180 0E       		.uleb128 0xe
 1921 0181 3A       		.uleb128 0x3a
 1922 0182 0B       		.uleb128 0xb
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 66


 1923 0183 3B       		.uleb128 0x3b
 1924 0184 05       		.uleb128 0x5
 1925 0185 49       		.uleb128 0x49
 1926 0186 13       		.uleb128 0x13
 1927 0187 02       		.uleb128 0x2
 1928 0188 18       		.uleb128 0x18
 1929 0189 00       		.byte	0
 1930 018a 00       		.byte	0
 1931 018b 1E       		.uleb128 0x1e
 1932 018c 2E       		.uleb128 0x2e
 1933 018d 01       		.byte	0x1
 1934 018e 3F       		.uleb128 0x3f
 1935 018f 19       		.uleb128 0x19
 1936 0190 03       		.uleb128 0x3
 1937 0191 0E       		.uleb128 0xe
 1938 0192 3A       		.uleb128 0x3a
 1939 0193 0B       		.uleb128 0xb
 1940 0194 3B       		.uleb128 0x3b
 1941 0195 0B       		.uleb128 0xb
 1942 0196 27       		.uleb128 0x27
 1943 0197 19       		.uleb128 0x19
 1944 0198 49       		.uleb128 0x49
 1945 0199 13       		.uleb128 0x13
 1946 019a 11       		.uleb128 0x11
 1947 019b 01       		.uleb128 0x1
 1948 019c 12       		.uleb128 0x12
 1949 019d 06       		.uleb128 0x6
 1950 019e 40       		.uleb128 0x40
 1951 019f 18       		.uleb128 0x18
 1952 01a0 9742     		.uleb128 0x2117
 1953 01a2 19       		.uleb128 0x19
 1954 01a3 01       		.uleb128 0x1
 1955 01a4 13       		.uleb128 0x13
 1956 01a5 00       		.byte	0
 1957 01a6 00       		.byte	0
 1958 01a7 1F       		.uleb128 0x1f
 1959 01a8 34       		.uleb128 0x34
 1960 01a9 00       		.byte	0
 1961 01aa 03       		.uleb128 0x3
 1962 01ab 0E       		.uleb128 0xe
 1963 01ac 3A       		.uleb128 0x3a
 1964 01ad 0B       		.uleb128 0xb
 1965 01ae 3B       		.uleb128 0x3b
 1966 01af 05       		.uleb128 0x5
 1967 01b0 49       		.uleb128 0x49
 1968 01b1 13       		.uleb128 0x13
 1969 01b2 1C       		.uleb128 0x1c
 1970 01b3 0B       		.uleb128 0xb
 1971 01b4 00       		.byte	0
 1972 01b5 00       		.byte	0
 1973 01b6 20       		.uleb128 0x20
 1974 01b7 898201   		.uleb128 0x4109
 1975 01ba 01       		.byte	0x1
 1976 01bb 11       		.uleb128 0x11
 1977 01bc 01       		.uleb128 0x1
 1978 01bd 31       		.uleb128 0x31
 1979 01be 13       		.uleb128 0x13
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 67


 1980 01bf 01       		.uleb128 0x1
 1981 01c0 13       		.uleb128 0x13
 1982 01c1 00       		.byte	0
 1983 01c2 00       		.byte	0
 1984 01c3 21       		.uleb128 0x21
 1985 01c4 05       		.uleb128 0x5
 1986 01c5 00       		.byte	0
 1987 01c6 03       		.uleb128 0x3
 1988 01c7 0E       		.uleb128 0xe
 1989 01c8 3A       		.uleb128 0x3a
 1990 01c9 0B       		.uleb128 0xb
 1991 01ca 3B       		.uleb128 0x3b
 1992 01cb 0B       		.uleb128 0xb
 1993 01cc 49       		.uleb128 0x49
 1994 01cd 13       		.uleb128 0x13
 1995 01ce 02       		.uleb128 0x2
 1996 01cf 17       		.uleb128 0x17
 1997 01d0 00       		.byte	0
 1998 01d1 00       		.byte	0
 1999 01d2 22       		.uleb128 0x22
 2000 01d3 34       		.uleb128 0x34
 2001 01d4 00       		.byte	0
 2002 01d5 03       		.uleb128 0x3
 2003 01d6 0E       		.uleb128 0xe
 2004 01d7 3A       		.uleb128 0x3a
 2005 01d8 0B       		.uleb128 0xb
 2006 01d9 3B       		.uleb128 0x3b
 2007 01da 0B       		.uleb128 0xb
 2008 01db 49       		.uleb128 0x49
 2009 01dc 13       		.uleb128 0x13
 2010 01dd 02       		.uleb128 0x2
 2011 01de 17       		.uleb128 0x17
 2012 01df 00       		.byte	0
 2013 01e0 00       		.byte	0
 2014 01e1 23       		.uleb128 0x23
 2015 01e2 34       		.uleb128 0x34
 2016 01e3 00       		.byte	0
 2017 01e4 03       		.uleb128 0x3
 2018 01e5 0E       		.uleb128 0xe
 2019 01e6 3A       		.uleb128 0x3a
 2020 01e7 0B       		.uleb128 0xb
 2021 01e8 3B       		.uleb128 0x3b
 2022 01e9 05       		.uleb128 0x5
 2023 01ea 49       		.uleb128 0x49
 2024 01eb 13       		.uleb128 0x13
 2025 01ec 3F       		.uleb128 0x3f
 2026 01ed 19       		.uleb128 0x19
 2027 01ee 3C       		.uleb128 0x3c
 2028 01ef 19       		.uleb128 0x19
 2029 01f0 00       		.byte	0
 2030 01f1 00       		.byte	0
 2031 01f2 00       		.byte	0
 2032              		.section	.debug_loc,"",%progbits
 2033              	.Ldebug_loc0:
 2034              	.LLST0:
 2035 0000 00000000 		.4byte	.LVL0
 2036 0004 04000000 		.4byte	.LVL1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 68


 2037 0008 0100     		.2byte	0x1
 2038 000a 51       		.byte	0x51
 2039 000b 04000000 		.4byte	.LVL1
 2040 000f 1E000000 		.4byte	.LFE54
 2041 0013 0400     		.2byte	0x4
 2042 0015 F3       		.byte	0xf3
 2043 0016 01       		.uleb128 0x1
 2044 0017 51       		.byte	0x51
 2045 0018 9F       		.byte	0x9f
 2046 0019 00000000 		.4byte	0
 2047 001d 00000000 		.4byte	0
 2048              	.LLST1:
 2049 0021 00000000 		.4byte	.LVL0
 2050 0025 18000000 		.4byte	.LVL2
 2051 0029 0100     		.2byte	0x1
 2052 002b 52       		.byte	0x52
 2053 002c 18000000 		.4byte	.LVL2
 2054 0030 1E000000 		.4byte	.LFE54
 2055 0034 0400     		.2byte	0x4
 2056 0036 F3       		.byte	0xf3
 2057 0037 01       		.uleb128 0x1
 2058 0038 52       		.byte	0x52
 2059 0039 9F       		.byte	0x9f
 2060 003a 00000000 		.4byte	0
 2061 003e 00000000 		.4byte	0
 2062              	.LLST2:
 2063 0042 00000000 		.4byte	.LVL3
 2064 0046 0A000000 		.4byte	.LVL5
 2065 004a 0100     		.2byte	0x1
 2066 004c 50       		.byte	0x50
 2067 004d 0A000000 		.4byte	.LVL5
 2068 0051 1C000000 		.4byte	.LVL11
 2069 0055 0100     		.2byte	0x1
 2070 0057 56       		.byte	0x56
 2071 0058 1C000000 		.4byte	.LVL11
 2072 005c 1E000000 		.4byte	.LFE53
 2073 0060 0400     		.2byte	0x4
 2074 0062 F3       		.byte	0xf3
 2075 0063 01       		.uleb128 0x1
 2076 0064 50       		.byte	0x50
 2077 0065 9F       		.byte	0x9f
 2078 0066 00000000 		.4byte	0
 2079 006a 00000000 		.4byte	0
 2080              	.LLST3:
 2081 006e 00000000 		.4byte	.LVL3
 2082 0072 0A000000 		.4byte	.LVL5
 2083 0076 0100     		.2byte	0x1
 2084 0078 51       		.byte	0x51
 2085 0079 0A000000 		.4byte	.LVL5
 2086 007d 1C000000 		.4byte	.LVL10
 2087 0081 0100     		.2byte	0x1
 2088 0083 55       		.byte	0x55
 2089 0084 1C000000 		.4byte	.LVL10
 2090 0088 1E000000 		.4byte	.LFE53
 2091 008c 0400     		.2byte	0x4
 2092 008e F3       		.byte	0xf3
 2093 008f 01       		.uleb128 0x1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 69


 2094 0090 51       		.byte	0x51
 2095 0091 9F       		.byte	0x9f
 2096 0092 00000000 		.4byte	0
 2097 0096 00000000 		.4byte	0
 2098              	.LLST4:
 2099 009a 06000000 		.4byte	.LVL4
 2100 009e 0A000000 		.4byte	.LVL5
 2101 00a2 0200     		.2byte	0x2
 2102 00a4 31       		.byte	0x31
 2103 00a5 9F       		.byte	0x9f
 2104 00a6 0A000000 		.4byte	.LVL5
 2105 00aa 16000000 		.4byte	.LVL7
 2106 00ae 0100     		.2byte	0x1
 2107 00b0 54       		.byte	0x54
 2108 00b1 16000000 		.4byte	.LVL7
 2109 00b5 18000000 		.4byte	.LVL8
 2110 00b9 0100     		.2byte	0x1
 2111 00bb 53       		.byte	0x53
 2112 00bc 18000000 		.4byte	.LVL8
 2113 00c0 1C000000 		.4byte	.LVL9
 2114 00c4 0100     		.2byte	0x1
 2115 00c6 54       		.byte	0x54
 2116 00c7 1C000000 		.4byte	.LVL9
 2117 00cb 1E000000 		.4byte	.LFE53
 2118 00cf 0300     		.2byte	0x3
 2119 00d1 73       		.byte	0x73
 2120 00d2 7F       		.sleb128 -1
 2121 00d3 9F       		.byte	0x9f
 2122 00d4 00000000 		.4byte	0
 2123 00d8 00000000 		.4byte	0
 2124              	.LLST5:
 2125 00dc 00000000 		.4byte	.LVL12
 2126 00e0 04000000 		.4byte	.LVL14
 2127 00e4 0100     		.2byte	0x1
 2128 00e6 50       		.byte	0x50
 2129 00e7 04000000 		.4byte	.LVL14
 2130 00eb 20000000 		.4byte	.LFE52
 2131 00ef 0400     		.2byte	0x4
 2132 00f1 F3       		.byte	0xf3
 2133 00f2 01       		.uleb128 0x1
 2134 00f3 50       		.byte	0x50
 2135 00f4 9F       		.byte	0x9f
 2136 00f5 00000000 		.4byte	0
 2137 00f9 00000000 		.4byte	0
 2138              	.LLST6:
 2139 00fd 00000000 		.4byte	.LVL12
 2140 0101 0C000000 		.4byte	.LVL16
 2141 0105 0100     		.2byte	0x1
 2142 0107 51       		.byte	0x51
 2143 0108 0C000000 		.4byte	.LVL16
 2144 010c 20000000 		.4byte	.LFE52
 2145 0110 0400     		.2byte	0x4
 2146 0112 F3       		.byte	0xf3
 2147 0113 01       		.uleb128 0x1
 2148 0114 51       		.byte	0x51
 2149 0115 9F       		.byte	0x9f
 2150 0116 00000000 		.4byte	0
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 70


 2151 011a 00000000 		.4byte	0
 2152              	.LLST7:
 2153 011e 02000000 		.4byte	.LVL13
 2154 0122 08000000 		.4byte	.LVL15
 2155 0126 0200     		.2byte	0x2
 2156 0128 30       		.byte	0x30
 2157 0129 9F       		.byte	0x9f
 2158 012a 08000000 		.4byte	.LVL15
 2159 012e 14000000 		.4byte	.LVL17
 2160 0132 0200     		.2byte	0x2
 2161 0134 73       		.byte	0x73
 2162 0135 08       		.sleb128 8
 2163 0136 14000000 		.4byte	.LVL17
 2164 013a 19000000 		.4byte	.LVL18-1
 2165 013e 0100     		.2byte	0x1
 2166 0140 50       		.byte	0x50
 2167 0141 00000000 		.4byte	0
 2168 0145 00000000 		.4byte	0
 2169              	.LLST8:
 2170 0149 08000000 		.4byte	.LVL15
 2171 014d 19000000 		.4byte	.LVL18-1
 2172 0151 0100     		.2byte	0x1
 2173 0153 53       		.byte	0x53
 2174 0154 00000000 		.4byte	0
 2175 0158 00000000 		.4byte	0
 2176              	.LLST9:
 2177 015c 00000000 		.4byte	.LVL19
 2178 0160 0E000000 		.4byte	.LVL23
 2179 0164 0100     		.2byte	0x1
 2180 0166 50       		.byte	0x50
 2181 0167 0E000000 		.4byte	.LVL23
 2182 016b 1E000000 		.4byte	.LVL28
 2183 016f 0100     		.2byte	0x1
 2184 0171 55       		.byte	0x55
 2185 0172 1E000000 		.4byte	.LVL28
 2186 0176 24000000 		.4byte	.LFE51
 2187 017a 0400     		.2byte	0x4
 2188 017c F3       		.byte	0xf3
 2189 017d 01       		.uleb128 0x1
 2190 017e 50       		.byte	0x50
 2191 017f 9F       		.byte	0x9f
 2192 0180 00000000 		.4byte	0
 2193 0184 00000000 		.4byte	0
 2194              	.LLST10:
 2195 0188 0C000000 		.4byte	.LVL22
 2196 018c 0E000000 		.4byte	.LVL23
 2197 0190 0100     		.2byte	0x1
 2198 0192 53       		.byte	0x53
 2199 0193 0E000000 		.4byte	.LVL23
 2200 0197 18000000 		.4byte	.LVL25
 2201 019b 0100     		.2byte	0x1
 2202 019d 54       		.byte	0x54
 2203 019e 18000000 		.4byte	.LVL25
 2204 01a2 1A000000 		.4byte	.LVL26
 2205 01a6 0100     		.2byte	0x1
 2206 01a8 53       		.byte	0x53
 2207 01a9 1A000000 		.4byte	.LVL26
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 71


 2208 01ad 1E000000 		.4byte	.LVL27
 2209 01b1 0100     		.2byte	0x1
 2210 01b3 54       		.byte	0x54
 2211 01b4 1E000000 		.4byte	.LVL27
 2212 01b8 24000000 		.4byte	.LFE51
 2213 01bc 0300     		.2byte	0x3
 2214 01be 73       		.byte	0x73
 2215 01bf 7F       		.sleb128 -1
 2216 01c0 9F       		.byte	0x9f
 2217 01c1 00000000 		.4byte	0
 2218 01c5 00000000 		.4byte	0
 2219              	.LLST11:
 2220 01c9 0C000000 		.4byte	.LVL22
 2221 01cd 0E000000 		.4byte	.LVL23
 2222 01d1 0100     		.2byte	0x1
 2223 01d3 53       		.byte	0x53
 2224 01d4 00000000 		.4byte	0
 2225 01d8 00000000 		.4byte	0
 2226              	.LLST12:
 2227 01dc 0A000000 		.4byte	.LVL21
 2228 01e0 0C000000 		.4byte	.LVL22
 2229 01e4 0100     		.2byte	0x1
 2230 01e6 53       		.byte	0x53
 2231 01e7 00000000 		.4byte	0
 2232 01eb 00000000 		.4byte	0
 2233              	.LLST13:
 2234 01ef 02000000 		.4byte	.LVL29
 2235 01f3 06000000 		.4byte	.LVL30
 2236 01f7 0200     		.2byte	0x2
 2237 01f9 32       		.byte	0x32
 2238 01fa 9F       		.byte	0x9f
 2239 01fb 06000000 		.4byte	.LVL30
 2240 01ff 0E000000 		.4byte	.LVL32
 2241 0203 0100     		.2byte	0x1
 2242 0205 54       		.byte	0x54
 2243 0206 0E000000 		.4byte	.LVL32
 2244 020a 10000000 		.4byte	.LVL33
 2245 020e 0100     		.2byte	0x1
 2246 0210 53       		.byte	0x53
 2247 0211 10000000 		.4byte	.LVL33
 2248 0215 14000000 		.4byte	.LVL34
 2249 0219 0100     		.2byte	0x1
 2250 021b 54       		.byte	0x54
 2251 021c 14000000 		.4byte	.LVL34
 2252 0220 16000000 		.4byte	.LFE50
 2253 0224 0300     		.2byte	0x3
 2254 0226 73       		.byte	0x73
 2255 0227 7F       		.sleb128 -1
 2256 0228 9F       		.byte	0x9f
 2257 0229 00000000 		.4byte	0
 2258 022d 00000000 		.4byte	0
 2259              	.LLST14:
 2260 0231 00000000 		.4byte	.LVL35
 2261 0235 02000000 		.4byte	.LVL36
 2262 0239 0100     		.2byte	0x1
 2263 023b 50       		.byte	0x50
 2264 023c 02000000 		.4byte	.LVL36
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 72


 2265 0240 12000000 		.4byte	.LFE55
 2266 0244 0400     		.2byte	0x4
 2267 0246 F3       		.byte	0xf3
 2268 0247 01       		.uleb128 0x1
 2269 0248 50       		.byte	0x50
 2270 0249 9F       		.byte	0x9f
 2271 024a 00000000 		.4byte	0
 2272 024e 00000000 		.4byte	0
 2273              	.LLST15:
 2274 0252 00000000 		.4byte	.LVL35
 2275 0256 0C000000 		.4byte	.LVL39
 2276 025a 0100     		.2byte	0x1
 2277 025c 51       		.byte	0x51
 2278 025d 0C000000 		.4byte	.LVL39
 2279 0261 12000000 		.4byte	.LFE55
 2280 0265 0400     		.2byte	0x4
 2281 0267 F3       		.byte	0xf3
 2282 0268 01       		.uleb128 0x1
 2283 0269 51       		.byte	0x51
 2284 026a 9F       		.byte	0x9f
 2285 026b 00000000 		.4byte	0
 2286 026f 00000000 		.4byte	0
 2287              	.LLST16:
 2288 0273 00000000 		.4byte	.LVL35
 2289 0277 0A000000 		.4byte	.LVL38
 2290 027b 0100     		.2byte	0x1
 2291 027d 52       		.byte	0x52
 2292 027e 0A000000 		.4byte	.LVL38
 2293 0282 12000000 		.4byte	.LFE55
 2294 0286 0400     		.2byte	0x4
 2295 0288 F3       		.byte	0xf3
 2296 0289 01       		.uleb128 0x1
 2297 028a 52       		.byte	0x52
 2298 028b 9F       		.byte	0x9f
 2299 028c 00000000 		.4byte	0
 2300 0290 00000000 		.4byte	0
 2301              	.LLST17:
 2302 0294 00000000 		.4byte	.LVL35
 2303 0298 06000000 		.4byte	.LVL37
 2304 029c 0100     		.2byte	0x1
 2305 029e 53       		.byte	0x53
 2306 029f 06000000 		.4byte	.LVL37
 2307 02a3 12000000 		.4byte	.LFE55
 2308 02a7 0400     		.2byte	0x4
 2309 02a9 F3       		.byte	0xf3
 2310 02aa 01       		.uleb128 0x1
 2311 02ab 53       		.byte	0x53
 2312 02ac 9F       		.byte	0x9f
 2313 02ad 00000000 		.4byte	0
 2314 02b1 00000000 		.4byte	0
 2315              	.LLST18:
 2316 02b5 00000000 		.4byte	.LVL41
 2317 02b9 12000000 		.4byte	.LVL43
 2318 02bd 0100     		.2byte	0x1
 2319 02bf 50       		.byte	0x50
 2320 02c0 12000000 		.4byte	.LVL43
 2321 02c4 9A000000 		.4byte	.LVL62
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 73


 2322 02c8 0100     		.2byte	0x1
 2323 02ca 57       		.byte	0x57
 2324 02cb 9A000000 		.4byte	.LVL62
 2325 02cf A0000000 		.4byte	.LFE49
 2326 02d3 0400     		.2byte	0x4
 2327 02d5 F3       		.byte	0xf3
 2328 02d6 01       		.uleb128 0x1
 2329 02d7 50       		.byte	0x50
 2330 02d8 9F       		.byte	0x9f
 2331 02d9 00000000 		.4byte	0
 2332 02dd 00000000 		.4byte	0
 2333              	.LLST19:
 2334 02e1 00000000 		.4byte	.LVL41
 2335 02e5 12000000 		.4byte	.LVL43
 2336 02e9 0100     		.2byte	0x1
 2337 02eb 51       		.byte	0x51
 2338 02ec 12000000 		.4byte	.LVL43
 2339 02f0 9A000000 		.4byte	.LVL61
 2340 02f4 0100     		.2byte	0x1
 2341 02f6 56       		.byte	0x56
 2342 02f7 9A000000 		.4byte	.LVL61
 2343 02fb A0000000 		.4byte	.LFE49
 2344 02ff 0400     		.2byte	0x4
 2345 0301 F3       		.byte	0xf3
 2346 0302 01       		.uleb128 0x1
 2347 0303 51       		.byte	0x51
 2348 0304 9F       		.byte	0x9f
 2349 0305 00000000 		.4byte	0
 2350 0309 00000000 		.4byte	0
 2351              	.LLST20:
 2352 030d 00000000 		.4byte	.LVL41
 2353 0311 12000000 		.4byte	.LVL43
 2354 0315 0100     		.2byte	0x1
 2355 0317 52       		.byte	0x52
 2356 0318 12000000 		.4byte	.LVL43
 2357 031c A0000000 		.4byte	.LFE49
 2358 0320 0200     		.2byte	0x2
 2359 0322 91       		.byte	0x91
 2360 0323 64       		.sleb128 -28
 2361 0324 00000000 		.4byte	0
 2362 0328 00000000 		.4byte	0
 2363              	.LLST21:
 2364 032c 20000000 		.4byte	.LVL44
 2365 0330 2A000000 		.4byte	.LVL45
 2366 0334 0200     		.2byte	0x2
 2367 0336 31       		.byte	0x31
 2368 0337 9F       		.byte	0x9f
 2369 0338 2C000000 		.4byte	.LVL46
 2370 033c 2E000000 		.4byte	.LVL47
 2371 0340 0200     		.2byte	0x2
 2372 0342 30       		.byte	0x30
 2373 0343 9F       		.byte	0x9f
 2374 0344 2E000000 		.4byte	.LVL47
 2375 0348 3E000000 		.4byte	.LVL49
 2376 034c 0100     		.2byte	0x1
 2377 034e 52       		.byte	0x52
 2378 034f 56000000 		.4byte	.LVL51
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 74


 2379 0353 6A000000 		.4byte	.LVL53
 2380 0357 0100     		.2byte	0x1
 2381 0359 52       		.byte	0x52
 2382 035a 00000000 		.4byte	0
 2383 035e 00000000 		.4byte	0
 2384              	.LLST22:
 2385 0362 20000000 		.4byte	.LVL44
 2386 0366 2A000000 		.4byte	.LVL45
 2387 036a 0100     		.2byte	0x1
 2388 036c 53       		.byte	0x53
 2389 036d 2C000000 		.4byte	.LVL46
 2390 0371 3A000000 		.4byte	.LVL48
 2391 0375 0100     		.2byte	0x1
 2392 0377 53       		.byte	0x53
 2393 0378 56000000 		.4byte	.LVL51
 2394 037c 68000000 		.4byte	.LVL52
 2395 0380 0100     		.2byte	0x1
 2396 0382 53       		.byte	0x53
 2397 0383 00000000 		.4byte	0
 2398 0387 00000000 		.4byte	0
 2399              	.LLST23:
 2400 038b 0E000000 		.4byte	.LVL42
 2401 038f 12000000 		.4byte	.LVL43
 2402 0393 0200     		.2byte	0x2
 2403 0395 31       		.byte	0x31
 2404 0396 9F       		.byte	0x9f
 2405 0397 12000000 		.4byte	.LVL43
 2406 039b 90000000 		.4byte	.LVL58
 2407 039f 0100     		.2byte	0x1
 2408 03a1 54       		.byte	0x54
 2409 03a2 90000000 		.4byte	.LVL58
 2410 03a6 92000000 		.4byte	.LVL59
 2411 03aa 0100     		.2byte	0x1
 2412 03ac 53       		.byte	0x53
 2413 03ad 92000000 		.4byte	.LVL59
 2414 03b1 9A000000 		.4byte	.LVL60
 2415 03b5 0100     		.2byte	0x1
 2416 03b7 54       		.byte	0x54
 2417 03b8 9A000000 		.4byte	.LVL60
 2418 03bc A0000000 		.4byte	.LFE49
 2419 03c0 0300     		.2byte	0x3
 2420 03c2 73       		.byte	0x73
 2421 03c3 7F       		.sleb128 -1
 2422 03c4 9F       		.byte	0x9f
 2423 03c5 00000000 		.4byte	0
 2424 03c9 00000000 		.4byte	0
 2425              	.LLST24:
 2426 03cd 7A000000 		.4byte	.LVL55
 2427 03d1 8E000000 		.4byte	.LVL57
 2428 03d5 0200     		.2byte	0x2
 2429 03d7 31       		.byte	0x31
 2430 03d8 9F       		.byte	0x9f
 2431 03d9 00000000 		.4byte	0
 2432 03dd 00000000 		.4byte	0
 2433              	.LLST25:
 2434 03e1 72000000 		.4byte	.LVL54
 2435 03e5 81000000 		.4byte	.LVL56-1
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 75


 2436 03e9 0100     		.2byte	0x1
 2437 03eb 51       		.byte	0x51
 2438 03ec 82000000 		.4byte	.LVL56
 2439 03f0 8E000000 		.4byte	.LVL57
 2440 03f4 0100     		.2byte	0x1
 2441 03f6 50       		.byte	0x50
 2442 03f7 00000000 		.4byte	0
 2443 03fb 00000000 		.4byte	0
 2444              	.LLST26:
 2445 03ff 00000000 		.4byte	.LVL63
 2446 0403 04000000 		.4byte	.LVL65
 2447 0407 0100     		.2byte	0x1
 2448 0409 50       		.byte	0x50
 2449 040a 04000000 		.4byte	.LVL65
 2450 040e 24000000 		.4byte	.LFE48
 2451 0412 0400     		.2byte	0x4
 2452 0414 F3       		.byte	0xf3
 2453 0415 01       		.uleb128 0x1
 2454 0416 50       		.byte	0x50
 2455 0417 9F       		.byte	0x9f
 2456 0418 00000000 		.4byte	0
 2457 041c 00000000 		.4byte	0
 2458              	.LLST27:
 2459 0420 00000000 		.4byte	.LVL63
 2460 0424 10000000 		.4byte	.LVL68
 2461 0428 0100     		.2byte	0x1
 2462 042a 51       		.byte	0x51
 2463 042b 10000000 		.4byte	.LVL68
 2464 042f 24000000 		.4byte	.LFE48
 2465 0433 0400     		.2byte	0x4
 2466 0435 F3       		.byte	0xf3
 2467 0436 01       		.uleb128 0x1
 2468 0437 51       		.byte	0x51
 2469 0438 9F       		.byte	0x9f
 2470 0439 00000000 		.4byte	0
 2471 043d 00000000 		.4byte	0
 2472              	.LLST28:
 2473 0441 02000000 		.4byte	.LVL64
 2474 0445 1C000000 		.4byte	.LVL70
 2475 0449 0200     		.2byte	0x2
 2476 044b 30       		.byte	0x30
 2477 044c 9F       		.byte	0x9f
 2478 044d 1C000000 		.4byte	.LVL70
 2479 0451 24000000 		.4byte	.LFE48
 2480 0455 0100     		.2byte	0x1
 2481 0457 50       		.byte	0x50
 2482 0458 00000000 		.4byte	0
 2483 045c 00000000 		.4byte	0
 2484              	.LLST29:
 2485 0460 02000000 		.4byte	.LVL64
 2486 0464 0A000000 		.4byte	.LVL67
 2487 0468 0200     		.2byte	0x2
 2488 046a 30       		.byte	0x30
 2489 046b 9F       		.byte	0x9f
 2490 046c 0A000000 		.4byte	.LVL67
 2491 0470 16000000 		.4byte	.LVL69
 2492 0474 0200     		.2byte	0x2
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 76


 2493 0476 73       		.byte	0x73
 2494 0477 08       		.sleb128 8
 2495 0478 16000000 		.4byte	.LVL69
 2496 047c 1B000000 		.4byte	.LVL70-1
 2497 0480 0100     		.2byte	0x1
 2498 0482 51       		.byte	0x51
 2499 0483 00000000 		.4byte	0
 2500 0487 00000000 		.4byte	0
 2501              	.LLST30:
 2502 048b 08000000 		.4byte	.LVL66
 2503 048f 1B000000 		.4byte	.LVL70-1
 2504 0493 0100     		.2byte	0x1
 2505 0495 53       		.byte	0x53
 2506 0496 00000000 		.4byte	0
 2507 049a 00000000 		.4byte	0
 2508              	.LLST31:
 2509 049e 0A000000 		.4byte	.LVL67
 2510 04a2 1B000000 		.4byte	.LVL70-1
 2511 04a6 0100     		.2byte	0x1
 2512 04a8 50       		.byte	0x50
 2513 04a9 00000000 		.4byte	0
 2514 04ad 00000000 		.4byte	0
 2515              	.LLST32:
 2516 04b1 00000000 		.4byte	.LVL71
 2517 04b5 10000000 		.4byte	.LVL75
 2518 04b9 0100     		.2byte	0x1
 2519 04bb 50       		.byte	0x50
 2520 04bc 10000000 		.4byte	.LVL75
 2521 04c0 24000000 		.4byte	.LVL82
 2522 04c4 0100     		.2byte	0x1
 2523 04c6 56       		.byte	0x56
 2524 04c7 24000000 		.4byte	.LVL82
 2525 04cb 2C000000 		.4byte	.LFE47
 2526 04cf 0400     		.2byte	0x4
 2527 04d1 F3       		.byte	0xf3
 2528 04d2 01       		.uleb128 0x1
 2529 04d3 50       		.byte	0x50
 2530 04d4 9F       		.byte	0x9f
 2531 04d5 00000000 		.4byte	0
 2532 04d9 00000000 		.4byte	0
 2533              	.LLST33:
 2534 04dd 0C000000 		.4byte	.LVL74
 2535 04e1 10000000 		.4byte	.LVL75
 2536 04e5 0100     		.2byte	0x1
 2537 04e7 53       		.byte	0x53
 2538 04e8 10000000 		.4byte	.LVL75
 2539 04ec 1C000000 		.4byte	.LVL78
 2540 04f0 0100     		.2byte	0x1
 2541 04f2 54       		.byte	0x54
 2542 04f3 1C000000 		.4byte	.LVL78
 2543 04f7 1E000000 		.4byte	.LVL79
 2544 04fb 0100     		.2byte	0x1
 2545 04fd 53       		.byte	0x53
 2546 04fe 1E000000 		.4byte	.LVL79
 2547 0502 24000000 		.4byte	.LVL80
 2548 0506 0100     		.2byte	0x1
 2549 0508 54       		.byte	0x54
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 77


 2550 0509 24000000 		.4byte	.LVL80
 2551 050d 2C000000 		.4byte	.LFE47
 2552 0511 0300     		.2byte	0x3
 2553 0513 73       		.byte	0x73
 2554 0514 7F       		.sleb128 -1
 2555 0515 9F       		.byte	0x9f
 2556 0516 00000000 		.4byte	0
 2557 051a 00000000 		.4byte	0
 2558              	.LLST34:
 2559 051e 0C000000 		.4byte	.LVL74
 2560 0522 10000000 		.4byte	.LVL75
 2561 0526 0100     		.2byte	0x1
 2562 0528 53       		.byte	0x53
 2563 0529 00000000 		.4byte	0
 2564 052d 00000000 		.4byte	0
 2565              	.LLST35:
 2566 0531 0A000000 		.4byte	.LVL73
 2567 0535 0C000000 		.4byte	.LVL74
 2568 0539 0100     		.2byte	0x1
 2569 053b 53       		.byte	0x53
 2570 053c 00000000 		.4byte	0
 2571 0540 00000000 		.4byte	0
 2572              	.LLST36:
 2573 0544 04000000 		.4byte	.LVL72
 2574 0548 10000000 		.4byte	.LVL75
 2575 054c 0200     		.2byte	0x2
 2576 054e 30       		.byte	0x30
 2577 054f 9F       		.byte	0x9f
 2578 0550 10000000 		.4byte	.LVL75
 2579 0554 24000000 		.4byte	.LVL81
 2580 0558 0100     		.2byte	0x1
 2581 055a 55       		.byte	0x55
 2582 055b 24000000 		.4byte	.LVL81
 2583 055f 2C000000 		.4byte	.LFE47
 2584 0563 0100     		.2byte	0x1
 2585 0565 50       		.byte	0x50
 2586 0566 00000000 		.4byte	0
 2587 056a 00000000 		.4byte	0
 2588              	.LLST37:
 2589 056e 02000000 		.4byte	.LVL83
 2590 0572 08000000 		.4byte	.LVL84
 2591 0576 0200     		.2byte	0x2
 2592 0578 32       		.byte	0x32
 2593 0579 9F       		.byte	0x9f
 2594 057a 08000000 		.4byte	.LVL84
 2595 057e 12000000 		.4byte	.LVL87
 2596 0582 0100     		.2byte	0x1
 2597 0584 54       		.byte	0x54
 2598 0585 12000000 		.4byte	.LVL87
 2599 0589 14000000 		.4byte	.LVL88
 2600 058d 0100     		.2byte	0x1
 2601 058f 53       		.byte	0x53
 2602 0590 14000000 		.4byte	.LVL88
 2603 0594 1A000000 		.4byte	.LVL89
 2604 0598 0100     		.2byte	0x1
 2605 059a 54       		.byte	0x54
 2606 059b 1A000000 		.4byte	.LVL89
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 78


 2607 059f 1C000000 		.4byte	.LFE46
 2608 05a3 0300     		.2byte	0x3
 2609 05a5 73       		.byte	0x73
 2610 05a6 7F       		.sleb128 -1
 2611 05a7 9F       		.byte	0x9f
 2612 05a8 00000000 		.4byte	0
 2613 05ac 00000000 		.4byte	0
 2614              	.LLST38:
 2615 05b0 02000000 		.4byte	.LVL83
 2616 05b4 08000000 		.4byte	.LVL84
 2617 05b8 0200     		.2byte	0x2
 2618 05ba 30       		.byte	0x30
 2619 05bb 9F       		.byte	0x9f
 2620 05bc 08000000 		.4byte	.LVL84
 2621 05c0 1A000000 		.4byte	.LVL90
 2622 05c4 0100     		.2byte	0x1
 2623 05c6 55       		.byte	0x55
 2624 05c7 1A000000 		.4byte	.LVL90
 2625 05cb 1C000000 		.4byte	.LFE46
 2626 05cf 0100     		.2byte	0x1
 2627 05d1 50       		.byte	0x50
 2628 05d2 00000000 		.4byte	0
 2629 05d6 00000000 		.4byte	0
 2630              		.section	.debug_aranges,"",%progbits
 2631 0000 6C000000 		.4byte	0x6c
 2632 0004 0200     		.2byte	0x2
 2633 0006 00000000 		.4byte	.Ldebug_info0
 2634 000a 04       		.byte	0x4
 2635 000b 00       		.byte	0
 2636 000c 0000     		.2byte	0
 2637 000e 0000     		.2byte	0
 2638 0010 00000000 		.4byte	.LFB45
 2639 0014 02000000 		.4byte	.LFE45-.LFB45
 2640 0018 00000000 		.4byte	.LFB54
 2641 001c 1E000000 		.4byte	.LFE54-.LFB54
 2642 0020 00000000 		.4byte	.LFB53
 2643 0024 1E000000 		.4byte	.LFE53-.LFB53
 2644 0028 00000000 		.4byte	.LFB52
 2645 002c 20000000 		.4byte	.LFE52-.LFB52
 2646 0030 00000000 		.4byte	.LFB51
 2647 0034 24000000 		.4byte	.LFE51-.LFB51
 2648 0038 00000000 		.4byte	.LFB50
 2649 003c 16000000 		.4byte	.LFE50-.LFB50
 2650 0040 00000000 		.4byte	.LFB55
 2651 0044 12000000 		.4byte	.LFE55-.LFB55
 2652 0048 00000000 		.4byte	.LFB49
 2653 004c A0000000 		.4byte	.LFE49-.LFB49
 2654 0050 00000000 		.4byte	.LFB48
 2655 0054 24000000 		.4byte	.LFE48-.LFB48
 2656 0058 00000000 		.4byte	.LFB47
 2657 005c 2C000000 		.4byte	.LFE47-.LFB47
 2658 0060 00000000 		.4byte	.LFB46
 2659 0064 1C000000 		.4byte	.LFE46-.LFB46
 2660 0068 00000000 		.4byte	0
 2661 006c 00000000 		.4byte	0
 2662              		.section	.debug_ranges,"",%progbits
 2663              	.Ldebug_ranges0:
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 79


 2664 0000 00000000 		.4byte	.LFB45
 2665 0004 02000000 		.4byte	.LFE45
 2666 0008 00000000 		.4byte	.LFB54
 2667 000c 1E000000 		.4byte	.LFE54
 2668 0010 00000000 		.4byte	.LFB53
 2669 0014 1E000000 		.4byte	.LFE53
 2670 0018 00000000 		.4byte	.LFB52
 2671 001c 20000000 		.4byte	.LFE52
 2672 0020 00000000 		.4byte	.LFB51
 2673 0024 24000000 		.4byte	.LFE51
 2674 0028 00000000 		.4byte	.LFB50
 2675 002c 16000000 		.4byte	.LFE50
 2676 0030 00000000 		.4byte	.LFB55
 2677 0034 12000000 		.4byte	.LFE55
 2678 0038 00000000 		.4byte	.LFB49
 2679 003c A0000000 		.4byte	.LFE49
 2680 0040 00000000 		.4byte	.LFB48
 2681 0044 24000000 		.4byte	.LFE48
 2682 0048 00000000 		.4byte	.LFB47
 2683 004c 2C000000 		.4byte	.LFE47
 2684 0050 00000000 		.4byte	.LFB46
 2685 0054 1C000000 		.4byte	.LFE46
 2686 0058 00000000 		.4byte	0
 2687 005c 00000000 		.4byte	0
 2688              		.section	.debug_line,"",%progbits
 2689              	.Ldebug_line0:
 2690 0000 EE020000 		.section	.debug_str,"MS",%progbits,1
 2690      0200B401 
 2690      00000201 
 2690      FB0E0D00 
 2690      01010101 
 2691              	.LASF61:
 2692 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2692      656E7365 
 2692      5F464C41 
 2692      53485F53 
 2692      54525543 
 2693              	.LASF25:
 2694 0016 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2694      656E7365 
 2694      5F4C4F57 
 2694      5F42534C 
 2694      4E5F5253 
 2695              	.LASF85:
 2696 0031 72657375 		.ascii	"result\000"
 2696      6C7400
 2697              	.LASF43:
 2698 0038 62736C6E 		.ascii	"bsln\000"
 2698      00
 2699              	.LASF69:
 2700 003d 73656E73 		.ascii	"sensorId\000"
 2700      6F724964 
 2700      00
 2701              	.LASF89:
 2702 0046 62736C6E 		.ascii	"bslnStatus\000"
 2702      53746174 
 2702      757300
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 80


 2703              	.LASF39:
 2704 0051 6C6F7742 		.ascii	"lowBslnRst\000"
 2704      736C6E52 
 2704      737400
 2705              	.LASF45:
 2706 005c 64696666 		.ascii	"diff\000"
 2706      00
 2707              	.LASF55:
 2708 0061 746F7461 		.ascii	"totalNumSns\000"
 2708      6C4E756D 
 2708      536E7300 
 2709              	.LASF74:
 2710 006d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2710      656E7365 
 2710      5F496E69 
 2710      7469616C 
 2710      697A6541 
 2711              	.LASF49:
 2712 008d 70747232 		.ascii	"ptr2SnsFlash\000"
 2712      536E7346 
 2712      6C617368 
 2712      00
 2713              	.LASF5:
 2714 009a 73686F72 		.ascii	"short int\000"
 2714      7420696E 
 2714      7400
 2715              	.LASF75:
 2716 00a4 696E7075 		.ascii	"input\000"
 2716      7400
 2717              	.LASF30:
 2718 00aa 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2718      656E7365 
 2718      5F57445F 
 2718      544F5543 
 2718      48504144 
 2719              	.LASF59:
 2720 00c1 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2720      656E7365 
 2720      5F464C41 
 2720      53485F57 
 2720      445F5354 
 2721              	.LASF83:
 2722 00da 64696666 		.ascii	"difference\000"
 2722      6572656E 
 2722      636500
 2723              	.LASF91:
 2724 00e5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2724      43313120 
 2724      352E342E 
 2724      31203230 
 2724      31363036 
 2725 0118 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2725      20726576 
 2725      6973696F 
 2725      6E203233 
 2725      37373135 
 2726 014b 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 81


 2726      67202D66 
 2726      66756E63 
 2726      74696F6E 
 2726      2D736563 
 2727              	.LASF36:
 2728 0177 6E4E6F69 		.ascii	"nNoiseTh\000"
 2728      73655468 
 2728      00
 2729              	.LASF63:
 2730 0180 77645479 		.ascii	"wdType\000"
 2730      706500
 2731              	.LASF78:
 2732 0187 66696C74 		.ascii	"filteredOutput\000"
 2732      65726564 
 2732      4F757470 
 2732      757400
 2733              	.LASF10:
 2734 0196 5F5F7569 		.ascii	"__uint32_t\000"
 2734      6E743332 
 2734      5F7400
 2735              	.LASF86:
 2736 01a1 68697374 		.ascii	"history\000"
 2736      6F727900 
 2737              	.LASF41:
 2738 01a9 736E7343 		.ascii	"snsClkSource\000"
 2738      6C6B536F 
 2738      75726365 
 2738      00
 2739              	.LASF7:
 2740 01b6 5F5F7569 		.ascii	"__uint16_t\000"
 2740      6E743136 
 2740      5F7400
 2741              	.LASF26:
 2742 01c1 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2742      656E7365 
 2742      5F57445F 
 2742      42555454 
 2742      4F4E5F45 
 2743              	.LASF35:
 2744 01d6 6E6F6973 		.ascii	"noiseTh\000"
 2744      65546800 
 2745              	.LASF22:
 2746 01de 75696E74 		.ascii	"uint16\000"
 2746      313600
 2747              	.LASF87:
 2748 01e5 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2748      656E7365 
 2748      5F557064 
 2748      61746553 
 2748      656E736F 
 2749              	.LASF53:
 2750 0203 70747232 		.ascii	"ptr2DebounceArr\000"
 2750      4465626F 
 2750      756E6365 
 2750      41727200 
 2751              	.LASF13:
 2752 0213 75696E74 		.ascii	"uint8_t\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 82


 2752      385F7400 
 2753              	.LASF21:
 2754 021b 75696E74 		.ascii	"uint8\000"
 2754      3800
 2755              	.LASF58:
 2756 0221 6E756D52 		.ascii	"numRows\000"
 2756      6F777300 
 2757              	.LASF81:
 2758 0229 70747257 		.ascii	"ptrWidgetRam\000"
 2758      69646765 
 2758      7452616D 
 2758      00
 2759              	.LASF40:
 2760 0236 736E7343 		.ascii	"snsClk\000"
 2760      6C6B00
 2761              	.LASF65:
 2762 023d 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2762      656E7365 
 2762      5F467449 
 2762      6E697469 
 2762      616C697A 
 2763              	.LASF79:
 2764 0262 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2764      656E7365 
 2764      5F467449 
 2764      49523173 
 2764      744F7264 
 2765              	.LASF31:
 2766 0279 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2766      656E7365 
 2766      5F57445F 
 2766      50524F58 
 2766      494D4954 
 2767              	.LASF18:
 2768 0291 666C6F61 		.ascii	"float\000"
 2768      7400
 2769              	.LASF1:
 2770 0297 6C6F6E67 		.ascii	"long long int\000"
 2770      206C6F6E 
 2770      6720696E 
 2770      7400
 2771              	.LASF17:
 2772 02a5 63686172 		.ascii	"char\000"
 2772      00
 2773              	.LASF9:
 2774 02aa 6C6F6E67 		.ascii	"long int\000"
 2774      20696E74 
 2774      00
 2775              	.LASF77:
 2776 02b3 73686966 		.ascii	"shift\000"
 2776      7400
 2777              	.LASF56:
 2778 02b9 77646774 		.ascii	"wdgtType\000"
 2778      54797065 
 2778      00
 2779              	.LASF92:
 2780 02c2 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Filter.c\000"
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 83


 2780      72617465 
 2780      645F536F 
 2780      75726365 
 2780      5C50536F 
 2781              	.LASF16:
 2782 02eb 73697A65 		.ascii	"sizetype\000"
 2782      74797065 
 2782      00
 2783              	.LASF24:
 2784 02f4 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2784      656E7365 
 2784      5F544852 
 2784      4553484F 
 2784      4C445F54 
 2785              	.LASF46:
 2786 030c 6E656742 		.ascii	"negBslnRstCnt\000"
 2786      736C6E52 
 2786      7374436E 
 2786      7400
 2787              	.LASF6:
 2788 031a 5F5F7569 		.ascii	"__uint8_t\000"
 2788      6E74385F 
 2788      7400
 2789              	.LASF38:
 2790 0324 6F6E4465 		.ascii	"onDebounce\000"
 2790      626F756E 
 2790      636500
 2791              	.LASF34:
 2792 032f 66696E67 		.ascii	"fingerTh\000"
 2792      65725468 
 2792      00
 2793              	.LASF57:
 2794 0338 6E756D43 		.ascii	"numCols\000"
 2794      6F6C7300 
 2795              	.LASF67:
 2796 0340 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2796      656E7365 
 2796      5F496E69 
 2796      7469616C 
 2796      697A6553 
 2797              	.LASF37:
 2798 0362 68797374 		.ascii	"hysteresis\000"
 2798      65726573 
 2798      697300
 2799              	.LASF2:
 2800 036d 6C6F6E67 		.ascii	"long double\000"
 2800      20646F75 
 2800      626C6500 
 2801              	.LASF4:
 2802 0379 756E7369 		.ascii	"unsigned char\000"
 2802      676E6564 
 2802      20636861 
 2802      7200
 2803              	.LASF71:
 2804 0387 70747257 		.ascii	"ptrWidget\000"
 2804      69646765 
 2804      7400
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 84


 2805              	.LASF20:
 2806 0391 63795F73 		.ascii	"cy_status\000"
 2806      74617475 
 2806      7300
 2807              	.LASF3:
 2808 039b 7369676E 		.ascii	"signed char\000"
 2808      65642063 
 2808      68617200 
 2809              	.LASF12:
 2810 03a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2810      206C6F6E 
 2810      6720756E 
 2810      7369676E 
 2810      65642069 
 2811              	.LASF15:
 2812 03be 75696E74 		.ascii	"uint32_t\000"
 2812      33325F74 
 2812      00
 2813              	.LASF54:
 2814 03c7 73746174 		.ascii	"staticConfig\000"
 2814      6963436F 
 2814      6E666967 
 2814      00
 2815              	.LASF0:
 2816 03d4 756E7369 		.ascii	"unsigned int\000"
 2816      676E6564 
 2816      20696E74 
 2816      00
 2817              	.LASF14:
 2818 03e1 75696E74 		.ascii	"uint16_t\000"
 2818      31365F74 
 2818      00
 2819              	.LASF70:
 2820 03ea 66726571 		.ascii	"freqChannel\000"
 2820      4368616E 
 2820      6E656C00 
 2821              	.LASF93:
 2822 03f6 433A5C55 		.ascii	"C:\\Users\\zinch\\Documents\\pokproj\\VoiceRepeater"
 2822      73657273 
 2822      5C7A696E 
 2822      63685C44 
 2822      6F63756D 
 2823 0424 5F6F6E50 		.ascii	"_onPSoC6.cydsn\000"
 2823      536F4336 
 2823      2E637964 
 2823      736E00
 2824              	.LASF48:
 2825 0433 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2825      656E7365 
 2825      5F52414D 
 2825      5F534E53 
 2825      5F535452 
 2826              	.LASF88:
 2827 044b 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2827      656E7365 
 2827      5F557064 
 2827      61746557 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 85


 2827      69646765 
 2828              	.LASF27:
 2829 0469 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2829      656E7365 
 2829      5F57445F 
 2829      4C494E45 
 2829      41525F53 
 2830              	.LASF8:
 2831 0485 73686F72 		.ascii	"short unsigned int\000"
 2831      7420756E 
 2831      7369676E 
 2831      65642069 
 2831      6E7400
 2832              	.LASF90:
 2833 0498 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2833      656E7365 
 2833      5F557064 
 2833      61746541 
 2833      6C6C4261 
 2834              	.LASF94:
 2835 04b4 43617053 		.ascii	"CapSense_FtInitialize\000"
 2835      656E7365 
 2835      5F467449 
 2835      6E697469 
 2835      616C697A 
 2836              	.LASF47:
 2837 04ca 69646163 		.ascii	"idacComp\000"
 2837      436F6D70 
 2837      00
 2838              	.LASF66:
 2839 04d3 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2839      656E7365 
 2839      5F467449 
 2839      6E697469 
 2839      616C697A 
 2840              	.LASF33:
 2841 04f1 7265736F 		.ascii	"resolution\000"
 2841      6C757469 
 2841      6F6E00
 2842              	.LASF64:
 2843 04fc 6368616E 		.ascii	"channel\000"
 2843      6E656C00 
 2844              	.LASF80:
 2845 0504 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2845      656E7365 
 2845      5F467455 
 2845      70646174 
 2845      65426173 
 2846              	.LASF73:
 2847 051e 73656E73 		.ascii	"sensorsNumber\000"
 2847      6F72734E 
 2847      756D6265 
 2847      7200
 2848              	.LASF50:
 2849 052c 70747232 		.ascii	"ptr2WdgtRam\000"
 2849      57646774 
 2849      52616D00 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 86


 2850              	.LASF84:
 2851 0538 62617365 		.ascii	"baselineCoeff\000"
 2851      6C696E65 
 2851      436F6566 
 2851      6600
 2852              	.LASF28:
 2853 0546 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2853      656E7365 
 2853      5F57445F 
 2853      52414449 
 2853      414C5F53 
 2854              	.LASF68:
 2855 0562 77696467 		.ascii	"widgetId\000"
 2855      65744964 
 2855      00
 2856              	.LASF23:
 2857 056b 75696E74 		.ascii	"uint32\000"
 2857      333200
 2858              	.LASF11:
 2859 0572 6C6F6E67 		.ascii	"long unsigned int\000"
 2859      20756E73 
 2859      69676E65 
 2859      6420696E 
 2859      7400
 2860              	.LASF82:
 2861 0584 7369676E 		.ascii	"sign\000"
 2861      00
 2862              	.LASF19:
 2863 0589 646F7562 		.ascii	"double\000"
 2863      6C6500
 2864              	.LASF44:
 2865 0590 62736C6E 		.ascii	"bslnExt\000"
 2865      45787400 
 2866              	.LASF32:
 2867 0598 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2867      656E7365 
 2867      5F57445F 
 2867      54595045 
 2867      5F454E55 
 2868              	.LASF76:
 2869 05ae 70726576 		.ascii	"prevOutput\000"
 2869      4F757470 
 2869      757400
 2870              	.LASF29:
 2871 05b9 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2871      656E7365 
 2871      5F57445F 
 2871      4D415452 
 2871      49585F42 
 2872              	.LASF51:
 2873 05d5 70747232 		.ascii	"ptr2SnsRam\000"
 2873      536E7352 
 2873      616D00
 2874              	.LASF72:
 2875 05e0 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 2875      656E7365 
 2875      5F496E69 
ARM GAS  C:\Users\zinch\AppData\Local\Temp\ccTnTEW6.s 			page 87


 2875      7469616C 
 2875      697A6557 
 2876              	.LASF52:
 2877 0602 70747232 		.ascii	"ptr2FltrHistory\000"
 2877      466C7472 
 2877      48697374 
 2877      6F727900 
 2878              	.LASF60:
 2879 0612 77646774 		.ascii	"wdgtArray\000"
 2879      41727261 
 2879      7900
 2880              	.LASF95:
 2881 061c 43617053 		.ascii	"CapSense_dsFlash\000"
 2881      656E7365 
 2881      5F647346 
 2881      6C617368 
 2881      00
 2882              	.LASF42:
 2883 062d 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2883      656E7365 
 2883      5F52414D 
 2883      5F57445F 
 2883      42415345 
 2884              	.LASF62:
 2885 0649 70747253 		.ascii	"ptrSensor\000"
 2885      656E736F 
 2885      7200
 2886              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
